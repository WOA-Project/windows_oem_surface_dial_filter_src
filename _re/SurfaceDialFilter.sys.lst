.text:0000000140001000 ;
.text:0000000140001000 ; +-------------------------------------------------------------------------+
.text:0000000140001000 ; |      This file was generated by The Interactive Disassembler (IDA)      |
.text:0000000140001000 ; |           Copyright (c) 2022 Hex-Rays, <support@hex-rays.com>           |
.text:0000000140001000 ; |                      License info: 48-70B8-2E4F-65                      |
.text:0000000140001000 ; |                               Hex-Rays SA                               |
.text:0000000140001000 ; +-------------------------------------------------------------------------+
.text:0000000140001000 ;
.text:0000000140001000 ; Input SHA256 : A788A2DE87A4EF0DA8BBCBD3377FBECE9DBD1E40A11575D971B99E09AFF14469
.text:0000000140001000 ; Input MD5    : 9C462B59661E9FEF06BF24F1A5558F05
.text:0000000140001000 ; Input CRC32  : 3BC752F6
.text:0000000140001000
.text:0000000140001000 ; File Name   : C:\Users\Gus\Documents\SurfaceDial\SurfaceDialFilter.sys
.text:0000000140001000 ; Format      : Portable executable for AMD64 (PE)
.text:0000000140001000 ; Imagebase   : 140000000
.text:0000000140001000 ; Hash        : E722D59D
.text:0000000140001000 ; Section 1. (virtual address 00001000)
.text:0000000140001000 ; Virtual size                  : 00009C98 (  40088.)
.text:0000000140001000 ; Section size in file          : 00009E00 (  40448.)
.text:0000000140001000 ; Offset to raw data for section: 00000400
.text:0000000140001000 ; Flags 68000020: Text Not pageable Executable Readable
.text:0000000140001000 ; Alignment     : default
.text:0000000140001000 ; PDB File Name : SurfaceDialFilter.pdb
.text:0000000140001000
.text:0000000140001000                 .686p
.text:0000000140001000                 .mmx
.text:0000000140001000                 .model flat
.text:0000000140001000
.text:0000000140001000                 include SurfaceDialFilter.sys.inc
.text:0000000140001000
.text:0000000140001000 ; ===========================================================================
.text:0000000140001000
.text:0000000140001000 ; Segment type: Pure code
.text:0000000140001000 ; Segment permissions: Read/Execute
.text:0000000140001000 _text           segment para public 'CODE' use64
.text:0000000140001000                 assume cs:_text
.text:0000000140001000                 ;org 140001000h
.text:0000000140001000                 assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing
.text:0000000140001000
.text:0000000140001000 ; =============== S U B R O U T I N E =======================================
.text:0000000140001000
.text:0000000140001000
.text:0000000140001000 ; __int64 __fastcall sub_140001000(char, const char *, char, const wchar_t *)
.text:0000000140001000 sub_140001000   proc near               ; CODE XREF: sub_140007610+264↓p
.text:0000000140001000                                         ; sub_140007B20+108↓p
.text:0000000140001000                                         ; DATA XREF: ...
.text:0000000140001000                 mov     r11, rsp
.text:0000000140001003                 sub     rsp, 48h
.text:0000000140001007                 mov     rax, r9
.text:000000014000100A                 test    cl, cl
.text:000000014000100C                 jnz     short loc_140001051
.text:000000014000100E                 lea     rcx, off_14000D008
.text:0000000140001015                 cmp     cs:off_14000D008, rcx
.text:000000014000101C                 jz      short loc_140001051
.text:000000014000101E                 mov     rcx, cs:DeviceObject
.text:0000000140001025                 mov     r9d, 0Ah
.text:000000014000102B                 mov     [r11-10h], rax
.text:000000014000102F                 lea     rax, unk_14000B1B0
.text:0000000140001036                 mov     [r11-18h], r8d
.text:000000014000103A                 mov     [r11-20h], rdx
.text:000000014000103E                 mov     dl, 2
.text:0000000140001040                 mov     rcx, [rcx+40h]
.text:0000000140001044                 lea     r8d, [r9-9]
.text:0000000140001048                 mov     [r11-28h], rax
.text:000000014000104C                 call    sub_140001058
.text:0000000140001051
.text:0000000140001051 loc_140001051:                          ; CODE XREF: sub_140001000+C↑j
.text:0000000140001051                                         ; sub_140001000+1C↑j
.text:0000000140001051                 add     rsp, 48h
.text:0000000140001055                 retn
.text:0000000140001055 sub_140001000   endp
.text:0000000140001055
.text:0000000140001055 ; ---------------------------------------------------------------------------
.text:0000000140001056 algn_140001056:                         ; DATA XREF: .pdata:ExceptionDir↓o
.text:0000000140001056                 align 8
.text:0000000140001058
.text:0000000140001058 ; =============== S U B R O U T I N E =======================================
.text:0000000140001058
.text:0000000140001058
.text:0000000140001058 ; __int64 __fastcall sub_140001058(__int64, unsigned __int8, unsigned int, unsigned __int16, __int64, const char *, char, const wchar_t *)
.text:0000000140001058 sub_140001058   proc near               ; CODE XREF: sub_140001000+4C↑p
.text:0000000140001058                                         ; DATA XREF: .pdata:000000014000E00C↓o
.text:0000000140001058
.text:0000000140001058 var_A8          = qword ptr -0A8h
.text:0000000140001058 var_A0          = qword ptr -0A0h
.text:0000000140001058 var_98          = qword ptr -98h
.text:0000000140001058 var_90          = qword ptr -90h
.text:0000000140001058 var_88          = qword ptr -88h
.text:0000000140001058 var_80          = qword ptr -80h
.text:0000000140001058 var_78          = qword ptr -78h
.text:0000000140001058 var_70          = qword ptr -70h
.text:0000000140001058 var_68          = dword ptr -68h
.text:0000000140001058 var_60          = qword ptr -60h
.text:0000000140001058 var_58          = qword ptr -58h
.text:0000000140001058 arg_20          = qword ptr  28h
.text:0000000140001058 arg_28          = qword ptr  30h
.text:0000000140001058 arg_30          = byte ptr  38h
.text:0000000140001058 arg_38          = qword ptr  40h
.text:0000000140001058
.text:0000000140001058                 push    rbx
.text:000000014000105A                 push    rbp
.text:000000014000105B                 push    rsi
.text:000000014000105C                 push    rdi
.text:000000014000105D                 push    r12
.text:000000014000105F                 push    r13
.text:0000000140001061                 push    r14
.text:0000000140001063                 push    r15
.text:0000000140001065                 sub     rsp, 88h
.text:000000014000106C                 mov     r11, cs:DeviceObject
.text:0000000140001073                 lea     r14, aNull      ; "NULL"
.text:000000014000107A                 mov     r10, [rsp+0C8h+arg_20]
.text:0000000140001082                 lea     r15, aNull_0    ; "NULL"
.text:0000000140001089                 mov     rsi, [rsp+0C8h+arg_28]
.text:0000000140001091                 or      rbx, 0FFFFFFFFFFFFFFFFh
.text:0000000140001095                 mov     rdi, [rsp+0C8h+arg_38]
.text:000000014000109D                 mov     eax, r8d
.text:00000001400010A0                 mov     [rsp+0C8h+var_58], rcx
.text:00000001400010A5                 movzx   r13d, r9w
.text:00000001400010A9                 mov     r9d, eax
.text:00000001400010AC                 shr     r9, 10h
.text:00000001400010B0                 lea     r8d, [rax-1]
.text:00000001400010B4                 mov     [rsp+0C8h+var_68], eax
.text:00000001400010B8                 mov     ecx, r8d
.text:00000001400010BB                 movzx   r12d, dl
.text:00000001400010BF                 shr     rcx, 5
.text:00000001400010C3                 and     r8d, 1Fh
.text:00000001400010C7                 and     ecx, 7FFh
.text:00000001400010CD                 mov     [rsp+0C8h+var_60], r10
.text:00000001400010D2                 lea     rax, [r9+r9*4]
.text:00000001400010D6                 lea     rdx, [rcx+rax*4]
.text:00000001400010DA                 mov     eax, [r11+rdx*4+2Ch]
.text:00000001400010DF                 xor     edx, edx
.text:00000001400010E1                 bt      eax, r8d
.text:00000001400010E5                 lea     ebp, [rdx+0Ah]
.text:00000001400010E8                 jnb     loc_1400011A4
.text:00000001400010EE                 lea     r10, [r9+r9*4]
.text:00000001400010F2                 add     r10, r10
.text:00000001400010F5                 cmp     [r11+r10*8+29h], r12b
.text:00000001400010FA                 jb      loc_14000119F
.text:0000000140001100                 test    rdi, rdi
.text:0000000140001103                 jz      short loc_14000111B
.text:0000000140001105                 mov     rax, rbx
.text:0000000140001108
.text:0000000140001108 loc_140001108:                          ; CODE XREF: sub_140001058+B7↓j
.text:0000000140001108                 inc     rax
.text:000000014000110B                 cmp     [rdi+rax*2], dx
.text:000000014000110F                 jnz     short loc_140001108
.text:0000000140001111                 lea     r9, ds:2[rax*2]
.text:0000000140001119                 jmp     short loc_14000111E
.text:000000014000111B ; ---------------------------------------------------------------------------
.text:000000014000111B
.text:000000014000111B loc_14000111B:                          ; CODE XREF: sub_140001058+AB↑j
.text:000000014000111B                 mov     r9, rbp
.text:000000014000111E
.text:000000014000111E loc_14000111E:                          ; CODE XREF: sub_140001058+C1↑j
.text:000000014000111E                 test    rsi, rsi
.text:0000000140001121                 jz      short loc_140001134
.text:0000000140001123                 mov     r8, rbx
.text:0000000140001126
.text:0000000140001126 loc_140001126:                          ; CODE XREF: sub_140001058+D5↓j
.text:0000000140001126                 inc     r8
.text:0000000140001129                 cmp     [rsi+r8], dl
.text:000000014000112D                 jnz     short loc_140001126
.text:000000014000112F                 inc     r8
.text:0000000140001132                 jmp     short loc_14000113A
.text:0000000140001134 ; ---------------------------------------------------------------------------
.text:0000000140001134
.text:0000000140001134 loc_140001134:                          ; CODE XREF: sub_140001058+C9↑j
.text:0000000140001134                 mov     r8d, 5
.text:000000014000113A
.text:000000014000113A loc_14000113A:                          ; CODE XREF: sub_140001058+DA↑j
.text:000000014000113A                 mov     rax, cs:qword_14000D0E8
.text:0000000140001141                 test    rdi, rdi
.text:0000000140001144                 mov     rcx, r14
.text:0000000140001147                 mov     rdx, r15
.text:000000014000114A                 cmovnz  rcx, rdi
.text:000000014000114E                 test    rsi, rsi
.text:0000000140001151                 cmovnz  rdx, rsi
.text:0000000140001155                 and     [rsp+0C8h+var_78], 0
.text:000000014000115B                 mov     [rsp+0C8h+var_80], r9
.text:0000000140001160                 mov     r9d, r13d
.text:0000000140001163                 mov     [rsp+0C8h+var_88], rcx
.text:0000000140001168                 lea     rcx, [rsp+0C8h+arg_30]
.text:0000000140001170                 mov     [rsp+0C8h+var_90], 4
.text:0000000140001179                 mov     [rsp+0C8h+var_98], rcx
.text:000000014000117E                 mov     rcx, [r11+r10*8+18h]
.text:0000000140001183                 mov     [rsp+0C8h+var_A0], r8
.text:0000000140001188                 mov     r8, [rsp+0C8h+var_60]
.text:000000014000118D                 mov     [rsp+0C8h+var_A8], rdx
.text:0000000140001192                 mov     edx, 2Bh ; '+'
.text:0000000140001197                 call    cs:__guard_dispatch_icall_fptr
.text:000000014000119D                 xor     edx, edx
.text:000000014000119F
.text:000000014000119F loc_14000119F:                          ; CODE XREF: sub_140001058+A2↑j
.text:000000014000119F                 mov     r10, [rsp+0C8h+var_60]
.text:00000001400011A4
.text:00000001400011A4 loc_1400011A4:                          ; CODE XREF: sub_140001058+90↑j
.text:00000001400011A4                 test    rdi, rdi
.text:00000001400011A7                 jz      short loc_1400011BD
.text:00000001400011A9                 mov     rax, rbx
.text:00000001400011AC
.text:00000001400011AC loc_1400011AC:                          ; CODE XREF: sub_140001058+15B↓j
.text:00000001400011AC                 inc     rax
.text:00000001400011AF                 cmp     [rdi+rax*2], dx
.text:00000001400011B3                 jnz     short loc_1400011AC
.text:00000001400011B5                 lea     rbp, ds:2[rax*2]
.text:00000001400011BD
.text:00000001400011BD loc_1400011BD:                          ; CODE XREF: sub_140001058+14F↑j
.text:00000001400011BD                 test    rsi, rsi
.text:00000001400011C0                 jz      short loc_1400011CF
.text:00000001400011C2
.text:00000001400011C2 loc_1400011C2:                          ; CODE XREF: sub_140001058+170↓j
.text:00000001400011C2                 inc     rbx
.text:00000001400011C5                 cmp     [rsi+rbx], dl
.text:00000001400011C8                 jnz     short loc_1400011C2
.text:00000001400011CA                 inc     rbx
.text:00000001400011CD                 jmp     short loc_1400011D4
.text:00000001400011CF ; ---------------------------------------------------------------------------
.text:00000001400011CF
.text:00000001400011CF loc_1400011CF:                          ; CODE XREF: sub_140001058+168↑j
.text:00000001400011CF                 mov     ebx, 5
.text:00000001400011D4
.text:00000001400011D4 loc_1400011D4:                          ; CODE XREF: sub_140001058+175↑j
.text:00000001400011D4                 mov     r8d, [rsp+0C8h+var_68]
.text:00000001400011D9                 lea     rax, [rsp+0C8h+arg_30]
.text:00000001400011E1                 mov     rcx, [rsp+0C8h+var_58]
.text:00000001400011E6                 test    rdi, rdi
.text:00000001400011E9                 mov     [rsp+0C8h+var_70], rdx
.text:00000001400011EE                 mov     r9, r10
.text:00000001400011F1                 mov     [rsp+0C8h+var_78], rbp
.text:00000001400011F6                 cmovnz  r14, rdi
.text:00000001400011FA                 mov     [rsp+0C8h+var_80], r14
.text:00000001400011FF                 test    rsi, rsi
.text:0000000140001202                 mov     [rsp+0C8h+var_88], 4
.text:000000014000120B                 mov     edx, r12d
.text:000000014000120E                 mov     [rsp+0C8h+var_90], rax
.text:0000000140001213                 cmovnz  r15, rsi
.text:0000000140001217                 mov     [rsp+0C8h+var_98], rbx
.text:000000014000121C                 mov     [rsp+0C8h+var_A0], r15
.text:0000000140001221                 mov     word ptr [rsp+0C8h+var_A8], r13w
.text:0000000140001227                 call    WppAutoLogTrace
.text:000000014000122C                 add     rsp, 88h
.text:0000000140001233                 pop     r15
.text:0000000140001235                 pop     r14
.text:0000000140001237                 pop     r13
.text:0000000140001239                 pop     r12
.text:000000014000123B                 pop     rdi
.text:000000014000123C                 pop     rsi
.text:000000014000123D                 pop     rbp
.text:000000014000123E                 pop     rbx
.text:000000014000123F                 retn
.text:000000014000123F sub_140001058   endp
.text:000000014000123F
.text:0000000140001240
.text:0000000140001240 ; =============== S U B R O U T I N E =======================================
.text:0000000140001240
.text:0000000140001240
.text:0000000140001240 ; __m128 *__fastcall sub_140001240(PHIDP_DEVICE_DESC DeviceDescription)
.text:0000000140001240 sub_140001240   proc near               ; CODE XREF: sub_1400012E8+353↓p
.text:0000000140001240                                         ; sub_140001B58+32E↓p
.text:0000000140001240                                         ; DATA XREF: ...
.text:0000000140001240
.text:0000000140001240 var_18          = qword ptr -18h
.text:0000000140001240 arg_0           = qword ptr  8
.text:0000000140001240 arg_8           = qword ptr  10h
.text:0000000140001240
.text:0000000140001240                 mov     [rsp+arg_0], rbx
.text:0000000140001245                 mov     [rsp+arg_8], rbp
.text:000000014000124A                 push    rdi
.text:000000014000124B                 sub     rsp, 30h
.text:000000014000124F                 mov     rbx, rcx
.text:0000000140001252                 lea     rdi, off_14000D008
.text:0000000140001259                 cmp     cs:off_14000D008, rdi
.text:0000000140001260                 lea     rbp, unk_14000B1C0
.text:0000000140001267                 jz      short loc_140001291
.text:0000000140001269                 mov     rcx, cs:DeviceObject
.text:0000000140001270                 cmp     word ptr [rcx+48h], 0
.text:0000000140001275                 jz      short loc_140001291
.text:0000000140001277                 mov     rcx, [rcx+40h]
.text:000000014000127B                 mov     r9d, 0Eh
.text:0000000140001281                 mov     dl, 5
.text:0000000140001283                 mov     [rsp+38h+var_18], rbp
.text:0000000140001288                 lea     r8d, [r9-0Ch]
.text:000000014000128C                 call    sub_1400016A8
.text:0000000140001291
.text:0000000140001291 loc_140001291:                          ; CODE XREF: sub_140001240+27↑j
.text:0000000140001291                                         ; sub_140001240+35↑j
.text:0000000140001291                 mov     rcx, rbx        ; DeviceDescription
.text:0000000140001294                 call    HidP_FreeCollectionDescription
.text:0000000140001299                 xor     edx, edx
.text:000000014000129B                 mov     rcx, rbx
.text:000000014000129E                 lea     r8d, [rdx+40h]
.text:00000001400012A2                 call    sub_14000A4C0
.text:00000001400012A7                 cmp     cs:off_14000D008, rdi
.text:00000001400012AE                 jz      short loc_1400012D8
.text:00000001400012B0                 mov     rcx, cs:DeviceObject
.text:00000001400012B7                 cmp     word ptr [rcx+48h], 0
.text:00000001400012BC                 jz      short loc_1400012D8
.text:00000001400012BE                 mov     rcx, [rcx+40h]
.text:00000001400012C2                 mov     r9d, 0Fh
.text:00000001400012C8                 mov     dl, 5
.text:00000001400012CA                 mov     [rsp+38h+var_18], rbp
.text:00000001400012CF                 lea     r8d, [r9-0Dh]
.text:00000001400012D3                 call    sub_1400016A8
.text:00000001400012D8
.text:00000001400012D8 loc_1400012D8:                          ; CODE XREF: sub_140001240+6E↑j
.text:00000001400012D8                                         ; sub_140001240+7C↑j
.text:00000001400012D8                 mov     rbx, [rsp+38h+arg_0]
.text:00000001400012DD                 mov     rbp, [rsp+38h+arg_8]
.text:00000001400012E2                 add     rsp, 30h
.text:00000001400012E6                 pop     rdi
.text:00000001400012E7                 retn
.text:00000001400012E7 sub_140001240   endp
.text:00000001400012E7
.text:00000001400012E8
.text:00000001400012E8 ; =============== S U B R O U T I N E =======================================
.text:00000001400012E8
.text:00000001400012E8 ; Attributes: bp-based frame fpd=90h
.text:00000001400012E8
.text:00000001400012E8 ; __int64 __fastcall sub_1400012E8(__int16, __int16, __int16, __int16, PHIDP_DEVICE_DESC DeviceDescription)
.text:00000001400012E8 sub_1400012E8   proc near               ; CODE XREF: sub_140004314+2DB↓p
.text:00000001400012E8                                         ; DATA XREF: .pdata:000000014000E018↓o ...
.text:00000001400012E8
.text:00000001400012E8 var_170         = qword ptr -170h
.text:00000001400012E8 var_168         = qword ptr -168h
.text:00000001400012E8 ReportDesc      = byte ptr -160h
.text:00000001400012E8 var_15C         = dword ptr -15Ch
.text:00000001400012E8 var_158         = dword ptr -158h
.text:00000001400012E8 var_154         = dword ptr -154h
.text:00000001400012E8 var_150         = dword ptr -150h
.text:00000001400012E8 var_14C         = dword ptr -14Ch
.text:00000001400012E8 var_148         = dword ptr -148h
.text:00000001400012E8 var_144         = dword ptr -144h
.text:00000001400012E8 var_140         = dword ptr -140h
.text:00000001400012E8 var_13C         = dword ptr -13Ch
.text:00000001400012E8 var_138         = dword ptr -138h
.text:00000001400012E8 var_134         = dword ptr -134h
.text:00000001400012E8 var_130         = dword ptr -130h
.text:00000001400012E8 var_12C         = dword ptr -12Ch
.text:00000001400012E8 var_128         = dword ptr -128h
.text:00000001400012E8 var_124         = dword ptr -124h
.text:00000001400012E8 var_120         = dword ptr -120h
.text:00000001400012E8 var_11C         = dword ptr -11Ch
.text:00000001400012E8 var_118         = dword ptr -118h
.text:00000001400012E8 var_114         = dword ptr -114h
.text:00000001400012E8 var_110         = byte ptr -110h
.text:00000001400012E8 var_10F         = byte ptr -10Fh
.text:00000001400012E8 var_10E         = byte ptr -10Eh
.text:00000001400012E8 var_10D         = byte ptr -10Dh
.text:00000001400012E8 var_10C         = byte ptr -10Ch
.text:00000001400012E8 var_10B         = dword ptr -10Bh
.text:00000001400012E8 var_107         = word ptr -107h
.text:00000001400012E8 var_105         = byte ptr -105h
.text:00000001400012E8 var_104         = byte ptr -104h
.text:00000001400012E8 var_103         = byte ptr -103h
.text:00000001400012E8 var_102         = byte ptr -102h
.text:00000001400012E8 var_101         = byte ptr -101h
.text:00000001400012E8 var_100         = byte ptr -100h
.text:00000001400012E8 var_FF          = dword ptr -0FFh
.text:00000001400012E8 var_FB          = dword ptr -0FBh
.text:00000001400012E8 var_F7          = dword ptr -0F7h
.text:00000001400012E8 var_F3          = dword ptr -0F3h
.text:00000001400012E8 var_EF          = dword ptr -0EFh
.text:00000001400012E8 var_EB          = dword ptr -0EBh
.text:00000001400012E8 var_E7          = dword ptr -0E7h
.text:00000001400012E8 var_E3          = dword ptr -0E3h
.text:00000001400012E8 var_DF          = dword ptr -0DFh
.text:00000001400012E8 var_DB          = dword ptr -0DBh
.text:00000001400012E8 var_D7          = dword ptr -0D7h
.text:00000001400012E8 var_D3          = dword ptr -0D3h
.text:00000001400012E8 var_CF          = dword ptr -0CFh
.text:00000001400012E8 var_CB          = dword ptr -0CBh
.text:00000001400012E8 var_C7          = dword ptr -0C7h
.text:00000001400012E8 var_C3          = dword ptr -0C3h
.text:00000001400012E8 var_BF          = dword ptr -0BFh
.text:00000001400012E8 var_BB          = dword ptr -0BBh
.text:00000001400012E8 var_B7          = dword ptr -0B7h
.text:00000001400012E8 var_B3          = dword ptr -0B3h
.text:00000001400012E8 var_AF          = dword ptr -0AFh
.text:00000001400012E8 var_AB          = dword ptr -0ABh
.text:00000001400012E8 var_A7          = dword ptr -0A7h
.text:00000001400012E8 var_A3          = dword ptr -0A3h
.text:00000001400012E8 var_9F          = dword ptr -9Fh
.text:00000001400012E8 var_9B          = dword ptr -9Bh
.text:00000001400012E8 var_97          = dword ptr -97h
.text:00000001400012E8 var_93          = dword ptr -93h
.text:00000001400012E8 var_8F          = dword ptr -8Fh
.text:00000001400012E8 var_8B          = dword ptr -8Bh
.text:00000001400012E8 var_87          = dword ptr -87h
.text:00000001400012E8 var_83          = dword ptr -83h
.text:00000001400012E8 var_7F          = dword ptr -7Fh
.text:00000001400012E8 var_7B          = dword ptr -7Bh
.text:00000001400012E8 var_77          = dword ptr -77h
.text:00000001400012E8 var_73          = dword ptr -73h
.text:00000001400012E8 var_6F          = dword ptr -6Fh
.text:00000001400012E8 var_6B          = dword ptr -6Bh
.text:00000001400012E8 var_67          = dword ptr -67h
.text:00000001400012E8 var_63          = dword ptr -63h
.text:00000001400012E8 var_5F          = dword ptr -5Fh
.text:00000001400012E8 var_5B          = dword ptr -5Bh
.text:00000001400012E8 var_57          = dword ptr -57h
.text:00000001400012E8 var_53          = dword ptr -53h
.text:00000001400012E8 var_4F          = dword ptr -4Fh
.text:00000001400012E8 var_40          = qword ptr -40h
.text:00000001400012E8 DeviceDescription= qword ptr  30h
.text:00000001400012E8
.text:00000001400012E8 ; __unwind { // __GSHandlerCheck
.text:00000001400012E8                 push    rbp
.text:00000001400012EA                 push    rbx
.text:00000001400012EB                 push    rsi
.text:00000001400012EC                 push    rdi
.text:00000001400012ED                 push    r13
.text:00000001400012EF                 push    r14
.text:00000001400012F1                 push    r15
.text:00000001400012F3                 lea     rbp, [rsp-60h]
.text:00000001400012F8                 sub     rsp, 160h
.text:00000001400012FF                 mov     rax, cs:__security_cookie
.text:0000000140001306                 xor     rax, rsp
.text:0000000140001309                 mov     [rbp+90h+var_40], rax
.text:000000014000130D                 mov     rdi, [rbp+90h+DeviceDescription]
.text:0000000140001314                 movzx   r15d, r9w
.text:0000000140001318                 movzx   r14d, r8w
.text:000000014000131C                 movzx   esi, dx
.text:000000014000131F                 movzx   ebx, cx
.text:0000000140001322                 lea     rax, off_14000D008
.text:0000000140001329                 xor     r13d, r13d
.text:000000014000132C                 cmp     cs:off_14000D008, rax
.text:0000000140001333                 lea     rdx, unk_14000B1C0
.text:000000014000133A                 jz      short loc_140001362
.text:000000014000133C                 mov     rcx, cs:DeviceObject
.text:0000000140001343                 cmp     [rcx+48h], r13w
.text:0000000140001348                 jz      short loc_140001362
.text:000000014000134A                 mov     rcx, [rcx+40h]
.text:000000014000134E                 lea     r9d, [r13+0Ah]
.text:0000000140001352                 mov     [rsp+190h+var_170], rdx
.text:0000000140001357                 lea     r8d, [r13+2]
.text:000000014000135B                 mov     dl, 5
.text:000000014000135D                 call    sub_1400016A8
.text:0000000140001362
.text:0000000140001362 loc_140001362:                          ; CODE XREF: sub_1400012E8+52↑j
.text:0000000140001362                                         ; sub_1400012E8+60↑j
.text:0000000140001362                 mov     [rbp+90h+var_110], bl
.text:0000000140001365                 shr     bx, 8
.text:0000000140001369                 mov     [rbp+90h+var_10D], sil
.text:000000014000136D                 shr     si, 8
.text:0000000140001371                 mov     [rbp+90h+var_104], r14b
.text:0000000140001375                 shr     r14w, 8
.text:000000014000137A                 mov     [rbp+90h+var_101], r15b
.text:000000014000137E                 shr     r15w, 8
.text:0000000140001383                 mov     [rbp+90h+var_100], r15b
.text:0000000140001387                 mov     dword ptr [rsp+190h+ReportDesc], 0E090105h
.text:000000014000138F                 mov     [rsp+190h+var_15C], 18501A1h
.text:0000000140001397                 mov     [rsp+190h+var_158], 21090D05h
.text:000000014000139F                 mov     [rsp+190h+var_154], 1502A1h
.text:00000001400013A7                 mov     [rsp+190h+var_150], 1750125h
.text:00000001400013AF                 mov     [rsp+190h+var_14C], 0A10195h
.text:00000001400013B7                 mov     [rsp+190h+var_148], 1090905h
.text:00000001400013BF                 mov     [rsp+190h+var_144], 0D050281h
.text:00000001400013C7                 mov     [rsp+190h+var_140], 2813309h
.text:00000001400013CF                 mov     [rsp+190h+var_13C], 3810695h
.text:00000001400013D7                 mov     [rsp+190h+var_138], 10502A1h
.text:00000001400013DF                 mov     [rsp+190h+var_134], 1163709h
.text:00000001400013E7                 mov     [rsp+190h+var_130], 7FFF2680h
.text:00000001400013EF                 mov     [rsp+190h+var_12C], 1951075h
.text:00000001400013F7                 mov     [rsp+190h+var_128], 350681h
.text:00000001400013FF                 mov     [rsp+190h+var_124], 150E1046h
.text:0000000140001407                 mov     [rsp+190h+var_120], 0E102600h
.text:000000014000140F                 mov     [rsp+190h+var_11C], 2B14809h
.text:0000000140001417                 mov     [rsp+190h+var_118], 55C00045h
.text:000000014000141F                 mov     [rsp+190h+var_114], 4611650Eh
.text:0000000140001427                 mov     [rbp+90h+var_10F], bl
.text:000000014000142A                 mov     [rbp+90h+var_10E], 26h ; '&'
.text:000000014000142E                 mov     [rbp+90h+var_10C], sil
.text:0000000140001432                 mov     [rbp+90h+var_10B], 42813009h
.text:0000000140001439                 mov     [rbp+90h+var_107], 3109h
.text:000000014000143F                 mov     [rbp+90h+var_105], 46h ; 'F'
.text:0000000140001443                 mov     [rbp+90h+var_103], r14b
.text:0000000140001447                 mov     [rbp+90h+var_102], 26h ; '&'
.text:000000014000144B                 mov     [rbp+90h+var_FF], 0D054281h
.text:0000000140001452                 mov     [rbp+90h+var_FB], 3A154809h
.text:0000000140001459                 mov     [rbp+90h+var_F7], 8753A25h
.text:0000000140001460                 mov     [rbp+90h+var_F3], 3A350F55h
.text:0000000140001467                 mov     [rbp+90h+var_EF], 3813A45h
.text:000000014000146E                 mov     [rbp+90h+var_EB], 650055h
.text:0000000140001475                 mov     [rbp+90h+var_E7], 450035h
.text:000000014000147C                 mov     [rbp+90h+var_E3], 1090E05h
.text:0000000140001483                 mov     [rbp+90h+var_DF], 1502A1h
.text:000000014000148A                 mov     [rbp+90h+var_DB], 900FF26h
.text:0000000140001491                 mov     [rbp+90h+var_D7], 942B124h
.text:0000000140001498                 mov     [rbp+90h+var_D3], 15429124h
.text:000000014000149F                 mov     [rbp+90h+var_CF], 9072501h
.text:00000001400014A6                 mov     [rbp+90h+var_CB], 942B120h
.text:00000001400014AD                 mov     [rbp+90h+var_C7], 25429121h
.text:00000001400014B4                 mov     [rbp+90h+var_C3], 0B128090Ah
.text:00000001400014BB                 mov     [rbp+90h+var_BF], 26107542h
.text:00000001400014C2                 mov     [rbp+90h+var_BB], 250907D0h
.text:00000001400014C9                 mov     [rbp+90h+var_B7], 250942B1h
.text:00000001400014D0                 mov     [rbp+90h+var_B3], 2854291h
.text:00000001400014D7                 mov     [rbp+90h+var_AF], 37172075h
.text:00000001400014DE                 mov     [rbp+90h+var_AB], 27000100h
.text:00000001400014E5                 mov     [rbp+90h+var_A7], 10037h
.text:00000001400014EC                 mov     [rbp+90h+var_A3], 2B12209h
.text:00000001400014F3                 mov     [rbp+90h+var_9F], 2A11109h
.text:00000001400014FA                 mov     [rbp+90h+var_9B], 3950A05h
.text:0000000140001501                 mov     [rbp+90h+var_97], 4090309h
.text:0000000140001508                 mov     [rbp+90h+var_93], 8750509h
.text:000000014000150F                 mov     [rbp+90h+var_8F], 0FF250015h
.text:0000000140001516                 mov     [rbp+90h+var_8B], 5C002B1h
.text:000000014000151D                 mov     [rbp+90h+var_87], 0A110090Eh
.text:0000000140001524                 mov     [rbp+90h+var_83], 950A0502h
.text:000000014000152B                 mov     [rbp+90h+var_7F], 25031501h
.text:0000000140001532                 mov     [rbp+90h+var_7B], 10033603h
.text:0000000140001539                 mov     [rbp+90h+var_77], 9100346h
.text:0000000140001540                 mov     [rbp+90h+var_73], 1502B103h
.text:0000000140001547                 mov     [rbp+90h+var_6F], 36042504h
.text:000000014000154E                 mov     [rbp+90h+var_6B], 4461004h
.text:0000000140001555                 mov     [rbp+90h+var_67], 0B1040910h
.text:000000014000155C                 mov     [rbp+90h+var_63], 25051502h
.text:0000000140001563                 mov     [rbp+90h+var_5F], 10043605h
.text:000000014000156A                 mov     [rbp+90h+var_5B], 9100446h
.text:0000000140001571                 mov     [rbp+90h+var_57], 3502B105h
.text:0000000140001578                 mov     [rbp+90h+var_53], 0C0004500h
.text:000000014000157F                 mov     r9, rdi         ; DeviceDescription
.text:0000000140001582                 mov     [rbp+90h+var_4F], 0C0C0C0C0h
.text:0000000140001589                 xor     r8d, r8d        ; PoolType
.text:000000014000158C                 lea     rcx, [rsp+190h+ReportDesc] ; ReportDesc
.text:0000000140001591                 mov     edx, 115h       ; DescLength
.text:0000000140001596                 call    HidP_GetCollectionDescription
.text:000000014000159B                 mov     ebx, eax
.text:000000014000159D                 test    eax, eax
.text:000000014000159F                 jns     short loc_1400015E7
.text:00000001400015A1                 lea     rsi, off_14000D008
.text:00000001400015A8                 cmp     cs:off_14000D008, rsi
.text:00000001400015AF                 jz      loc_140001685
.text:00000001400015B5                 lfence
.text:00000001400015B8                 mov     rcx, cs:DeviceObject
.text:00000001400015BF                 lea     r14, unk_14000B1C0
.text:00000001400015C6                 mov     r9d, 0Bh
.text:00000001400015CC                 mov     dword ptr [rsp+190h+var_168], eax
.text:00000001400015D0                 mov     [rsp+190h+var_170], r14
.text:00000001400015D5                 mov     rcx, [rcx+40h]
.text:00000001400015D9                 lea     r8d, [r9-9]
.text:00000001400015DD                 mov     dl, r8b
.text:00000001400015E0                 call    sub_14000176C
.text:00000001400015E5                 jmp     short loc_140001650
.text:00000001400015E7 ; ---------------------------------------------------------------------------
.text:00000001400015E7
.text:00000001400015E7 loc_1400015E7:                          ; CODE XREF: sub_1400012E8+2B7↑j
.text:00000001400015E7                 cmp     [rdi+20h], r13d
.text:00000001400015EB                 jz      short loc_140001642
.text:00000001400015ED                 lfence
.text:00000001400015F0                 lea     rsi, off_14000D008
.text:00000001400015F7                 cmp     cs:off_14000D008, rsi
.text:00000001400015FE                 lea     r14, unk_14000B1C0
.text:0000000140001605                 jz      short loc_140001633
.text:0000000140001607                 lfence
.text:000000014000160A                 mov     rcx, cs:DeviceObject
.text:0000000140001611                 mov     r9d, 0Ch
.text:0000000140001617                 mov     eax, [rdi+20h]
.text:000000014000161A                 mov     dword ptr [rsp+190h+var_168], eax
.text:000000014000161E                 mov     [rsp+190h+var_170], r14
.text:0000000140001623                 mov     rcx, [rcx+40h]
.text:0000000140001627                 lea     r8d, [r9-0Ah]
.text:000000014000162B                 mov     dl, r8b
.text:000000014000162E                 call    sub_14000176C
.text:0000000140001633
.text:0000000140001633 loc_140001633:                          ; CODE XREF: sub_1400012E8+31D↑j
.text:0000000140001633                 mov     rcx, rdi        ; DeviceDescription
.text:0000000140001636                 mov     ebx, 0C0000001h
.text:000000014000163B                 call    sub_140001240
.text:0000000140001640                 jmp     short loc_140001650
.text:0000000140001642 ; ---------------------------------------------------------------------------
.text:0000000140001642
.text:0000000140001642 loc_140001642:                          ; CODE XREF: sub_1400012E8+303↑j
.text:0000000140001642                 lea     rsi, off_14000D008
.text:0000000140001649                 lea     r14, unk_14000B1C0
.text:0000000140001650
.text:0000000140001650 loc_140001650:                          ; CODE XREF: sub_1400012E8+2FD↑j
.text:0000000140001650                                         ; sub_1400012E8+358↑j
.text:0000000140001650                 cmp     cs:off_14000D008, rsi
.text:0000000140001657                 jz      short loc_140001685
.text:0000000140001659                 mov     rcx, cs:DeviceObject
.text:0000000140001660                 cmp     [rcx+48h], r13w
.text:0000000140001665                 jz      short loc_140001685
.text:0000000140001667                 mov     rcx, [rcx+40h]
.text:000000014000166B                 mov     r9d, 0Dh
.text:0000000140001671                 mov     dword ptr [rsp+190h+var_168], ebx
.text:0000000140001675                 mov     dl, 5
.text:0000000140001677                 mov     [rsp+190h+var_170], r14
.text:000000014000167C                 lea     r8d, [r9-0Bh]
.text:0000000140001680                 call    sub_14000176C
.text:0000000140001685
.text:0000000140001685 loc_140001685:                          ; CODE XREF: sub_1400012E8+2C7↑j
.text:0000000140001685                                         ; sub_1400012E8+36F↑j ...
.text:0000000140001685                 mov     eax, ebx
.text:0000000140001687                 mov     rcx, [rbp+90h+var_40]
.text:000000014000168B                 xor     rcx, rsp        ; StackCookie
.text:000000014000168E                 call    __security_check_cookie
.text:0000000140001693                 add     rsp, 160h
.text:000000014000169A                 pop     r15
.text:000000014000169C                 pop     r14
.text:000000014000169E                 pop     r13
.text:00000001400016A0                 pop     rdi
.text:00000001400016A1                 pop     rsi
.text:00000001400016A2                 pop     rbx
.text:00000001400016A3                 pop     rbp
.text:00000001400016A4                 retn
.text:00000001400016A4 ; } // starts at 1400012E8
.text:00000001400016A4 sub_1400012E8   endp
.text:00000001400016A4
.text:00000001400016A4 ; ---------------------------------------------------------------------------
.text:00000001400016A5 algn_1400016A5:                         ; DATA XREF: .pdata:000000014000E024↓o
.text:00000001400016A5                 align 8
.text:00000001400016A8
.text:00000001400016A8 ; =============== S U B R O U T I N E =======================================
.text:00000001400016A8
.text:00000001400016A8
.text:00000001400016A8 ; __int64 __fastcall sub_1400016A8(_DWORD, _DWORD, _DWORD, _DWORD, __int64)
.text:00000001400016A8 sub_1400016A8   proc near               ; CODE XREF: sub_140001240+4C↑p
.text:00000001400016A8                                         ; sub_140001240+93↑p ...
.text:00000001400016A8
.text:00000001400016A8 var_28          = qword ptr -28h
.text:00000001400016A8 var_20          = qword ptr -20h
.text:00000001400016A8 arg_0           = qword ptr  8
.text:00000001400016A8 arg_8           = qword ptr  10h
.text:00000001400016A8 arg_10          = qword ptr  18h
.text:00000001400016A8 arg_20          = qword ptr  28h
.text:00000001400016A8
.text:00000001400016A8                 mov     [rsp+arg_0], rbx
.text:00000001400016AD                 mov     [rsp+arg_8], rbp
.text:00000001400016B2                 mov     [rsp+arg_10], rsi
.text:00000001400016B7                 push    rdi
.text:00000001400016B8                 push    r14
.text:00000001400016BA                 push    r15
.text:00000001400016BC                 sub     rsp, 30h
.text:00000001400016C0                 mov     r14d, r8d
.text:00000001400016C3                 mov     r15, rcx
.text:00000001400016C6                 mov     edi, r8d
.text:00000001400016C9                 shr     rdi, 10h
.text:00000001400016CD                 movzx   ebp, r9w
.text:00000001400016D1                 lea     ebx, [r14-1]
.text:00000001400016D5                 movzx   esi, dl
.text:00000001400016D8                 mov     r10d, ebx
.text:00000001400016DB                 and     ebx, 1Fh
.text:00000001400016DE                 shr     r10, 5
.text:00000001400016E2                 lea     rax, [rdi+rdi*4]
.text:00000001400016E6                 and     r10d, 7FFh
.text:00000001400016ED                 lea     r11, [r10+rax*4]
.text:00000001400016F1                 mov     r10, cs:DeviceObject
.text:00000001400016F8                 mov     eax, [r10+r11*4+2Ch]
.text:00000001400016FD                 bt      eax, ebx
.text:0000000140001700                 jnb     short loc_140001735
.text:0000000140001702                 lea     rcx, [rdi+rdi*4]
.text:0000000140001706                 add     rcx, rcx
.text:0000000140001709                 cmp     [r10+rcx*8+29h], sil
.text:000000014000170E                 jb      short loc_140001735
.text:0000000140001710                 mov     rax, cs:qword_14000D0E8
.text:0000000140001717                 mov     r9d, ebp
.text:000000014000171A                 and     [rsp+48h+var_28], 0
.text:0000000140001720                 mov     edx, 2Bh ; '+'
.text:0000000140001725                 mov     r8, [rsp+48h+arg_20]
.text:000000014000172A                 mov     rcx, [r10+rcx*8+18h]
.text:000000014000172F                 call    cs:__guard_dispatch_icall_fptr
.text:0000000140001735
.text:0000000140001735 loc_140001735:                          ; CODE XREF: sub_1400016A8+58↑j
.text:0000000140001735                                         ; sub_1400016A8+66↑j
.text:0000000140001735                 and     [rsp+48h+var_20], 0
.text:000000014000173B                 mov     r8d, r14d
.text:000000014000173E                 mov     r9, [rsp+48h+arg_20]
.text:0000000140001743                 mov     edx, esi
.text:0000000140001745                 mov     rcx, r15
.text:0000000140001748                 mov     word ptr [rsp+48h+var_28], bp
.text:000000014000174D                 call    WppAutoLogTrace
.text:0000000140001752                 mov     rbx, [rsp+48h+arg_0]
.text:0000000140001757                 mov     rbp, [rsp+48h+arg_8]
.text:000000014000175C                 mov     rsi, [rsp+48h+arg_10]
.text:0000000140001761                 add     rsp, 30h
.text:0000000140001765                 pop     r15
.text:0000000140001767                 pop     r14
.text:0000000140001769                 pop     rdi
.text:000000014000176A                 retn
.text:000000014000176A sub_1400016A8   endp
.text:000000014000176A
.text:000000014000176A ; ---------------------------------------------------------------------------
.text:000000014000176B algn_14000176B:                         ; DATA XREF: .pdata:000000014000E030↓o
.text:000000014000176B                 align 4
.text:000000014000176C
.text:000000014000176C ; =============== S U B R O U T I N E =======================================
.text:000000014000176C
.text:000000014000176C
.text:000000014000176C ; __int64 sub_14000176C(__int64, unsigned __int8, unsigned int, unsigned __int16, __int64, ...)
.text:000000014000176C sub_14000176C   proc near               ; CODE XREF: sub_1400012E8+2F8↑p
.text:000000014000176C                                         ; sub_1400012E8+346↑p ...
.text:000000014000176C
.text:000000014000176C var_48          = word ptr -48h
.text:000000014000176C var_40          = qword ptr -40h
.text:000000014000176C var_38          = qword ptr -38h
.text:000000014000176C var_30          = qword ptr -30h
.text:000000014000176C arg_20          = qword ptr  28h
.text:000000014000176C arg_28          = byte ptr  30h
.text:000000014000176C
.text:000000014000176C                 mov     r11, rsp
.text:000000014000176F                 push    rbx
.text:0000000140001770                 push    rbp
.text:0000000140001771                 push    rsi
.text:0000000140001772                 push    rdi
.text:0000000140001773                 push    r14
.text:0000000140001775                 sub     rsp, 40h
.text:0000000140001779                 mov     r10, cs:DeviceObject
.text:0000000140001780                 mov     r14, rcx
.text:0000000140001783                 mov     rsi, [rsp+68h+arg_20]
.text:000000014000178B                 mov     ebp, r8d
.text:000000014000178E                 movzx   edi, r9w
.text:0000000140001792                 mov     r9d, ebp
.text:0000000140001795                 shr     r9, 10h
.text:0000000140001799                 movzx   ebx, dl
.text:000000014000179C                 lea     r8d, [rbp-1]
.text:00000001400017A0                 mov     ecx, r8d
.text:00000001400017A3                 and     r8d, 1Fh
.text:00000001400017A7                 shr     rcx, 5
.text:00000001400017AB                 lea     rax, [r9+r9*4]
.text:00000001400017AF                 and     ecx, 7FFh
.text:00000001400017B5                 lea     rdx, [rcx+rax*4]
.text:00000001400017B9                 mov     eax, [r10+rdx*4+2Ch]
.text:00000001400017BE                 bt      eax, r8d
.text:00000001400017C2                 jnb     short loc_140001804
.text:00000001400017C4                 lea     rcx, [r9+r9*4]
.text:00000001400017C8                 add     rcx, rcx
.text:00000001400017CB                 cmp     [r10+rcx*8+29h], bl
.text:00000001400017D0                 jb      short loc_140001804
.text:00000001400017D2                 and     qword ptr [r11-38h], 0
.text:00000001400017D7                 lea     rdx, [r11+30h]
.text:00000001400017DB                 mov     rax, cs:qword_14000D0E8
.text:00000001400017E2                 mov     r9d, edi
.text:00000001400017E5                 mov     rcx, [r10+rcx*8+18h]
.text:00000001400017EA                 mov     r8, rsi
.text:00000001400017ED                 mov     qword ptr [r11-40h], 4
.text:00000001400017F5                 mov     [r11-48h], rdx
.text:00000001400017F9                 mov     edx, 2Bh ; '+'
.text:00000001400017FE                 call    cs:__guard_dispatch_icall_fptr
.text:0000000140001804
.text:0000000140001804 loc_140001804:                          ; CODE XREF: sub_14000176C+56↑j
.text:0000000140001804                                         ; sub_14000176C+64↑j
.text:0000000140001804                 and     [rsp+68h+var_30], 0
.text:000000014000180A                 lea     rax, [rsp+68h+arg_28]
.text:0000000140001812                 mov     [rsp+68h+var_38], 4
.text:000000014000181B                 mov     r9, rsi
.text:000000014000181E                 mov     [rsp+68h+var_40], rax
.text:0000000140001823                 mov     r8d, ebp
.text:0000000140001826                 mov     edx, ebx
.text:0000000140001828                 mov     [rsp+68h+var_48], di
.text:000000014000182D                 mov     rcx, r14
.text:0000000140001830                 call    WppAutoLogTrace
.text:0000000140001835                 add     rsp, 40h
.text:0000000140001839                 pop     r14
.text:000000014000183B                 pop     rdi
.text:000000014000183C                 pop     rsi
.text:000000014000183D                 pop     rbp
.text:000000014000183E                 pop     rbx
.text:000000014000183F                 retn
.text:000000014000183F sub_14000176C   endp
.text:000000014000183F
.text:0000000140001840
.text:0000000140001840 ; =============== S U B R O U T I N E =======================================
.text:0000000140001840
.text:0000000140001840
.text:0000000140001840 ; void **__fastcall sub_140001840(__int64)
.text:0000000140001840 sub_140001840   proc near               ; CODE XREF: sub_14000190C+11F↓p
.text:0000000140001840                                         ; CallbackRoutine+396↓p
.text:0000000140001840                                         ; DATA XREF: ...
.text:0000000140001840
.text:0000000140001840 var_18          = qword ptr -18h
.text:0000000140001840 arg_0           = qword ptr  8
.text:0000000140001840 arg_8           = qword ptr  10h
.text:0000000140001840 arg_10          = qword ptr  18h
.text:0000000140001840
.text:0000000140001840                 mov     rax, rsp
.text:0000000140001843                 mov     [rax+8], rbx
.text:0000000140001847                 mov     [rax+10h], rsi
.text:000000014000184B                 mov     [rax+18h], rdi
.text:000000014000184F                 push    r14
.text:0000000140001851                 sub     rsp, 30h
.text:0000000140001855                 mov     rbx, rcx
.text:0000000140001858                 lea     rsi, off_14000D008
.text:000000014000185F                 xor     edi, edi
.text:0000000140001861                 cmp     cs:off_14000D008, rsi
.text:0000000140001868                 lea     r14, unk_14000B2C0
.text:000000014000186F                 jz      short loc_140001897
.text:0000000140001871                 mov     rcx, cs:DeviceObject
.text:0000000140001878                 cmp     [rcx+48h], di
.text:000000014000187C                 jz      short loc_140001897
.text:000000014000187E                 mov     rcx, [rcx+40h]
.text:0000000140001882                 lea     r8d, [rdi+3]
.text:0000000140001886                 mov     r9d, 90h
.text:000000014000188C                 mov     [rax-18h], r14
.text:0000000140001890                 mov     dl, 5
.text:0000000140001892                 call    sub_1400016A8
.text:0000000140001897
.text:0000000140001897 loc_140001897:                          ; CODE XREF: sub_140001840+2F↑j
.text:0000000140001897                                         ; sub_140001840+3C↑j
.text:0000000140001897                 mov     rdx, [rbx+10h]
.text:000000014000189B                 test    rdx, rdx
.text:000000014000189E                 jz      short loc_1400018C3
.text:00000001400018A0                 mov     rax, cs:qword_14000D388
.text:00000001400018A7                 mov     rcx, cs:qword_14000D390
.text:00000001400018AE                 mov     rax, [rax+680h]
.text:00000001400018B5                 call    cs:__guard_dispatch_icall_fptr
.text:00000001400018BB                 mov     [rbx+10h], rdi
.text:00000001400018BF                 mov     [rbx+18h], rdi
.text:00000001400018C3
.text:00000001400018C3 loc_1400018C3:                          ; CODE XREF: sub_140001840+5E↑j
.text:00000001400018C3                 cmp     cs:off_14000D008, rsi
.text:00000001400018CA                 jz      short loc_1400018F5
.text:00000001400018CC                 mov     rcx, cs:DeviceObject
.text:00000001400018D3                 cmp     [rcx+48h], di
.text:00000001400018D7                 jz      short loc_1400018F5
.text:00000001400018D9                 mov     rcx, [rcx+40h]
.text:00000001400018DD                 mov     r9d, 91h
.text:00000001400018E3                 mov     r8d, 3
.text:00000001400018E9                 mov     [rsp+38h+var_18], r14
.text:00000001400018EE                 mov     dl, 5
.text:00000001400018F0                 call    sub_1400016A8
.text:00000001400018F5
.text:00000001400018F5 loc_1400018F5:                          ; CODE XREF: sub_140001840+8A↑j
.text:00000001400018F5                                         ; sub_140001840+97↑j
.text:00000001400018F5                 mov     rbx, [rsp+38h+arg_0]
.text:00000001400018FA                 mov     rsi, [rsp+38h+arg_8]
.text:00000001400018FF                 mov     rdi, [rsp+38h+arg_10]
.text:0000000140001904                 add     rsp, 30h
.text:0000000140001908                 pop     r14
.text:000000014000190A                 retn
.text:000000014000190A sub_140001840   endp
.text:000000014000190A
.text:000000014000190A ; ---------------------------------------------------------------------------
.text:000000014000190B algn_14000190B:                         ; DATA XREF: .pdata:000000014000E048↓o
.text:000000014000190B                 align 4
.text:000000014000190C
.text:000000014000190C ; =============== S U B R O U T I N E =======================================
.text:000000014000190C
.text:000000014000190C
.text:000000014000190C ; void **__fastcall sub_14000190C(__int64, __int64)
.text:000000014000190C sub_14000190C   proc near               ; CODE XREF: sub_140001B58+138↓p
.text:000000014000190C                                         ; sub_140001B58+170↓p ...
.text:000000014000190C
.text:000000014000190C var_28          = qword ptr -28h
.text:000000014000190C var_20          = dword ptr -20h
.text:000000014000190C arg_0           = qword ptr  8
.text:000000014000190C arg_8           = qword ptr  10h
.text:000000014000190C arg_10          = qword ptr  18h
.text:000000014000190C
.text:000000014000190C                 mov     rax, rsp
.text:000000014000190F                 mov     [rax+8], rbx
.text:0000000140001913                 mov     [rax+10h], rbp
.text:0000000140001917                 mov     [rax+18h], rsi
.text:000000014000191B                 push    rdi
.text:000000014000191C                 push    r12
.text:000000014000191E                 push    r14
.text:0000000140001920                 sub     rsp, 30h
.text:0000000140001924                 mov     rsi, rdx
.text:0000000140001927                 mov     rbx, rcx
.text:000000014000192A                 lea     r14, off_14000D008
.text:0000000140001931                 xor     ebp, ebp
.text:0000000140001933                 cmp     cs:off_14000D008, r14
.text:000000014000193A                 lea     r12, unk_14000B2C0
.text:0000000140001941                 jz      short loc_140001967
.text:0000000140001943                 mov     rcx, cs:DeviceObject
.text:000000014000194A                 cmp     [rcx+48h], bp
.text:000000014000194E                 jz      short loc_140001967
.text:0000000140001950                 mov     rcx, [rcx+40h]
.text:0000000140001954                 lea     r9d, [rbp+6Bh]
.text:0000000140001958                 lea     r8d, [rbp+3]
.text:000000014000195C                 mov     [rax-28h], r12
.text:0000000140001960                 mov     dl, 5
.text:0000000140001962                 call    sub_1400016A8
.text:0000000140001967
.text:0000000140001967 loc_140001967:                          ; CODE XREF: sub_14000190C+35↑j
.text:0000000140001967                                         ; sub_14000190C+42↑j
.text:0000000140001967                 cmp     [rbx], bpl
.text:000000014000196A                 jnz     short loc_1400019A9
.text:000000014000196C                 cmp     cs:off_14000D008, r14
.text:0000000140001973                 jz      loc_140001B3E
.text:0000000140001979                 mov     rcx, cs:DeviceObject
.text:0000000140001980                 cmp     [rcx+48h], bp
.text:0000000140001984                 jz      loc_140001B0E
.text:000000014000198A                 mov     rcx, [rcx+40h]
.text:000000014000198E                 mov     r9d, 6Ch ; 'l'
.text:0000000140001994                 mov     dl, 5
.text:0000000140001996                 mov     [rsp+48h+var_28], r12
.text:000000014000199B                 lea     r8d, [r9-69h]
.text:000000014000199F                 call    sub_1400016A8
.text:00000001400019A4                 jmp     loc_140001B0E
.text:00000001400019A9 ; ---------------------------------------------------------------------------
.text:00000001400019A9
.text:00000001400019A9 loc_1400019A9:                          ; CODE XREF: sub_14000190C+5E↑j
.text:00000001400019A9                 lea     rcx, [rbx+70h]  ; Event
.text:00000001400019AD                 call    cs:KeClearEvent
.text:00000001400019B3                 mov     rdx, [rbx+8]
.text:00000001400019B7                 test    rdx, rdx
.text:00000001400019BA                 jz      short loc_1400019FC
.text:00000001400019BC                 mov     rax, cs:qword_14000D388
.text:00000001400019C3                 mov     r8d, 1
.text:00000001400019C9                 mov     rcx, cs:qword_14000D390
.text:00000001400019D0                 mov     rax, [rax+0D20h]
.text:00000001400019D7                 call    cs:__guard_dispatch_icall_fptr
.text:00000001400019DD                 mov     rax, cs:qword_14000D388
.text:00000001400019E4                 mov     rdx, [rbx+8]
.text:00000001400019E8                 mov     rcx, cs:qword_14000D390
.text:00000001400019EF                 mov     rax, [rax+550h]
.text:00000001400019F6                 call    cs:__guard_dispatch_icall_fptr
.text:00000001400019FC
.text:00000001400019FC loc_1400019FC:                          ; CODE XREF: sub_14000190C+AE↑j
.text:00000001400019FC                 mov     rax, cs:qword_14000D388
.text:0000000140001A03                 mov     rdx, rsi
.text:0000000140001A06                 mov     rcx, cs:qword_14000D390
.text:0000000140001A0D                 mov     rax, [rax+9B0h]
.text:0000000140001A14                 call    cs:__guard_dispatch_icall_fptr
.text:0000000140001A1A                 lea     rcx, [rbx+70h]  ; Event
.text:0000000140001A1E                 call    cs:KeClearEvent
.text:0000000140001A24                 lea     rcx, [rbx+10h]
.text:0000000140001A28                 mov     [rbx], bpl
.text:0000000140001A2B                 call    sub_140001840
.text:0000000140001A30                 mov     rdx, [rbx+90h]
.text:0000000140001A37                 test    rdx, rdx
.text:0000000140001A3A                 jz      short loc_140001A5E
.text:0000000140001A3C                 mov     rax, cs:qword_14000D388
.text:0000000140001A43                 mov     rcx, cs:qword_14000D390
.text:0000000140001A4A                 mov     rax, [rax+680h]
.text:0000000140001A51                 call    cs:__guard_dispatch_icall_fptr
.text:0000000140001A57                 mov     [rbx+90h], rbp
.text:0000000140001A5E
.text:0000000140001A5E loc_140001A5E:                          ; CODE XREF: sub_14000190C+12E↑j
.text:0000000140001A5E                 mov     rdx, [rbx+98h]
.text:0000000140001A65                 test    rdx, rdx
.text:0000000140001A68                 jz      short loc_140001A8C
.text:0000000140001A6A                 mov     rax, cs:qword_14000D388
.text:0000000140001A71                 mov     rcx, cs:qword_14000D390
.text:0000000140001A78                 mov     rax, [rax+680h]
.text:0000000140001A7F                 call    cs:__guard_dispatch_icall_fptr
.text:0000000140001A85                 mov     [rbx+98h], rbp
.text:0000000140001A8C
.text:0000000140001A8C loc_140001A8C:                          ; CODE XREF: sub_14000190C+15C↑j
.text:0000000140001A8C                 mov     eax, ebp
.text:0000000140001A8E                 xchg    eax, [rbx+88h]
.text:0000000140001A94                 cmp     cs:off_14000D008, r14
.text:0000000140001A9B                 jz      short loc_140001AC8
.text:0000000140001A9D                 mov     rcx, cs:DeviceObject
.text:0000000140001AA4                 cmp     [rcx+48h], bp
.text:0000000140001AA8                 jz      short loc_140001AC8
.text:0000000140001AAA                 mov     rcx, [rcx+40h]
.text:0000000140001AAE                 mov     r9d, 6Dh ; 'm'
.text:0000000140001AB4                 mov     [rsp+48h+var_20], eax
.text:0000000140001AB8                 mov     dl, 5
.text:0000000140001ABA                 mov     [rsp+48h+var_28], r12
.text:0000000140001ABF                 lea     r8d, [r9-6Ah]
.text:0000000140001AC3                 call    sub_14000176C
.text:0000000140001AC8
.text:0000000140001AC8 loc_140001AC8:                          ; CODE XREF: sub_14000190C+18F↑j
.text:0000000140001AC8                                         ; sub_14000190C+19C↑j
.text:0000000140001AC8                 mov     rdx, [rbx+8]
.text:0000000140001ACC                 test    rdx, rdx
.text:0000000140001ACF                 jz      short loc_140001AF0
.text:0000000140001AD1                 mov     rax, cs:qword_14000D388
.text:0000000140001AD8                 mov     rcx, cs:qword_14000D390
.text:0000000140001ADF                 mov     rax, [rax+680h]
.text:0000000140001AE6                 call    cs:__guard_dispatch_icall_fptr
.text:0000000140001AEC                 mov     [rbx+8], rbp
.text:0000000140001AF0
.text:0000000140001AF0 loc_140001AF0:                          ; CODE XREF: sub_14000190C+1C3↑j
.text:0000000140001AF0                 mov     rax, cs:qword_14000D388
.text:0000000140001AF7                 mov     rdx, rsi
.text:0000000140001AFA                 mov     rcx, cs:qword_14000D390
.text:0000000140001B01                 mov     rax, [rax+9B8h]
.text:0000000140001B08                 call    cs:__guard_dispatch_icall_fptr
.text:0000000140001B0E
.text:0000000140001B0E loc_140001B0E:                          ; CODE XREF: sub_14000190C+78↑j
.text:0000000140001B0E                                         ; sub_14000190C+98↑j
.text:0000000140001B0E                 cmp     cs:off_14000D008, r14
.text:0000000140001B15                 jz      short loc_140001B3E
.text:0000000140001B17                 mov     rcx, cs:DeviceObject
.text:0000000140001B1E                 cmp     [rcx+48h], bp
.text:0000000140001B22                 jz      short loc_140001B3E
.text:0000000140001B24                 mov     rcx, [rcx+40h]
.text:0000000140001B28                 mov     r9d, 6Eh ; 'n'
.text:0000000140001B2E                 mov     dl, 5
.text:0000000140001B30                 mov     [rsp+48h+var_28], r12
.text:0000000140001B35                 lea     r8d, [r9-6Bh]
.text:0000000140001B39                 call    sub_1400016A8
.text:0000000140001B3E
.text:0000000140001B3E loc_140001B3E:                          ; CODE XREF: sub_14000190C+67↑j
.text:0000000140001B3E                                         ; sub_14000190C+209↑j ...
.text:0000000140001B3E                 mov     rbx, [rsp+48h+arg_0]
.text:0000000140001B43                 mov     rbp, [rsp+48h+arg_8]
.text:0000000140001B48                 mov     rsi, [rsp+48h+arg_10]
.text:0000000140001B4D                 add     rsp, 30h
.text:0000000140001B51                 pop     r14
.text:0000000140001B53                 pop     r12
.text:0000000140001B55                 pop     rdi
.text:0000000140001B56                 retn
.text:0000000140001B56 sub_14000190C   endp
.text:0000000140001B56
.text:0000000140001B56 ; ---------------------------------------------------------------------------
.text:0000000140001B57 algn_140001B57:                         ; DATA XREF: .pdata:000000014000E054↓o
.text:0000000140001B57                 align 8
.text:0000000140001B58
.text:0000000140001B58 ; =============== S U B R O U T I N E =======================================
.text:0000000140001B58
.text:0000000140001B58
.text:0000000140001B58 ; void *__fastcall sub_140001B58(__int64)
.text:0000000140001B58 sub_140001B58   proc near               ; CODE XREF: sub_140002DF0+199↓p
.text:0000000140001B58                                         ; DATA XREF: .pdata:000000014000E060↓o
.text:0000000140001B58
.text:0000000140001B58 var_28          = qword ptr -28h
.text:0000000140001B58 var_20          = dword ptr -20h
.text:0000000140001B58 arg_0           = qword ptr  8
.text:0000000140001B58 arg_8           = qword ptr  10h
.text:0000000140001B58 arg_10          = qword ptr  18h
.text:0000000140001B58 arg_18          = qword ptr  20h
.text:0000000140001B58
.text:0000000140001B58                 mov     rax, rsp
.text:0000000140001B5B                 mov     [rax+8], rbx
.text:0000000140001B5F                 mov     [rax+10h], rbp
.text:0000000140001B63                 mov     [rax+18h], rsi
.text:0000000140001B67                 mov     [rax+20h], rdi
.text:0000000140001B6B                 push    r12
.text:0000000140001B6D                 push    r14
.text:0000000140001B6F                 push    r15
.text:0000000140001B71                 sub     rsp, 30h
.text:0000000140001B75                 xor     ebp, ebp
.text:0000000140001B77                 mov     rbx, rcx
.text:0000000140001B7A                 mov     esi, ebp
.text:0000000140001B7C                 lea     r14, off_14000D008
.text:0000000140001B83                 cmp     cs:off_14000D008, r14
.text:0000000140001B8A                 lea     r12, unk_14000B2C0
.text:0000000140001B91                 lea     r15d, [rbp+3]
.text:0000000140001B95                 jz      short loc_140001BBA
.text:0000000140001B97                 mov     rcx, cs:DeviceObject
.text:0000000140001B9E                 cmp     [rcx+48h], bp
.text:0000000140001BA2                 jz      short loc_140001BBA
.text:0000000140001BA4                 mov     rcx, [rcx+40h]
.text:0000000140001BA8                 lea     r9d, [rbp+5Fh]
.text:0000000140001BAC                 mov     r8d, r15d
.text:0000000140001BAF                 mov     [rax-28h], r12
.text:0000000140001BB3                 mov     dl, 5
.text:0000000140001BB5                 call    sub_1400016A8
.text:0000000140001BBA
.text:0000000140001BBA loc_140001BBA:                          ; CODE XREF: sub_140001B58+3D↑j
.text:0000000140001BBA                                         ; sub_140001B58+4A↑j
.text:0000000140001BBA                 mov     rax, cs:qword_14000D388
.text:0000000140001BC1                 mov     rdx, rbx
.text:0000000140001BC4                 mov     r8, cs:off_14000D028
.text:0000000140001BCB                 mov     rcx, cs:qword_14000D390
.text:0000000140001BD2                 mov     rax, [rax+650h]
.text:0000000140001BD9                 call    cs:__guard_dispatch_icall_fptr
.text:0000000140001BDF                 mov     rdi, rax
.text:0000000140001BE2                 mov     rcx, [rax+120h] ; NotificationEntry
.text:0000000140001BE9                 test    rcx, rcx
.text:0000000140001BEC                 jz      short loc_140001C5D
.text:0000000140001BEE                 call    cs:IoUnregisterPlugPlayNotification
.text:0000000140001BF4                 mov     esi, eax
.text:0000000140001BF6                 test    eax, eax
.text:0000000140001BF8                 jns     short loc_140001C23
.text:0000000140001BFA                 cmp     cs:off_14000D008, r14
.text:0000000140001C01                 jz      short loc_140001C23
.text:0000000140001C03                 mov     rcx, cs:DeviceObject
.text:0000000140001C0A                 mov     r9d, 60h ; '`'
.text:0000000140001C10                 mov     r8d, r15d
.text:0000000140001C13                 mov     [rsp+48h+var_28], r12
.text:0000000140001C18                 mov     dl, 2
.text:0000000140001C1A                 mov     rcx, [rcx+40h]
.text:0000000140001C1E                 call    sub_1400016A8
.text:0000000140001C23
.text:0000000140001C23 loc_140001C23:                          ; CODE XREF: sub_140001B58+A0↑j
.text:0000000140001C23                                         ; sub_140001B58+A9↑j
.text:0000000140001C23                 mov     [rdi+120h], rbp
.text:0000000140001C2A                 lea     rcx, aRepositorydirS ; "REPOSITORYDIR\\sys\\Device.cpp"
.text:0000000140001C31                 mov     rax, cs:qword_14000D388
.text:0000000140001C38                 mov     r9d, 458h
.text:0000000140001C3E                 mov     [rsp+48h+var_28], rcx
.text:0000000140001C43                 xor     r8d, r8d
.text:0000000140001C46                 mov     rcx, cs:qword_14000D390
.text:0000000140001C4D                 mov     rdx, rbx
.text:0000000140001C50                 mov     rax, [rax+670h]
.text:0000000140001C57                 call    cs:__guard_dispatch_icall_fptr
.text:0000000140001C5D
.text:0000000140001C5D loc_140001C5D:                          ; CODE XREF: sub_140001B58+94↑j
.text:0000000140001C5D                 cmp     cs:off_14000D008, r14
.text:0000000140001C64                 jz      short loc_140001C86
.text:0000000140001C66                 mov     rcx, cs:DeviceObject
.text:0000000140001C6D                 mov     r9d, 61h ; 'a'
.text:0000000140001C73                 mov     r8d, r15d
.text:0000000140001C76                 mov     [rsp+48h+var_28], r12
.text:0000000140001C7B                 mov     dl, 4
.text:0000000140001C7D                 mov     rcx, [rcx+40h]
.text:0000000140001C81                 call    sub_1400016A8
.text:0000000140001C86
.text:0000000140001C86 loc_140001C86:                          ; CODE XREF: sub_140001B58+10C↑j
.text:0000000140001C86                 lea     rcx, [rdi+128h]
.text:0000000140001C8D                 mov     rdx, rbx
.text:0000000140001C90                 call    sub_14000190C
.text:0000000140001C95                 cmp     cs:off_14000D008, r14
.text:0000000140001C9C                 jz      short loc_140001CBE
.text:0000000140001C9E                 mov     rcx, cs:DeviceObject
.text:0000000140001CA5                 mov     r9d, 62h ; 'b'
.text:0000000140001CAB                 mov     r8d, r15d
.text:0000000140001CAE                 mov     [rsp+48h+var_28], r12
.text:0000000140001CB3                 mov     dl, 4
.text:0000000140001CB5                 mov     rcx, [rcx+40h]
.text:0000000140001CB9                 call    sub_1400016A8
.text:0000000140001CBE
.text:0000000140001CBE loc_140001CBE:                          ; CODE XREF: sub_140001B58+144↑j
.text:0000000140001CBE                 lea     rcx, [rdi+1C8h]
.text:0000000140001CC5                 mov     rdx, rbx
.text:0000000140001CC8                 call    sub_14000190C
.text:0000000140001CCD                 mov     rdx, [rdi+0A0h]
.text:0000000140001CD4                 test    rdx, rdx
.text:0000000140001CD7                 jz      short loc_140001D1D
.text:0000000140001CD9                 mov     rax, cs:qword_14000D388
.text:0000000140001CE0                 mov     rcx, cs:qword_14000D390
.text:0000000140001CE7                 mov     rax, [rax+520h]
.text:0000000140001CEE                 call    cs:__guard_dispatch_icall_fptr
.text:0000000140001CF4                 mov     rax, cs:qword_14000D388
.text:0000000140001CFB                 mov     rdx, [rdi+0A0h]
.text:0000000140001D02                 mov     rcx, cs:qword_14000D390
.text:0000000140001D09                 mov     rax, [rax+680h]
.text:0000000140001D10                 call    cs:__guard_dispatch_icall_fptr
.text:0000000140001D16                 mov     [rdi+0A0h], rbp
.text:0000000140001D1D
.text:0000000140001D1D loc_140001D1D:                          ; CODE XREF: sub_140001B58+17F↑j
.text:0000000140001D1D                 mov     rdx, [rdi+98h]
.text:0000000140001D24                 test    rdx, rdx
.text:0000000140001D27                 jz      short loc_140001D6D
.text:0000000140001D29                 mov     rax, cs:qword_14000D388
.text:0000000140001D30                 mov     rcx, cs:qword_14000D390
.text:0000000140001D37                 mov     rax, [rax+520h]
.text:0000000140001D3E                 call    cs:__guard_dispatch_icall_fptr
.text:0000000140001D44                 mov     rax, cs:qword_14000D388
.text:0000000140001D4B                 mov     rdx, [rdi+98h]
.text:0000000140001D52                 mov     rcx, cs:qword_14000D390
.text:0000000140001D59                 mov     rax, [rax+680h]
.text:0000000140001D60                 call    cs:__guard_dispatch_icall_fptr
.text:0000000140001D66                 mov     [rdi+98h], rbp
.text:0000000140001D6D
.text:0000000140001D6D loc_140001D6D:                          ; CODE XREF: sub_140001B58+1CF↑j
.text:0000000140001D6D                 mov     rdx, [rdi+88h]
.text:0000000140001D74                 test    rdx, rdx
.text:0000000140001D77                 jz      loc_140001E22
.text:0000000140001D7D                 jmp     short loc_140001DD9
.text:0000000140001D7F ; ---------------------------------------------------------------------------
.text:0000000140001D7F
.text:0000000140001D7F loc_140001D7F:                          ; CODE XREF: sub_140001B58+2B0↓j
.text:0000000140001D7F                 mov     rax, [rax+98h]
.text:0000000140001D86                 call    cs:__guard_dispatch_icall_fptr
.text:0000000140001D8C                 mov     rcx, cs:qword_14000D388
.text:0000000140001D93                 mov     rbx, rax
.text:0000000140001D96                 mov     rdx, [rdi+88h]
.text:0000000140001D9D                 mov     r8, rbx
.text:0000000140001DA0                 mov     rax, [rcx+80h]
.text:0000000140001DA7                 mov     rcx, cs:qword_14000D390
.text:0000000140001DAE                 call    cs:__guard_dispatch_icall_fptr
.text:0000000140001DB4                 mov     rcx, cs:qword_14000D388
.text:0000000140001DBB                 mov     rdx, rbx
.text:0000000140001DBE                 mov     rax, [rcx+680h]
.text:0000000140001DC5                 mov     rcx, cs:qword_14000D390
.text:0000000140001DCC                 call    cs:__guard_dispatch_icall_fptr
.text:0000000140001DD2                 mov     rdx, [rdi+88h]
.text:0000000140001DD9
.text:0000000140001DD9 loc_140001DD9:                          ; CODE XREF: sub_140001B58+225↑j
.text:0000000140001DD9                 mov     rax, cs:qword_14000D388
.text:0000000140001DE0                 mov     rcx, cs:qword_14000D390
.text:0000000140001DE7                 mov     rax, [rax+70h]
.text:0000000140001DEB                 call    cs:__guard_dispatch_icall_fptr
.text:0000000140001DF1                 mov     rdx, [rdi+88h]
.text:0000000140001DF8                 test    eax, eax
.text:0000000140001DFA                 mov     rax, cs:qword_14000D388
.text:0000000140001E01                 mov     rcx, cs:qword_14000D390
.text:0000000140001E08                 jnz     loc_140001D7F
.text:0000000140001E0E                 mov     rax, [rax+680h]
.text:0000000140001E15                 call    cs:__guard_dispatch_icall_fptr
.text:0000000140001E1B                 mov     [rdi+88h], rbp
.text:0000000140001E22
.text:0000000140001E22 loc_140001E22:                          ; CODE XREF: sub_140001B58+21F↑j
.text:0000000140001E22                 mov     rdx, [rdi+90h]
.text:0000000140001E29                 test    rdx, rdx
.text:0000000140001E2C                 jz      short loc_140001E50
.text:0000000140001E2E                 mov     rax, cs:qword_14000D388
.text:0000000140001E35                 mov     rcx, cs:qword_14000D390
.text:0000000140001E3C                 mov     rax, [rax+680h]
.text:0000000140001E43                 call    cs:__guard_dispatch_icall_fptr
.text:0000000140001E49                 mov     [rdi+90h], rbp
.text:0000000140001E50
.text:0000000140001E50 loc_140001E50:                          ; CODE XREF: sub_140001B58+2D4↑j
.text:0000000140001E50                 mov     rdx, [rdi+0A8h]
.text:0000000140001E57                 test    rdx, rdx
.text:0000000140001E5A                 jz      short loc_140001E7E
.text:0000000140001E5C                 mov     rax, cs:qword_14000D388
.text:0000000140001E63                 mov     rcx, cs:qword_14000D390
.text:0000000140001E6A                 mov     rax, [rax+680h]
.text:0000000140001E71                 call    cs:__guard_dispatch_icall_fptr
.text:0000000140001E77                 mov     [rdi+0A8h], rbp
.text:0000000140001E7E
.text:0000000140001E7E loc_140001E7E:                          ; CODE XREF: sub_140001B58+302↑j
.text:0000000140001E7E                 cmp     [rdi+8], ebp
.text:0000000140001E81                 jz      short loc_140001E8F
.text:0000000140001E83                 mov     rcx, rdi        ; DeviceDescription
.text:0000000140001E86                 call    sub_140001240
.text:0000000140001E8B                 mov     [rdi+40h], rbp
.text:0000000140001E8F
.text:0000000140001E8F loc_140001E8F:                          ; CODE XREF: sub_140001B58+329↑j
.text:0000000140001E8F                 cmp     cs:off_14000D008, r14
.text:0000000140001E96                 jz      short loc_140001EC2
.text:0000000140001E98                 mov     rcx, cs:DeviceObject
.text:0000000140001E9F                 cmp     [rcx+48h], bp
.text:0000000140001EA3                 jz      short loc_140001EC2
.text:0000000140001EA5                 mov     rcx, [rcx+40h]
.text:0000000140001EA9                 mov     r9d, 63h ; 'c'
.text:0000000140001EAF                 mov     [rsp+48h+var_20], esi
.text:0000000140001EB3                 mov     r8d, r15d
.text:0000000140001EB6                 mov     dl, 5
.text:0000000140001EB8                 mov     [rsp+48h+var_28], r12
.text:0000000140001EBD                 call    sub_14000176C
.text:0000000140001EC2
.text:0000000140001EC2 loc_140001EC2:                          ; CODE XREF: sub_140001B58+33E↑j
.text:0000000140001EC2                                         ; sub_140001B58+34B↑j
.text:0000000140001EC2                 mov     rbx, [rsp+48h+arg_0]
.text:0000000140001EC7                 mov     rbp, [rsp+48h+arg_8]
.text:0000000140001ECC                 mov     rsi, [rsp+48h+arg_10]
.text:0000000140001ED1                 mov     rdi, [rsp+48h+arg_18]
.text:0000000140001ED6                 add     rsp, 30h
.text:0000000140001EDA                 pop     r15
.text:0000000140001EDC                 pop     r14
.text:0000000140001EDE                 pop     r12
.text:0000000140001EE0                 retn
.text:0000000140001EE0 sub_140001B58   endp
.text:0000000140001EE0
.text:0000000140001EE0 ; ---------------------------------------------------------------------------
.text:0000000140001EE1 algn_140001EE1:                         ; DATA XREF: .pdata:000000014000E060↓o
.text:0000000140001EE1                 align 4
.text:0000000140001EE4
.text:0000000140001EE4 ; =============== S U B R O U T I N E =======================================
.text:0000000140001EE4
.text:0000000140001EE4 ; Attributes: bp-based frame fpd=50h
.text:0000000140001EE4
.text:0000000140001EE4 ; __int64 __fastcall sub_140001EE4(__int64)
.text:0000000140001EE4 sub_140001EE4   proc near               ; CODE XREF: sub_14000F0C0+58↓p
.text:0000000140001EE4                                         ; DATA XREF: .pdata:000000014000E06C↓o
.text:0000000140001EE4
.text:0000000140001EE4 var_130         = qword ptr -130h
.text:0000000140001EE4 var_128         = qword ptr -128h
.text:0000000140001EE4 var_120         = qword ptr -120h
.text:0000000140001EE4 var_118         = qword ptr -118h
.text:0000000140001EE4 var_110         = xmmword ptr -110h
.text:0000000140001EE4 var_100         = xmmword ptr -100h
.text:0000000140001EE4 var_F0          = xmmword ptr -0F0h
.text:0000000140001EE4 var_E0          = qword ptr -0E0h
.text:0000000140001EE4 var_D0          = __m128 ptr -0D0h
.text:0000000140001EE4 var_A8          = qword ptr -0A8h
.text:0000000140001EE4 var_A0          = qword ptr -0A0h
.text:0000000140001EE4 var_40          = dword ptr -40h
.text:0000000140001EE4 var_38          = qword ptr -38h
.text:0000000140001EE4 var_30          = qword ptr -30h
.text:0000000140001EE4 var_28          = qword ptr -28h
.text:0000000140001EE4 var_20          = dword ptr -20h
.text:0000000140001EE4 var_1C          = dword ptr -1Ch
.text:0000000140001EE4 var_18          = qword ptr -18h
.text:0000000140001EE4 var_10          = byte ptr -10h
.text:0000000140001EE4 arg_8           = qword ptr  18h
.text:0000000140001EE4 arg_10          = qword ptr  20h
.text:0000000140001EE4
.text:0000000140001EE4 ; __unwind { // __GSHandlerCheck
.text:0000000140001EE4                 mov     [rsp-8+arg_8], rbx
.text:0000000140001EE9                 mov     [rsp-8+arg_10], rdi
.text:0000000140001EEE                 push    rbp
.text:0000000140001EEF                 push    r14
.text:0000000140001EF1                 push    r15
.text:0000000140001EF3                 lea     rbp, [rsp-40h]
.text:0000000140001EF8                 sub     rsp, 140h
.text:0000000140001EFF                 mov     rax, cs:__security_cookie
.text:0000000140001F06                 xor     rax, rsp
.text:0000000140001F09                 mov     [rbp+50h+var_18], rax
.text:0000000140001F0D                 mov     rdx, rcx
.text:0000000140001F10                 mov     [rsp+150h+var_120], rcx
.text:0000000140001F15                 lea     rdi, off_14000D008
.text:0000000140001F1C                 xor     r15d, r15d
.text:0000000140001F1F                 cmp     cs:off_14000D008, rdi
.text:0000000140001F26                 lea     r14, unk_14000B2C0
.text:0000000140001F2D                 jz      short loc_140001F5A
.text:0000000140001F2F                 mov     rcx, cs:DeviceObject
.text:0000000140001F36                 cmp     [rcx+48h], r15w
.text:0000000140001F3B                 jz      short loc_140001F5A
.text:0000000140001F3D                 mov     rcx, [rcx+40h]
.text:0000000140001F41                 lea     r9d, [r15+0Ah]
.text:0000000140001F45                 lea     r8d, [r15+3]
.text:0000000140001F49                 mov     [rsp+150h+var_130], r14
.text:0000000140001F4E                 mov     dl, 5
.text:0000000140001F50                 call    sub_1400016A8
.text:0000000140001F55                 mov     rdx, [rsp+150h+var_120]
.text:0000000140001F5A
.text:0000000140001F5A loc_140001F5A:                          ; CODE XREF: sub_140001EE4+49↑j
.text:0000000140001F5A                                         ; sub_140001EE4+57↑j
.text:0000000140001F5A                 mov     rax, cs:qword_14000D388
.text:0000000140001F61                 mov     rcx, cs:qword_14000D390
.text:0000000140001F68                 mov     rax, [rax+408h]
.text:0000000140001F6F                 call    cs:__guard_dispatch_icall_fptr
.text:0000000140001F75                 mov     rax, cs:qword_14000D388
.text:0000000140001F7C                 lea     r8, sub_140003290
.text:0000000140001F83                 mov     rdx, [rsp+150h+var_120]
.text:0000000140001F88                 mov     rcx, cs:qword_14000D390
.text:0000000140001F8F                 mov     rax, [rax+250h]
.text:0000000140001F96                 call    cs:__guard_dispatch_icall_fptr
.text:0000000140001F9C                 xorps   xmm0, xmm0
.text:0000000140001F9F                 lea     rcx, [rbp+50h+var_D0]
.text:0000000140001FA3                 mov     eax, 1
.text:0000000140001FA8                 mov     ebx, 90h
.text:0000000140001FAD                 movups  [rsp+150h+var_100], xmm0
.text:0000000140001FB2                 mov     dword ptr [rsp+150h+var_100+8], eax
.text:0000000140001FB6                 mov     r8d, ebx
.text:0000000140001FB9                 mov     dword ptr [rsp+150h+var_100+0Ch], eax
.text:0000000140001FBD                 xor     edx, edx
.text:0000000140001FBF                 mov     rax, cs:off_14000D028
.text:0000000140001FC6                 movups  [rsp+150h+var_110], xmm0
.text:0000000140001FCB                 mov     [rsp+150h+var_E0], rax
.text:0000000140001FD0                 movups  [rsp+150h+var_F0], xmm0
.text:0000000140001FD5                 mov     dword ptr [rsp+150h+var_110], 38h ; '8'
.text:0000000140001FDD                 call    sub_14000A4C0
.text:0000000140001FE2                 mov     rdx, [rsp+150h+var_120]
.text:0000000140001FE7                 lea     rax, sub_140002C50
.text:0000000140001FEE                 mov     rcx, cs:qword_14000D390
.text:0000000140001FF5                 lea     r8, [rbp+50h+var_D0]
.text:0000000140001FF9                 mov     [rbp+50h+var_A8], rax
.text:0000000140001FFD                 lea     rax, sub_140002DF0
.text:0000000140002004                 mov     [rbp+50h+var_A0], rax
.text:0000000140002008                 mov     rax, cs:qword_14000D388
.text:000000014000200F                 mov     dword ptr [rbp+50h+var_D0], ebx
.text:0000000140002012                 mov     rax, [rax+1B8h]
.text:0000000140002019                 call    cs:__guard_dispatch_icall_fptr
.text:000000014000201F                 mov     rdx, [rsp+150h+var_120]
.text:0000000140002024                 lea     rax, sub_140002950
.text:000000014000202B                 mov     rcx, cs:qword_14000D390
.text:0000000140002032                 lea     r9, [rsp+150h+var_110]
.text:0000000140002037                 mov     [rbp+50h+var_38], rax
.text:000000014000203B                 lea     r8, [rbp+50h+var_40]
.text:000000014000203F                 lea     rax, sub_140002FE0
.text:0000000140002046                 mov     [rbp+50h+var_40], 28h ; '('
.text:000000014000204D                 mov     [rbp+50h+var_28], rax
.text:0000000140002051                 mov     rax, cs:qword_14000D388
.text:0000000140002058                 mov     [rbp+50h+var_30], r15
.text:000000014000205C                 mov     [rbp+50h+var_1C], 4
.text:0000000140002063                 mov     [rbp+50h+var_20], 2
.text:000000014000206A                 mov     rax, [rax+238h]
.text:0000000140002071                 call    cs:__guard_dispatch_icall_fptr
.text:0000000140002077                 mov     rax, cs:qword_14000D388
.text:000000014000207E                 lea     r9, [rsp+150h+var_118]
.text:0000000140002083                 mov     rcx, cs:qword_14000D390
.text:000000014000208A                 lea     r8, [rsp+150h+var_110]
.text:000000014000208F                 lea     rdx, [rsp+150h+var_120]
.text:0000000140002094                 mov     rax, [rax+258h]
.text:000000014000209B                 call    cs:__guard_dispatch_icall_fptr
.text:00000001400020A1                 mov     ebx, eax
.text:00000001400020A3                 test    eax, eax
.text:00000001400020A5                 jns     short loc_1400020BC
.text:00000001400020A7                 cmp     cs:off_14000D008, rdi
.text:00000001400020AE                 jz      loc_14000215B
.text:00000001400020B4                 mov     r9d, 0Bh
.text:00000001400020BA                 jmp     short loc_140002102
.text:00000001400020BC ; ---------------------------------------------------------------------------
.text:00000001400020BC
.text:00000001400020BC loc_1400020BC:                          ; CODE XREF: sub_140001EE4+1C1↑j
.text:00000001400020BC                 mov     rax, cs:qword_14000D388
.text:00000001400020C3                 mov     r8, cs:off_14000D028
.text:00000001400020CA                 mov     rdx, [rsp+150h+var_118]
.text:00000001400020CF                 mov     rcx, cs:qword_14000D390
.text:00000001400020D6                 mov     rax, [rax+650h]
.text:00000001400020DD                 call    cs:__guard_dispatch_icall_fptr
.text:00000001400020E3                 mov     rcx, [rsp+150h+var_118]
.text:00000001400020E8                 call    sub_140006434
.text:00000001400020ED                 mov     ebx, eax
.text:00000001400020EF                 test    eax, eax
.text:00000001400020F1                 jns     short loc_140002126
.text:00000001400020F3                 cmp     cs:off_14000D008, rdi
.text:00000001400020FA                 jz      short loc_14000215B
.text:00000001400020FC                 mov     r9d, 0Ch
.text:0000000140002102
.text:0000000140002102 loc_140002102:                          ; CODE XREF: sub_140001EE4+1D6↑j
.text:0000000140002102                 lfence
.text:0000000140002105                 mov     rcx, cs:DeviceObject
.text:000000014000210C                 mov     r8d, 3
.text:0000000140002112                 mov     dword ptr [rsp+150h+var_128], eax
.text:0000000140002116                 mov     dl, 2
.text:0000000140002118                 mov     [rsp+150h+var_130], r14
.text:000000014000211D                 mov     rcx, [rcx+40h]
.text:0000000140002121                 call    sub_14000176C
.text:0000000140002126
.text:0000000140002126 loc_140002126:                          ; CODE XREF: sub_140001EE4+20D↑j
.text:0000000140002126                 cmp     cs:off_14000D008, rdi
.text:000000014000212D                 jz      short loc_14000215B
.text:000000014000212F                 mov     rcx, cs:DeviceObject
.text:0000000140002136                 cmp     [rcx+48h], r15w
.text:000000014000213B                 jz      short loc_14000215B
.text:000000014000213D                 mov     rcx, [rcx+40h]
.text:0000000140002141                 mov     r9d, 0Dh
.text:0000000140002147                 mov     dword ptr [rsp+150h+var_128], ebx
.text:000000014000214B                 mov     dl, 5
.text:000000014000214D                 mov     [rsp+150h+var_130], r14
.text:0000000140002152                 lea     r8d, [r9-0Ah]
.text:0000000140002156                 call    sub_14000176C
.text:000000014000215B
.text:000000014000215B loc_14000215B:                          ; CODE XREF: sub_140001EE4+1CA↑j
.text:000000014000215B                                         ; sub_140001EE4+216↑j ...
.text:000000014000215B                 mov     eax, ebx
.text:000000014000215D                 mov     rcx, [rbp+50h+var_18]
.text:0000000140002161                 xor     rcx, rsp        ; StackCookie
.text:0000000140002164                 call    __security_check_cookie
.text:0000000140002169                 lea     r11, [rsp+150h+var_10]
.text:0000000140002171                 mov     rbx, [r11+28h]
.text:0000000140002175                 mov     rdi, [r11+30h]
.text:0000000140002179                 mov     rsp, r11
.text:000000014000217C                 pop     r15
.text:000000014000217E                 pop     r14
.text:0000000140002180                 pop     rbp
.text:0000000140002181                 retn
.text:0000000140002181 ; } // starts at 140001EE4
.text:0000000140002181 sub_140001EE4   endp
.text:0000000140002181
.text:0000000140002181 ; ---------------------------------------------------------------------------
.text:0000000140002182 algn_140002182:                         ; DATA XREF: .pdata:000000014000E06C↓o
.text:0000000140002182                 align 4
.text:0000000140002184 ; [000006A8 BYTES: COLLAPSED FUNCTION DoScreenSave. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:000000014000282C algn_14000282C:                         ; DATA XREF: .pdata:000000014000E078↓o
.text:000000014000282C                 align 10h
.text:0000000140002830
.text:0000000140002830 ; =============== S U B R O U T I N E =======================================
.text:0000000140002830
.text:0000000140002830
.text:0000000140002830 ; void **__fastcall sub_140002830(__int64)
.text:0000000140002830 sub_140002830   proc near               ; DATA XREF: sub_140004958+3AD↓o
.text:0000000140002830                                         ; .rdata:__guard_fids_table↓o ...
.text:0000000140002830
.text:0000000140002830 var_18          = qword ptr -18h
.text:0000000140002830 arg_0           = qword ptr  8
.text:0000000140002830 arg_8           = qword ptr  10h
.text:0000000140002830 arg_10          = qword ptr  18h
.text:0000000140002830
.text:0000000140002830                 mov     rax, rsp
.text:0000000140002833                 mov     [rax+8], rbx
.text:0000000140002837                 mov     [rax+10h], rbp
.text:000000014000283B                 mov     [rax+18h], rdi
.text:000000014000283F                 push    r14
.text:0000000140002841                 sub     rsp, 30h
.text:0000000140002845                 mov     rbx, rcx
.text:0000000140002848                 lea     r14, off_14000D008
.text:000000014000284F                 cmp     cs:off_14000D008, r14
.text:0000000140002856                 lea     rbp, unk_14000B2C0
.text:000000014000285D                 jz      short loc_140002888
.text:000000014000285F                 mov     rcx, cs:DeviceObject
.text:0000000140002866                 cmp     word ptr [rcx+48h], 0
.text:000000014000286B                 jz      short loc_140002888
.text:000000014000286D                 mov     rcx, [rcx+40h]
.text:0000000140002871                 mov     r9d, 0A0h
.text:0000000140002877                 mov     r8d, 3
.text:000000014000287D                 mov     [rax-18h], rbp
.text:0000000140002881                 mov     dl, 5
.text:0000000140002883                 call    sub_1400016A8
.text:0000000140002888
.text:0000000140002888 loc_140002888:                          ; CODE XREF: sub_140002830+2D↑j
.text:0000000140002888                                         ; sub_140002830+3B↑j
.text:0000000140002888                 mov     rax, cs:qword_14000D388
.text:000000014000288F                 mov     rdx, rbx
.text:0000000140002892                 mov     rcx, cs:qword_14000D390
.text:0000000140002899                 mov     rax, [rax+570h]
.text:00000001400028A0                 call    cs:__guard_dispatch_icall_fptr
.text:00000001400028A6                 mov     rcx, cs:qword_14000D388
.text:00000001400028AD                 mov     rbx, rax
.text:00000001400028B0                 mov     r8, cs:off_14000D028
.text:00000001400028B7                 mov     rdx, rbx
.text:00000001400028BA                 mov     rax, [rcx+650h]
.text:00000001400028C1                 mov     rcx, cs:qword_14000D390
.text:00000001400028C8                 call    cs:__guard_dispatch_icall_fptr
.text:00000001400028CE                 mov     rdx, rbx
.text:00000001400028D1                 mov     rdi, rax
.text:00000001400028D4                 lea     rcx, [rax+1C8h]
.text:00000001400028DB                 call    sub_14000190C
.text:00000001400028E0                 or      dword ptr [rdi+268h], 0FFFFFFFFh
.text:00000001400028E7                 or      dword ptr [rdi+27Eh], 0FFFFFFFFh
.text:00000001400028EE                 mov     dword ptr [rdi+26Ch], 7FFFFFFFh
.text:00000001400028F8                 cmp     cs:off_14000D008, r14
.text:00000001400028FF                 jz      short loc_14000292B
.text:0000000140002901                 mov     rcx, cs:DeviceObject
.text:0000000140002908                 cmp     word ptr [rcx+48h], 0
.text:000000014000290D                 jz      short loc_14000292B
.text:000000014000290F                 mov     rcx, [rcx+40h]
.text:0000000140002913                 mov     r9d, 0A1h
.text:0000000140002919                 mov     r8d, 3
.text:000000014000291F                 mov     [rsp+38h+var_18], rbp
.text:0000000140002924                 mov     dl, 5
.text:0000000140002926                 call    sub_1400016A8
.text:000000014000292B
.text:000000014000292B loc_14000292B:                          ; CODE XREF: sub_140002830+CF↑j
.text:000000014000292B                                         ; sub_140002830+DD↑j
.text:000000014000292B                 mov     rbx, [rsp+38h+arg_0]
.text:0000000140002930                 mov     rbp, [rsp+38h+arg_8]
.text:0000000140002935                 mov     rdi, [rsp+38h+arg_10]
.text:000000014000293A                 add     rsp, 30h
.text:000000014000293E                 pop     r14
.text:0000000140002940                 retn
.text:0000000140002940 sub_140002830   endp
.text:0000000140002940
.text:0000000140002940 ; ---------------------------------------------------------------------------
.text:0000000140002941 algn_140002941:                         ; DATA XREF: .pdata:000000014000E084↓o
.text:0000000140002941                 align 10h
.text:0000000140002950
.text:0000000140002950 ; =============== S U B R O U T I N E =======================================
.text:0000000140002950
.text:0000000140002950
.text:0000000140002950 ; __int64 __fastcall sub_140002950(__int64, __int64, __int64)
.text:0000000140002950 sub_140002950   proc near               ; DATA XREF: sub_140001EE4+140↑o
.text:0000000140002950                                         ; .rdata:000000014000B144↓o ...
.text:0000000140002950
.text:0000000140002950 var_98          = qword ptr -98h
.text:0000000140002950 var_90          = qword ptr -90h
.text:0000000140002950 var_88          = qword ptr -88h
.text:0000000140002950 var_78          = xmmword ptr -78h
.text:0000000140002950 var_68          = xmmword ptr -68h
.text:0000000140002950 var_58          = qword ptr -58h
.text:0000000140002950 var_50          = dword ptr -50h
.text:0000000140002950 var_4C          = dword ptr -4Ch
.text:0000000140002950 var_48          = qword ptr -48h
.text:0000000140002950 var_40          = qword ptr -40h
.text:0000000140002950 arg_18          = qword ptr  20h
.text:0000000140002950
.text:0000000140002950 ; __unwind { // __GSHandlerCheck
.text:0000000140002950                 mov     [rsp+arg_18], rbx
.text:0000000140002955                 push    rbp
.text:0000000140002956                 push    rsi
.text:0000000140002957                 push    rdi
.text:0000000140002958                 push    r12
.text:000000014000295A                 push    r13
.text:000000014000295C                 push    r14
.text:000000014000295E                 push    r15
.text:0000000140002960                 sub     rsp, 80h
.text:0000000140002967                 mov     rax, cs:__security_cookie
.text:000000014000296E                 xor     rax, rsp
.text:0000000140002971                 mov     [rsp+0B8h+var_40], rax
.text:0000000140002976                 xor     r15d, r15d
.text:0000000140002979                 mov     rsi, r8
.text:000000014000297C                 mov     ebx, r15d
.text:000000014000297F                 mov     rdi, rdx
.text:0000000140002982                 mov     r14, rcx
.text:0000000140002985                 lea     r12, off_14000D008
.text:000000014000298C                 cmp     cs:off_14000D008, r12
.text:0000000140002993                 lea     rax, unk_14000B2C0
.text:000000014000299A                 lea     r13d, [r15+3]
.text:000000014000299E                 jz      short loc_1400029C5
.text:00000001400029A0                 mov     rcx, cs:DeviceObject
.text:00000001400029A7                 cmp     [rcx+48h], r15w
.text:00000001400029AC                 jz      short loc_1400029C5
.text:00000001400029AE                 mov     rcx, [rcx+40h]
.text:00000001400029B2                 lea     r9d, [r15+17h]
.text:00000001400029B6                 mov     r8d, r13d
.text:00000001400029B9                 mov     [rsp+0B8h+var_98], rax
.text:00000001400029BE                 mov     dl, 5
.text:00000001400029C0                 call    sub_1400016A8
.text:00000001400029C5
.text:00000001400029C5 loc_1400029C5:                          ; CODE XREF: sub_140002950+4E↑j
.text:00000001400029C5                                         ; sub_140002950+5C↑j
.text:00000001400029C5                 mov     rax, cs:qword_14000D388
.text:00000001400029CC                 mov     rdx, rsi
.text:00000001400029CF                 mov     rcx, cs:qword_14000D390
.text:00000001400029D6                 mov     rax, [rax+460h]
.text:00000001400029DD                 call    cs:__guard_dispatch_icall_fptr
.text:00000001400029E3                 mov     rbp, rax
.text:00000001400029E6                 cmp     cs:off_14000D008, r12
.text:00000001400029ED                 jz      short loc_140002A29
.text:00000001400029EF                 mov     rcx, cs:DeviceObject
.text:00000001400029F6                 cmp     [rcx+48h], r15w
.text:00000001400029FB                 jz      short loc_140002A29
.text:00000001400029FD                 mov     rcx, [rcx+40h]
.text:0000000140002A01                 mov     r9d, 18h
.text:0000000140002A07                 mov     [rsp+0B8h+var_88], rax
.text:0000000140002A0C                 mov     r8d, r13d
.text:0000000140002A0F                 mov     [rsp+0B8h+var_90], rsi
.text:0000000140002A14                 mov     dl, 5
.text:0000000140002A16                 lea     rsi, unk_14000B2C0
.text:0000000140002A1D                 mov     [rsp+0B8h+var_98], rsi
.text:0000000140002A22                 call    sub_1400062C4
.text:0000000140002A27                 jmp     short loc_140002A30
.text:0000000140002A29 ; ---------------------------------------------------------------------------
.text:0000000140002A29
.text:0000000140002A29 loc_140002A29:                          ; CODE XREF: sub_140002950+9D↑j
.text:0000000140002A29                                         ; sub_140002950+AB↑j
.text:0000000140002A29                 lea     rsi, unk_14000B2C0
.text:0000000140002A30
.text:0000000140002A30 loc_140002A30:                          ; CODE XREF: sub_140002950+D7↑j
.text:0000000140002A30                 mov     rax, cs:qword_14000D388
.text:0000000140002A37                 mov     rdx, rdi
.text:0000000140002A3A                 mov     rcx, cs:qword_14000D390
.text:0000000140002A41                 mov     rax, [rax+7D8h]
.text:0000000140002A48                 call    cs:__guard_dispatch_icall_fptr
.text:0000000140002A4E                 mov     rax, cs:qword_14000D388
.text:0000000140002A55                 mov     rdx, r14
.text:0000000140002A58                 mov     rcx, cs:qword_14000D390
.text:0000000140002A5F                 mov     [rsp+0B8h+var_48], r15
.text:0000000140002A64                 mov     [rsp+0B8h+var_50], 10h
.text:0000000140002A6C                 mov     [rsp+0B8h+var_4C], 2
.text:0000000140002A74                 mov     rax, [rax+150h]
.text:0000000140002A7B                 call    cs:__guard_dispatch_icall_fptr
.text:0000000140002A81                 mov     rcx, cs:qword_14000D390
.text:0000000140002A88                 lea     r9, [rsp+0B8h+var_50]
.text:0000000140002A8D                 mov     r8, rax
.text:0000000140002A90                 mov     rdx, rdi
.text:0000000140002A93                 mov     rax, cs:qword_14000D388
.text:0000000140002A9A                 mov     rax, [rax+7E8h]
.text:0000000140002AA1                 call    cs:__guard_dispatch_icall_fptr
.text:0000000140002AA7                 mov     rcx, cs:qword_14000D390
.text:0000000140002AAE                 mov     rdx, rdi
.text:0000000140002AB1                 test    al, al
.text:0000000140002AB3                 jnz     short loc_140002AE3
.text:0000000140002AB5                 mov     rax, cs:qword_14000D388
.text:0000000140002ABC                 mov     rax, [rax+7F0h]
.text:0000000140002AC3                 call    cs:__guard_dispatch_icall_fptr
.text:0000000140002AC9                 mov     ebx, eax
.text:0000000140002ACB                 cmp     cs:off_14000D008, r12
.text:0000000140002AD2                 jz      loc_140002BD2
.text:0000000140002AD8                 mov     r9d, 19h
.text:0000000140002ADE                 jmp     loc_140002BB4
.text:0000000140002AE3 ; ---------------------------------------------------------------------------
.text:0000000140002AE3
.text:0000000140002AE3 loc_140002AE3:                          ; CODE XREF: sub_140002950+163↑j
.text:0000000140002AE3                 xor     eax, eax
.text:0000000140002AE5                 lea     r8, [rsp+0B8h+var_78]
.text:0000000140002AEA                 mov     [rsp+0B8h+var_58], rax
.text:0000000140002AEF                 xorps   xmm0, xmm0
.text:0000000140002AF2                 movups  [rsp+0B8h+var_78], xmm0
.text:0000000140002AF7                 mov     eax, 28h ; '('
.text:0000000140002AFC                 mov     word ptr [rsp+0B8h+var_78], ax
.text:0000000140002B01                 mov     rax, cs:qword_14000D388
.text:0000000140002B08                 movups  [rsp+0B8h+var_68], xmm0
.text:0000000140002B0D                 mov     rax, [rax+850h]
.text:0000000140002B14                 call    cs:__guard_dispatch_icall_fptr
.text:0000000140002B1A                 mov     eax, dword ptr [rsp+0B8h+var_78+4]
.text:0000000140002B1E                 test    eax, eax
.text:0000000140002B20                 jz      short loc_140002B4B
.text:0000000140002B22                 cmp     cs:off_14000D008, r12
.text:0000000140002B29                 jz      loc_140002BD2
.text:0000000140002B2F                 mov     rcx, cs:DeviceObject
.text:0000000140002B36                 cmp     [rcx+48h], r15w
.text:0000000140002B3B                 jz      loc_140002BD2
.text:0000000140002B41                 mov     r9d, 1Ah
.text:0000000140002B47                 mov     dl, 5
.text:0000000140002B49                 jmp     short loc_140002BBD
.text:0000000140002B4B ; ---------------------------------------------------------------------------
.text:0000000140002B4B
.text:0000000140002B4B loc_140002B4B:                          ; CODE XREF: sub_140002950+1D0↑j
.text:0000000140002B4B                 mov     rax, qword ptr [rsp+0B8h+var_78+8]
.text:0000000140002B50                 mov     edx, [rax+10h]
.text:0000000140002B53                 test    edx, 120089h
.text:0000000140002B59                 jnz     short loc_140002B91
.text:0000000140002B5B                 cmp     cs:off_14000D008, r12
.text:0000000140002B62                 jz      short loc_140002BD2
.text:0000000140002B64                 mov     rcx, cs:DeviceObject
.text:0000000140002B6B                 cmp     [rcx+48h], r15w
.text:0000000140002B70                 jz      short loc_140002BD2
.text:0000000140002B72                 mov     rcx, [rcx+40h]
.text:0000000140002B76                 mov     r9d, 1Bh
.text:0000000140002B7C                 mov     dword ptr [rsp+0B8h+var_90], edx
.text:0000000140002B80                 mov     r8d, r13d
.text:0000000140002B83                 mov     dl, 5
.text:0000000140002B85                 mov     [rsp+0B8h+var_98], rsi
.text:0000000140002B8A                 call    sub_14000176C
.text:0000000140002B8F                 jmp     short loc_140002BD2
.text:0000000140002B91 ; ---------------------------------------------------------------------------
.text:0000000140002B91
.text:0000000140002B91 loc_140002B91:                          ; CODE XREF: sub_140002950+209↑j
.text:0000000140002B91                 mov     rdx, rbp
.text:0000000140002B94                 mov     rcx, r14
.text:0000000140002B97                 call    sub_1400046A4
.text:0000000140002B9C                 mov     ebx, eax
.text:0000000140002B9E                 test    eax, eax
.text:0000000140002BA0                 jns     short loc_140002BD2
.text:0000000140002BA2                 cmp     cs:off_14000D008, r12
.text:0000000140002BA9                 jz      short loc_140002BD2
.text:0000000140002BAB                 lfence
.text:0000000140002BAE                 mov     r9d, 1Ch
.text:0000000140002BB4
.text:0000000140002BB4 loc_140002BB4:                          ; CODE XREF: sub_140002950+18E↑j
.text:0000000140002BB4                 mov     rcx, cs:DeviceObject
.text:0000000140002BBB                 mov     dl, 2
.text:0000000140002BBD
.text:0000000140002BBD loc_140002BBD:                          ; CODE XREF: sub_140002950+1F9↑j
.text:0000000140002BBD                 mov     rcx, [rcx+40h]
.text:0000000140002BC1                 mov     r8d, r13d
.text:0000000140002BC4                 mov     dword ptr [rsp+0B8h+var_90], eax
.text:0000000140002BC8                 mov     [rsp+0B8h+var_98], rsi
.text:0000000140002BCD                 call    sub_14000176C
.text:0000000140002BD2
.text:0000000140002BD2 loc_140002BD2:                          ; CODE XREF: sub_140002950+182↑j
.text:0000000140002BD2                                         ; sub_140002950+1D9↑j ...
.text:0000000140002BD2                 mov     rax, cs:qword_14000D388
.text:0000000140002BD9                 mov     r8d, ebx
.text:0000000140002BDC                 mov     rcx, cs:qword_14000D390
.text:0000000140002BE3                 mov     rdx, rdi
.text:0000000140002BE6                 mov     rax, [rax+838h]
.text:0000000140002BED                 call    cs:__guard_dispatch_icall_fptr
.text:0000000140002BF3                 cmp     cs:off_14000D008, r12
.text:0000000140002BFA                 jz      short loc_140002C27
.text:0000000140002BFC                 mov     rcx, cs:DeviceObject
.text:0000000140002C03                 cmp     [rcx+48h], r15w
.text:0000000140002C08                 jz      short loc_140002C27
.text:0000000140002C0A                 mov     rcx, [rcx+40h]
.text:0000000140002C0E                 mov     r9d, 1Dh
.text:0000000140002C14                 mov     dword ptr [rsp+0B8h+var_90], ebx
.text:0000000140002C18                 mov     r8d, r13d
.text:0000000140002C1B                 mov     dl, 5
.text:0000000140002C1D                 mov     [rsp+0B8h+var_98], rsi
.text:0000000140002C22                 call    sub_14000176C
.text:0000000140002C27
.text:0000000140002C27 loc_140002C27:                          ; CODE XREF: sub_140002950+2AA↑j
.text:0000000140002C27                                         ; sub_140002950+2B8↑j
.text:0000000140002C27                 mov     rcx, [rsp+0B8h+var_40]
.text:0000000140002C2C                 xor     rcx, rsp        ; StackCookie
.text:0000000140002C2F                 call    __security_check_cookie
.text:0000000140002C34                 mov     rbx, [rsp+0B8h+arg_18]
.text:0000000140002C3C                 add     rsp, 80h
.text:0000000140002C43                 pop     r15
.text:0000000140002C45                 pop     r14
.text:0000000140002C47                 pop     r13
.text:0000000140002C49                 pop     r12
.text:0000000140002C4B                 pop     rdi
.text:0000000140002C4C                 pop     rsi
.text:0000000140002C4D                 pop     rbp
.text:0000000140002C4E                 retn
.text:0000000140002C4E ; } // starts at 140002950
.text:0000000140002C4E sub_140002950   endp
.text:0000000140002C4E
.text:0000000140002C4E ; ---------------------------------------------------------------------------
.text:0000000140002C4F algn_140002C4F:                         ; DATA XREF: .pdata:000000014000E090↓o
.text:0000000140002C4F                 align 10h
.text:0000000140002C50
.text:0000000140002C50 ; =============== S U B R O U T I N E =======================================
.text:0000000140002C50
.text:0000000140002C50
.text:0000000140002C50 ; __int64 __fastcall sub_140002C50(PVOID Context, __int16)
.text:0000000140002C50 sub_140002C50   proc near               ; DATA XREF: sub_140001EE4+103↑o
.text:0000000140002C50                                         ; .rdata:000000014000B148↓o ...
.text:0000000140002C50
.text:0000000140002C50 var_28          = qword ptr -28h
.text:0000000140002C50 var_20          = qword ptr -20h
.text:0000000140002C50 arg_0           = qword ptr  8
.text:0000000140002C50 arg_8           = qword ptr  10h
.text:0000000140002C50 arg_10          = qword ptr  18h
.text:0000000140002C50
.text:0000000140002C50                 mov     rax, rsp
.text:0000000140002C53                 mov     [rax+8], rbx
.text:0000000140002C57                 mov     [rax+10h], rbp
.text:0000000140002C5B                 mov     [rax+18h], rsi
.text:0000000140002C5F                 push    rdi
.text:0000000140002C60                 push    r14
.text:0000000140002C62                 push    r15
.text:0000000140002C64                 sub     rsp, 30h
.text:0000000140002C68                 mov     rdi, rcx
.text:0000000140002C6B                 xor     ebp, ebp
.text:0000000140002C6D                 lea     rsi, off_14000D008
.text:0000000140002C74                 cmp     cs:off_14000D008, rsi
.text:0000000140002C7B                 lea     r15, unk_14000B2C0
.text:0000000140002C82                 lea     r14d, [rbp+3]
.text:0000000140002C86                 jz      short loc_140002CAB
.text:0000000140002C88                 mov     rcx, cs:DeviceObject
.text:0000000140002C8F                 cmp     [rcx+48h], bp
.text:0000000140002C93                 jz      short loc_140002CAB
.text:0000000140002C95                 mov     rcx, [rcx+40h]
.text:0000000140002C99                 lea     r9d, [rbp+0Eh]
.text:0000000140002C9D                 mov     r8d, r14d
.text:0000000140002CA0                 mov     [rax-28h], r15
.text:0000000140002CA4                 mov     dl, 5
.text:0000000140002CA6                 call    sub_1400016A8
.text:0000000140002CAB
.text:0000000140002CAB loc_140002CAB:                          ; CODE XREF: sub_140002C50+36↑j
.text:0000000140002CAB                                         ; sub_140002C50+43↑j
.text:0000000140002CAB                 mov     rax, cs:qword_14000D388
.text:0000000140002CB2                 mov     rdx, rdi
.text:0000000140002CB5                 mov     r8, cs:off_14000D028
.text:0000000140002CBC                 mov     rcx, cs:qword_14000D390
.text:0000000140002CC3                 mov     rax, [rax+650h]
.text:0000000140002CCA                 call    cs:__guard_dispatch_icall_fptr
.text:0000000140002CD0                 mov     rcx, rdi        ; StartContext
.text:0000000140002CD3                 call    DoScreenSave
.text:0000000140002CD8                 mov     ebx, eax
.text:0000000140002CDA                 test    eax, eax
.text:0000000140002CDC                 jns     short loc_140002D17
.text:0000000140002CDE                 cmp     cs:off_14000D008, rsi
.text:0000000140002CE5                 jz      loc_140002DD4
.text:0000000140002CEB                 mov     r9d, 0Fh
.text:0000000140002CF1
.text:0000000140002CF1 loc_140002CF1:                          ; CODE XREF: sub_140002C50+EB↓j
.text:0000000140002CF1                                         ; sub_140002C50+10D↓j
.text:0000000140002CF1                 lfence
.text:0000000140002CF4                 mov     rcx, cs:DeviceObject
.text:0000000140002CFB                 mov     r8d, r14d
.text:0000000140002CFE                 mov     dword ptr [rsp+48h+var_20], eax
.text:0000000140002D02                 mov     dl, 2
.text:0000000140002D04                 mov     [rsp+48h+var_28], r15
.text:0000000140002D09                 mov     rcx, [rcx+40h]
.text:0000000140002D0D                 call    sub_14000176C
.text:0000000140002D12                 jmp     loc_140002DA1
.text:0000000140002D17 ; ---------------------------------------------------------------------------
.text:0000000140002D17
.text:0000000140002D17 loc_140002D17:                          ; CODE XREF: sub_140002C50+8C↑j
.text:0000000140002D17                 lfence
.text:0000000140002D1A                 mov     rcx, rdi        ; Context
.text:0000000140002D1D                 call    sub_14000597C
.text:0000000140002D22                 mov     ebx, eax
.text:0000000140002D24                 test    eax, eax
.text:0000000140002D26                 jns     short loc_140002D3D
.text:0000000140002D28                 cmp     cs:off_14000D008, rsi
.text:0000000140002D2F                 jz      loc_140002DD4
.text:0000000140002D35                 mov     r9d, 10h
.text:0000000140002D3B                 jmp     short loc_140002CF1
.text:0000000140002D3D ; ---------------------------------------------------------------------------
.text:0000000140002D3D
.text:0000000140002D3D loc_140002D3D:                          ; CODE XREF: sub_140002C50+D6↑j
.text:0000000140002D3D                 lfence
.text:0000000140002D40                 mov     rcx, rdi
.text:0000000140002D43                 call    sub_140004314
.text:0000000140002D48                 mov     ebx, eax
.text:0000000140002D4A                 test    eax, eax
.text:0000000140002D4C                 jns     short loc_140002D5F
.text:0000000140002D4E                 cmp     cs:off_14000D008, rsi
.text:0000000140002D55                 jz      short loc_140002DD4
.text:0000000140002D57                 mov     r9d, 11h
.text:0000000140002D5D                 jmp     short loc_140002CF1
.text:0000000140002D5F ; ---------------------------------------------------------------------------
.text:0000000140002D5F
.text:0000000140002D5F loc_140002D5F:                          ; CODE XREF: sub_140002C50+FC↑j
.text:0000000140002D5F                 lfence
.text:0000000140002D62                 mov     rax, cs:qword_14000D388
.text:0000000140002D69                 mov     rdx, rdi
.text:0000000140002D6C                 mov     rcx, cs:qword_14000D390
.text:0000000140002D73                 mov     rax, [rax+2E0h]
.text:0000000140002D7A                 call    cs:__guard_dispatch_icall_fptr
.text:0000000140002D80                 mov     rcx, cs:qword_14000D388
.text:0000000140002D87                 mov     rdx, rax
.text:0000000140002D8A                 mov     r8, [rcx+4D0h]
.text:0000000140002D91                 mov     rcx, cs:qword_14000D390
.text:0000000140002D98                 mov     rax, r8
.text:0000000140002D9B                 call    cs:__guard_dispatch_icall_fptr
.text:0000000140002DA1
.text:0000000140002DA1 loc_140002DA1:                          ; CODE XREF: sub_140002C50+C2↑j
.text:0000000140002DA1                 cmp     cs:off_14000D008, rsi
.text:0000000140002DA8                 jz      short loc_140002DD4
.text:0000000140002DAA                 mov     rcx, cs:DeviceObject
.text:0000000140002DB1                 cmp     [rcx+48h], bp
.text:0000000140002DB5                 jz      short loc_140002DD4
.text:0000000140002DB7                 mov     rcx, [rcx+40h]
.text:0000000140002DBB                 mov     r9d, 12h
.text:0000000140002DC1                 mov     dword ptr [rsp+48h+var_20], ebx
.text:0000000140002DC5                 mov     r8d, r14d
.text:0000000140002DC8                 mov     dl, 5
.text:0000000140002DCA                 mov     [rsp+48h+var_28], r15
.text:0000000140002DCF                 call    sub_14000176C
.text:0000000140002DD4
.text:0000000140002DD4 loc_140002DD4:                          ; CODE XREF: sub_140002C50+95↑j
.text:0000000140002DD4                                         ; sub_140002C50+DF↑j ...
.text:0000000140002DD4                 mov     rbp, [rsp+48h+arg_8]
.text:0000000140002DD9                 mov     eax, ebx
.text:0000000140002DDB                 mov     rbx, [rsp+48h+arg_0]
.text:0000000140002DE0                 mov     rsi, [rsp+48h+arg_10]
.text:0000000140002DE5                 add     rsp, 30h
.text:0000000140002DE9                 pop     r15
.text:0000000140002DEB                 pop     r14
.text:0000000140002DED                 pop     rdi
.text:0000000140002DEE                 retn
.text:0000000140002DEE sub_140002C50   endp
.text:0000000140002DEE
.text:0000000140002DEE ; ---------------------------------------------------------------------------
.text:0000000140002DEF algn_140002DEF:                         ; DATA XREF: .pdata:000000014000E09C↓o
.text:0000000140002DEF                 align 10h
.text:0000000140002DF0
.text:0000000140002DF0 ; =============== S U B R O U T I N E =======================================
.text:0000000140002DF0
.text:0000000140002DF0
.text:0000000140002DF0 ; __int64 __fastcall sub_140002DF0(__int64)
.text:0000000140002DF0 sub_140002DF0   proc near               ; DATA XREF: sub_140001EE4+119↑o
.text:0000000140002DF0                                         ; .rdata:000000014000B14C↓o ...
.text:0000000140002DF0
.text:0000000140002DF0 Timeout         = qword ptr -28h
.text:0000000140002DF0 var_20          = qword ptr -20h
.text:0000000140002DF0 arg_0           = qword ptr  8
.text:0000000140002DF0 arg_8           = qword ptr  10h
.text:0000000140002DF0 arg_10          = qword ptr  18h
.text:0000000140002DF0
.text:0000000140002DF0                 mov     rax, rsp
.text:0000000140002DF3                 mov     [rax+8], rbx
.text:0000000140002DF7                 mov     [rax+10h], rbp
.text:0000000140002DFB                 mov     [rax+18h], rsi
.text:0000000140002DFF                 push    rdi
.text:0000000140002E00                 push    r12
.text:0000000140002E02                 push    r14
.text:0000000140002E04                 sub     rsp, 30h
.text:0000000140002E08                 xor     ebp, ebp
.text:0000000140002E0A                 mov     rsi, rcx
.text:0000000140002E0D                 mov     ebx, ebp
.text:0000000140002E0F                 lea     r14, off_14000D008
.text:0000000140002E16                 cmp     cs:off_14000D008, r14
.text:0000000140002E1D                 lea     r12, unk_14000B2C0
.text:0000000140002E24                 jz      short loc_140002E4A
.text:0000000140002E26                 mov     rcx, cs:DeviceObject
.text:0000000140002E2D                 cmp     [rcx+48h], bp
.text:0000000140002E31                 jz      short loc_140002E4A
.text:0000000140002E33                 mov     rcx, [rcx+40h]
.text:0000000140002E37                 lea     r9d, [rbp+13h]
.text:0000000140002E3B                 lea     r8d, [rbp+3]
.text:0000000140002E3F                 mov     [rax-28h], r12
.text:0000000140002E43                 mov     dl, 5
.text:0000000140002E45                 call    sub_1400016A8
.text:0000000140002E4A
.text:0000000140002E4A loc_140002E4A:                          ; CODE XREF: sub_140002DF0+34↑j
.text:0000000140002E4A                                         ; sub_140002DF0+41↑j
.text:0000000140002E4A                 mov     rax, cs:qword_14000D388
.text:0000000140002E51                 mov     rdx, rsi
.text:0000000140002E54                 mov     r8, cs:off_14000D028
.text:0000000140002E5B                 mov     rcx, cs:qword_14000D390
.text:0000000140002E62                 mov     rax, [rax+650h]
.text:0000000140002E69                 call    cs:__guard_dispatch_icall_fptr
.text:0000000140002E6F                 mov     rcx, cs:qword_14000D390
.text:0000000140002E76                 mov     rdx, rsi
.text:0000000140002E79                 mov     rdi, rax
.text:0000000140002E7C                 mov     rax, cs:qword_14000D388
.text:0000000140002E83                 mov     rax, [rax+2E0h]
.text:0000000140002E8A                 call    cs:__guard_dispatch_icall_fptr
.text:0000000140002E90                 mov     rcx, cs:qword_14000D390
.text:0000000140002E97                 mov     rdx, rax
.text:0000000140002E9A                 mov     rax, cs:qword_14000D388
.text:0000000140002EA1                 mov     rax, [rax+520h]
.text:0000000140002EA8                 call    cs:__guard_dispatch_icall_fptr
.text:0000000140002EAE                 lea     rcx, [rdi+0E0h] ; Event
.text:0000000140002EB5                 xor     r8d, r8d        ; Wait
.text:0000000140002EB8                 xor     edx, edx        ; Increment
.text:0000000140002EBA                 call    cs:KeSetEvent
.text:0000000140002EC0                 mov     rcx, [rdi+110h] ; Object
.text:0000000140002EC7                 test    rcx, rcx
.text:0000000140002ECA                 jz      short loc_140002F23
.text:0000000140002ECC                 xor     r9d, r9d        ; Alertable
.text:0000000140002ECF                 mov     [rsp+48h+Timeout], rbp ; Timeout
.text:0000000140002ED4                 xor     r8d, r8d        ; WaitMode
.text:0000000140002ED7                 xor     edx, edx        ; WaitReason
.text:0000000140002ED9                 call    cs:KeWaitForSingleObject
.text:0000000140002EDF                 mov     ebx, eax
.text:0000000140002EE1                 test    eax, eax
.text:0000000140002EE3                 jns     short loc_140002F16
.text:0000000140002EE5                 cmp     cs:off_14000D008, r14
.text:0000000140002EEC                 jz      short loc_140002F16
.text:0000000140002EEE                 lfence
.text:0000000140002EF1                 mov     rcx, cs:DeviceObject
.text:0000000140002EF8                 mov     r9d, 14h
.text:0000000140002EFE                 mov     dword ptr [rsp+48h+var_20], eax
.text:0000000140002F02                 mov     dl, 2
.text:0000000140002F04                 mov     [rsp+48h+Timeout], r12
.text:0000000140002F09                 mov     rcx, [rcx+40h]
.text:0000000140002F0D                 lea     r8d, [r9-11h]
.text:0000000140002F11                 call    sub_14000176C
.text:0000000140002F16
.text:0000000140002F16 loc_140002F16:                          ; CODE XREF: sub_140002DF0+F3↑j
.text:0000000140002F16                                         ; sub_140002DF0+FC↑j
.text:0000000140002F16                 mov     rcx, [rdi+110h] ; Object
.text:0000000140002F1D                 call    cs:ObfDereferenceObject
.text:0000000140002F23
.text:0000000140002F23 loc_140002F23:                          ; CODE XREF: sub_140002DF0+DA↑j
.text:0000000140002F23                 mov     rcx, [rdi+118h] ; Object
.text:0000000140002F2A                 test    rcx, rcx
.text:0000000140002F2D                 jz      short loc_140002F86
.text:0000000140002F2F                 xor     r9d, r9d        ; Alertable
.text:0000000140002F32                 mov     [rsp+48h+Timeout], rbp ; Timeout
.text:0000000140002F37                 xor     r8d, r8d        ; WaitMode
.text:0000000140002F3A                 xor     edx, edx        ; WaitReason
.text:0000000140002F3C                 call    cs:KeWaitForSingleObject
.text:0000000140002F42                 mov     ebx, eax
.text:0000000140002F44                 test    eax, eax
.text:0000000140002F46                 jns     short loc_140002F79
.text:0000000140002F48                 cmp     cs:off_14000D008, r14
.text:0000000140002F4F                 jz      short loc_140002F79
.text:0000000140002F51                 lfence
.text:0000000140002F54                 mov     rcx, cs:DeviceObject
.text:0000000140002F5B                 mov     r9d, 15h
.text:0000000140002F61                 mov     dword ptr [rsp+48h+var_20], eax
.text:0000000140002F65                 mov     dl, 2
.text:0000000140002F67                 mov     [rsp+48h+Timeout], r12
.text:0000000140002F6C                 mov     rcx, [rcx+40h]
.text:0000000140002F70                 lea     r8d, [r9-12h]
.text:0000000140002F74                 call    sub_14000176C
.text:0000000140002F79
.text:0000000140002F79 loc_140002F79:                          ; CODE XREF: sub_140002DF0+156↑j
.text:0000000140002F79                                         ; sub_140002DF0+15F↑j
.text:0000000140002F79                 mov     rcx, [rdi+118h] ; Object
.text:0000000140002F80                 call    cs:ObfDereferenceObject
.text:0000000140002F86
.text:0000000140002F86 loc_140002F86:                          ; CODE XREF: sub_140002DF0+13D↑j
.text:0000000140002F86                 mov     rcx, rsi
.text:0000000140002F89                 call    sub_140001B58
.text:0000000140002F8E                 cmp     cs:off_14000D008, r14
.text:0000000140002F95                 jz      short loc_140002FC2
.text:0000000140002F97                 mov     rcx, cs:DeviceObject
.text:0000000140002F9E                 cmp     [rcx+48h], bp
.text:0000000140002FA2                 jz      short loc_140002FC2
.text:0000000140002FA4                 mov     rcx, [rcx+40h]
.text:0000000140002FA8                 mov     r9d, 16h
.text:0000000140002FAE                 mov     dword ptr [rsp+48h+var_20], ebx
.text:0000000140002FB2                 mov     dl, 5
.text:0000000140002FB4                 mov     [rsp+48h+Timeout], r12
.text:0000000140002FB9                 lea     r8d, [r9-13h]
.text:0000000140002FBD                 call    sub_14000176C
.text:0000000140002FC2
.text:0000000140002FC2 loc_140002FC2:                          ; CODE XREF: sub_140002DF0+1A5↑j
.text:0000000140002FC2                                         ; sub_140002DF0+1B2↑j
.text:0000000140002FC2                 mov     rbp, [rsp+48h+arg_8]
.text:0000000140002FC7                 mov     eax, ebx
.text:0000000140002FC9                 mov     rbx, [rsp+48h+arg_0]
.text:0000000140002FCE                 mov     rsi, [rsp+48h+arg_10]
.text:0000000140002FD3                 add     rsp, 30h
.text:0000000140002FD7                 pop     r14
.text:0000000140002FD9                 pop     r12
.text:0000000140002FDB                 pop     rdi
.text:0000000140002FDC                 retn
.text:0000000140002FDC sub_140002DF0   endp
.text:0000000140002FDC
.text:0000000140002FDC ; ---------------------------------------------------------------------------
.text:0000000140002FDD algn_140002FDD:                         ; DATA XREF: .pdata:000000014000E0A8↓o
.text:0000000140002FDD                 align 20h
.text:0000000140002FE0
.text:0000000140002FE0 ; =============== S U B R O U T I N E =======================================
.text:0000000140002FE0
.text:0000000140002FE0
.text:0000000140002FE0 ; void **__fastcall sub_140002FE0(__int64)
.text:0000000140002FE0 sub_140002FE0   proc near               ; DATA XREF: sub_140001EE4+15B↑o
.text:0000000140002FE0                                         ; .rdata:000000014000B150↓o ...
.text:0000000140002FE0
.text:0000000140002FE0 var_48          = qword ptr -48h
.text:0000000140002FE0 var_40          = qword ptr -40h
.text:0000000140002FE0 var_38          = qword ptr -38h
.text:0000000140002FE0 var_28          = byte ptr -28h
.text:0000000140002FE0
.text:0000000140002FE0                 mov     rax, rsp
.text:0000000140002FE3                 mov     [rax+8], rbx
.text:0000000140002FE7                 mov     [rax+10h], rbp
.text:0000000140002FEB                 mov     [rax+18h], rsi
.text:0000000140002FEF                 push    rdi
.text:0000000140002FF0                 push    r12
.text:0000000140002FF2                 push    r13
.text:0000000140002FF4                 push    r14
.text:0000000140002FF6                 push    r15
.text:0000000140002FF8                 sub     rsp, 40h
.text:0000000140002FFC                 mov     rdi, rcx
.text:0000000140002FFF                 xor     r14d, r14d
.text:0000000140003002                 lea     r13, off_14000D008
.text:0000000140003009                 cmp     cs:off_14000D008, r13
.text:0000000140003010                 lea     r12, unk_14000B2C0
.text:0000000140003017                 lea     r15d, [r14+3]
.text:000000014000301B                 jz      short loc_140003041
.text:000000014000301D                 mov     rcx, cs:DeviceObject
.text:0000000140003024                 cmp     [rcx+48h], r14w
.text:0000000140003029                 jz      short loc_140003041
.text:000000014000302B                 mov     rcx, [rcx+40h]
.text:000000014000302F                 lea     r9d, [r14+1Eh]
.text:0000000140003033                 mov     r8d, r15d
.text:0000000140003036                 mov     [rax-48h], r12
.text:000000014000303A                 mov     dl, 5
.text:000000014000303C                 call    sub_1400016A8
.text:0000000140003041
.text:0000000140003041 loc_140003041:                          ; CODE XREF: sub_140002FE0+3B↑j
.text:0000000140003041                                         ; sub_140002FE0+49↑j
.text:0000000140003041                 mov     rax, cs:qword_14000D388
.text:0000000140003048                 mov     rdx, rdi
.text:000000014000304B                 mov     rcx, cs:qword_14000D390
.text:0000000140003052                 mov     rax, [rax+458h]
.text:0000000140003059                 call    cs:__guard_dispatch_icall_fptr
.text:000000014000305F                 mov     rcx, cs:qword_14000D388
.text:0000000140003066                 mov     rbx, rax
.text:0000000140003069                 mov     r8, cs:off_14000D028
.text:0000000140003070                 mov     rdx, rbx
.text:0000000140003073                 mov     rax, [rcx+650h]
.text:000000014000307A                 mov     rcx, cs:qword_14000D390
.text:0000000140003081                 call    cs:__guard_dispatch_icall_fptr
.text:0000000140003087                 mov     rcx, cs:qword_14000D388
.text:000000014000308E                 mov     rdx, rdi
.text:0000000140003091                 mov     rsi, rax
.text:0000000140003094                 mov     rax, [rcx+460h]
.text:000000014000309B                 mov     rcx, cs:qword_14000D390
.text:00000001400030A2                 call    cs:__guard_dispatch_icall_fptr
.text:00000001400030A8                 mov     rbp, rax
.text:00000001400030AB                 cmp     cs:off_14000D008, r13
.text:00000001400030B2                 jz      short loc_1400030E5
.text:00000001400030B4                 mov     rcx, cs:DeviceObject
.text:00000001400030BB                 cmp     [rcx+48h], r14w
.text:00000001400030C0                 jz      short loc_1400030E5
.text:00000001400030C2                 mov     rcx, [rcx+40h]
.text:00000001400030C6                 mov     r9d, 1Fh
.text:00000001400030CC                 mov     [rsp+68h+var_38], rax
.text:00000001400030D1                 mov     r8d, r15d
.text:00000001400030D4                 mov     [rsp+68h+var_40], rdi
.text:00000001400030D9                 mov     dl, 5
.text:00000001400030DB                 mov     [rsp+68h+var_48], r12
.text:00000001400030E0                 call    sub_1400062C4
.text:00000001400030E5
.text:00000001400030E5 loc_1400030E5:                          ; CODE XREF: sub_140002FE0+D2↑j
.text:00000001400030E5                                         ; sub_140002FE0+E0↑j
.text:00000001400030E5                 mov     rax, cs:qword_14000D388
.text:00000001400030EC                 mov     rdx, rbx
.text:00000001400030EF                 mov     rcx, cs:qword_14000D390
.text:00000001400030F6                 mov     rax, [rax+9B0h]
.text:00000001400030FD                 call    cs:__guard_dispatch_icall_fptr
.text:0000000140003103                 mov     rax, cs:qword_14000D388
.text:000000014000310A                 lea     rdi, [rsi+128h]
.text:0000000140003111                 mov     rcx, cs:qword_14000D390
.text:0000000140003118                 cmp     [rdi], r14b
.text:000000014000311B                 jnz     short loc_14000316A
.text:000000014000311D                 mov     rax, [rax+9B8h]
.text:0000000140003124                 mov     rdx, rbx
.text:0000000140003127                 call    cs:__guard_dispatch_icall_fptr
.text:000000014000312D                 cmp     cs:off_14000D008, r13
.text:0000000140003134                 jz      loc_140003272
.text:000000014000313A                 mov     rcx, cs:DeviceObject
.text:0000000140003141                 cmp     [rcx+48h], r14w
.text:0000000140003146                 jz      loc_14000323D
.text:000000014000314C                 mov     r9d, 20h ; ' '
.text:0000000140003152
.text:0000000140003152 loc_140003152:                          ; CODE XREF: sub_140002FE0+1CB↓j
.text:0000000140003152                                         ; sub_140002FE0+21E↓j
.text:0000000140003152                 mov     rcx, [rcx+40h]
.text:0000000140003156                 mov     r8d, r15d
.text:0000000140003159                 mov     dl, 5
.text:000000014000315B                 mov     [rsp+68h+var_48], r12
.text:0000000140003160                 call    sub_1400016A8
.text:0000000140003165                 jmp     loc_14000323D
.text:000000014000316A ; ---------------------------------------------------------------------------
.text:000000014000316A
.text:000000014000316A loc_14000316A:                          ; CODE XREF: sub_140002FE0+13B↑j
.text:000000014000316A                 mov     rdx, [rsi+130h]
.text:0000000140003171                 test    rdx, rdx
.text:0000000140003174                 jnz     short loc_1400031AD
.text:0000000140003176                 mov     rax, [rax+9B8h]
.text:000000014000317D                 mov     rdx, rbx
.text:0000000140003180                 call    cs:__guard_dispatch_icall_fptr
.text:0000000140003186                 cmp     cs:off_14000D008, r13
.text:000000014000318D                 jz      loc_140003272
.text:0000000140003193                 mov     rcx, cs:DeviceObject
.text:000000014000319A                 cmp     [rcx+48h], r14w
.text:000000014000319F                 jz      loc_14000323D
.text:00000001400031A5                 mov     r9d, 21h ; '!'
.text:00000001400031AB                 jmp     short loc_140003152
.text:00000001400031AD ; ---------------------------------------------------------------------------
.text:00000001400031AD
.text:00000001400031AD loc_1400031AD:                          ; CODE XREF: sub_140002FE0+194↑j
.text:00000001400031AD                 mov     rax, [rax+5A0h]
.text:00000001400031B4                 call    cs:__guard_dispatch_icall_fptr
.text:00000001400031BA                 mov     rcx, cs:qword_14000D390
.text:00000001400031C1                 mov     rdx, rbx
.text:00000001400031C4                 cmp     rax, rbp
.text:00000001400031C7                 mov     rax, cs:qword_14000D388
.text:00000001400031CE                 mov     rax, [rax+9B8h]
.text:00000001400031D5                 jz      short loc_140003203
.text:00000001400031D7                 call    cs:__guard_dispatch_icall_fptr
.text:00000001400031DD                 cmp     cs:off_14000D008, r13
.text:00000001400031E4                 jz      loc_140003272
.text:00000001400031EA                 mov     rcx, cs:DeviceObject
.text:00000001400031F1                 cmp     [rcx+48h], r14w
.text:00000001400031F6                 jz      short loc_14000323D
.text:00000001400031F8                 mov     r9d, 22h ; '"'
.text:00000001400031FE                 jmp     loc_140003152
.text:0000000140003203 ; ---------------------------------------------------------------------------
.text:0000000140003203
.text:0000000140003203 loc_140003203:                          ; CODE XREF: sub_140002FE0+1F5↑j
.text:0000000140003203                 call    cs:__guard_dispatch_icall_fptr
.text:0000000140003209                 cmp     cs:off_14000D008, r13
.text:0000000140003210                 jz      short loc_140003232
.text:0000000140003212                 mov     rcx, cs:DeviceObject
.text:0000000140003219                 mov     r9d, 23h ; '#'
.text:000000014000321F                 mov     r8d, r15d
.text:0000000140003222                 mov     [rsp+68h+var_48], r12
.text:0000000140003227                 mov     dl, 4
.text:0000000140003229                 mov     rcx, [rcx+40h]
.text:000000014000322D                 call    sub_1400016A8
.text:0000000140003232
.text:0000000140003232 loc_140003232:                          ; CODE XREF: sub_140002FE0+230↑j
.text:0000000140003232                 mov     rdx, rbx
.text:0000000140003235                 mov     rcx, rdi
.text:0000000140003238                 call    sub_14000190C
.text:000000014000323D
.text:000000014000323D loc_14000323D:                          ; CODE XREF: sub_140002FE0+166↑j
.text:000000014000323D                                         ; sub_140002FE0+185↑j ...
.text:000000014000323D                 cmp     cs:off_14000D008, r13
.text:0000000140003244                 jz      short loc_140003272
.text:0000000140003246                 mov     rcx, cs:DeviceObject
.text:000000014000324D                 cmp     [rcx+48h], r14w
.text:0000000140003252                 jz      short loc_140003272
.text:0000000140003254                 mov     rcx, [rcx+40h]
.text:0000000140003258                 mov     r9d, 24h ; '$'
.text:000000014000325E                 mov     dword ptr [rsp+68h+var_40], r14d
.text:0000000140003263                 mov     r8d, r15d
.text:0000000140003266                 mov     dl, 5
.text:0000000140003268                 mov     [rsp+68h+var_48], r12
.text:000000014000326D                 call    sub_14000176C
.text:0000000140003272
.text:0000000140003272 loc_140003272:                          ; CODE XREF: sub_140002FE0+154↑j
.text:0000000140003272                                         ; sub_140002FE0+1AD↑j ...
.text:0000000140003272                 lea     r11, [rsp+68h+var_28]
.text:0000000140003277                 mov     rbx, [r11+30h]
.text:000000014000327B                 mov     rbp, [r11+38h]
.text:000000014000327F                 mov     rsi, [r11+40h]
.text:0000000140003283                 mov     rsp, r11
.text:0000000140003286                 pop     r15
.text:0000000140003288                 pop     r14
.text:000000014000328A                 pop     r13
.text:000000014000328C                 pop     r12
.text:000000014000328E                 pop     rdi
.text:000000014000328F                 retn
.text:000000014000328F sub_140002FE0   endp
.text:000000014000328F
.text:0000000140003290
.text:0000000140003290 ; =============== S U B R O U T I N E =======================================
.text:0000000140003290
.text:0000000140003290 ; Attributes: bp-based frame fpd=57h
.text:0000000140003290
.text:0000000140003290 ; __int64 __fastcall sub_140003290(__int64, __int64)
.text:0000000140003290 sub_140003290   proc near               ; DATA XREF: sub_140001EE4+98↑o
.text:0000000140003290                                         ; .rdata:000000014000B154↓o ...
.text:0000000140003290
.text:0000000140003290 var_D0          = qword ptr -0D0h
.text:0000000140003290 var_C8          = qword ptr -0C8h
.text:0000000140003290 var_C0          = qword ptr -0C0h
.text:0000000140003290 var_B8          = qword ptr -0B8h
.text:0000000140003290 var_B0          = qword ptr -0B0h
.text:0000000140003290 var_A8          = xmmword ptr -0A8h
.text:0000000140003290 var_98          = xmmword ptr -98h
.text:0000000140003290 var_88          = xmmword ptr -88h
.text:0000000140003290 var_78          = qword ptr -78h
.text:0000000140003290 var_70          = qword ptr -70h
.text:0000000140003290 var_68          = qword ptr -68h
.text:0000000140003290 var_60          = xmmword ptr -60h
.text:0000000140003290 var_50          = xmmword ptr -50h
.text:0000000140003290 var_40          = qword ptr -40h
.text:0000000140003290 var_38          = qword ptr -38h
.text:0000000140003290 arg_10          = qword ptr  20h
.text:0000000140003290
.text:0000000140003290 ; __unwind { // __GSHandlerCheck
.text:0000000140003290                 mov     [rsp-8+arg_10], rbx
.text:0000000140003295                 push    rbp
.text:0000000140003296                 push    rsi
.text:0000000140003297                 push    rdi
.text:0000000140003298                 push    r12
.text:000000014000329A                 push    r13
.text:000000014000329C                 push    r14
.text:000000014000329E                 push    r15
.text:00000001400032A0                 lea     rbp, [rsp-27h]
.text:00000001400032A5                 sub     rsp, 0C0h
.text:00000001400032AC                 mov     rax, cs:__security_cookie
.text:00000001400032B3                 xor     rax, rsp
.text:00000001400032B6                 mov     [rbp+57h+var_38], rax
.text:00000001400032BA                 mov     rdi, rdx
.text:00000001400032BD                 mov     rsi, rcx
.text:00000001400032C0                 xor     r15d, r15d
.text:00000001400032C3                 lea     r14, off_14000D008
.text:00000001400032CA                 cmp     cs:off_14000D008, r14
.text:00000001400032D1                 lea     r13, unk_14000B2C0
.text:00000001400032D8                 lea     r12d, [r15+3]
.text:00000001400032DC                 jz      short loc_140003303
.text:00000001400032DE                 mov     rcx, cs:DeviceObject
.text:00000001400032E5                 cmp     [rcx+48h], r15w
.text:00000001400032EA                 jz      short loc_140003303
.text:00000001400032EC                 mov     rcx, [rcx+40h]
.text:00000001400032F0                 lea     r9d, [r15+25h]
.text:00000001400032F4                 mov     r8d, r12d
.text:00000001400032F7                 mov     [rsp+0F0h+var_D0], r13
.text:00000001400032FC                 mov     dl, 5
.text:00000001400032FE                 call    sub_1400016A8
.text:0000000140003303
.text:0000000140003303 loc_140003303:                          ; CODE XREF: sub_140003290+4C↑j
.text:0000000140003303                                         ; sub_140003290+5A↑j
.text:0000000140003303                 mov     rax, cs:qword_14000D388
.text:000000014000330A                 mov     rdx, rdi
.text:000000014000330D                 mov     rcx, cs:qword_14000D390
.text:0000000140003314                 mov     rax, [rax+7F0h]
.text:000000014000331B                 call    cs:__guard_dispatch_icall_fptr
.text:0000000140003321                 mov     ebx, eax
.text:0000000140003323                 test    eax, eax
.text:0000000140003325                 jns     short loc_140003372
.text:0000000140003327                 cmp     cs:off_14000D008, r14
.text:000000014000332E                 jz      loc_1400037F1
.text:0000000140003334                 mov     rcx, cs:DeviceObject
.text:000000014000333B                 cmp     [rcx+48h], r15w
.text:0000000140003340                 jz      loc_1400037F1
.text:0000000140003346                 mov     r9d, 26h ; '&'
.text:000000014000334C                 mov     dl, 5
.text:000000014000334E
.text:000000014000334E loc_14000334E:                          ; CODE XREF: sub_140003290+261↓j
.text:000000014000334E                 lfence
.text:0000000140003351                 mov     rcx, cs:DeviceObject
.text:0000000140003358                 mov     r8d, r12d
.text:000000014000335B                 mov     dword ptr [rsp+0F0h+var_C8], eax
.text:000000014000335F                 mov     [rsp+0F0h+var_D0], r13
.text:0000000140003364                 mov     rcx, [rcx+40h]
.text:0000000140003368                 call    sub_14000176C
.text:000000014000336D                 jmp     loc_1400037F1
.text:0000000140003372 ; ---------------------------------------------------------------------------
.text:0000000140003372
.text:0000000140003372 loc_140003372:                          ; CODE XREF: sub_140003290+95↑j
.text:0000000140003372                 lfence
.text:0000000140003375                 mov     rax, cs:qword_14000D388
.text:000000014000337C                 mov     rdx, rdi
.text:000000014000337F                 mov     rcx, cs:qword_14000D390
.text:0000000140003386                 mov     rax, [rax+8C0h]
.text:000000014000338D                 call    cs:__guard_dispatch_icall_fptr
.text:0000000140003393                 cmp     al, 1
.text:0000000140003395                 jz      loc_14000344D
.text:000000014000339B                 lfence
.text:000000014000339E                 cmp     cs:off_14000D008, r14
.text:00000001400033A5                 jz      short loc_1400033CE
.text:00000001400033A7                 mov     rcx, cs:DeviceObject
.text:00000001400033AE                 cmp     [rcx+48h], r15w
.text:00000001400033B3                 jz      short loc_1400033CE
.text:00000001400033B5                 mov     rcx, [rcx+40h]
.text:00000001400033B9                 mov     r9d, 27h ; '''
.text:00000001400033BF                 mov     r8d, r12d
.text:00000001400033C2                 mov     [rsp+0F0h+var_D0], r13
.text:00000001400033C7                 mov     dl, 5
.text:00000001400033C9                 call    sub_1400016A8
.text:00000001400033CE
.text:00000001400033CE loc_1400033CE:                          ; CODE XREF: sub_140003290+115↑j
.text:00000001400033CE                                         ; sub_140003290+123↑j
.text:00000001400033CE                 mov     rax, cs:qword_14000D388
.text:00000001400033D5                 mov     r8, rdi
.text:00000001400033D8                 mov     rcx, cs:qword_14000D390
.text:00000001400033DF                 mov     rdx, rsi
.text:00000001400033E2                 mov     rax, [rax+2D8h]
.text:00000001400033E9                 call    cs:__guard_dispatch_icall_fptr
.text:00000001400033EF                 mov     ebx, eax
.text:00000001400033F1                 test    eax, eax
.text:00000001400033F3                 jns     loc_140003850
.text:00000001400033F9                 cmp     cs:off_14000D008, r14
.text:0000000140003400                 jz      short loc_140003429
.text:0000000140003402                 lfence
.text:0000000140003405                 mov     rcx, cs:DeviceObject
.text:000000014000340C                 mov     r9d, 28h ; '('
.text:0000000140003412                 mov     dword ptr [rsp+0F0h+var_C8], eax
.text:0000000140003416                 mov     r8d, r12d
.text:0000000140003419                 mov     dl, 2
.text:000000014000341B                 mov     [rsp+0F0h+var_D0], r13
.text:0000000140003420                 mov     rcx, [rcx+40h]
.text:0000000140003424                 call    sub_14000176C
.text:0000000140003429
.text:0000000140003429 loc_140003429:                          ; CODE XREF: sub_140003290+170↑j
.text:0000000140003429                 cmp     ebx, 0C0200204h
.text:000000014000342F                 jnz     loc_1400037F1
.text:0000000140003435                 cmp     cs:off_14000D008, r14
.text:000000014000343C                 jz      loc_1400037EC
.text:0000000140003442                 mov     r9d, 29h ; ')'
.text:0000000140003448                 jmp     loc_1400037D2
.text:000000014000344D ; ---------------------------------------------------------------------------
.text:000000014000344D
.text:000000014000344D loc_14000344D:                          ; CODE XREF: sub_140003290+105↑j
.text:000000014000344D                 lfence
.text:0000000140003450                 mov     rcx, cs:qword_14000D390
.text:0000000140003457                 lea     r8, [rbp+57h+var_60]
.text:000000014000345B                 xor     eax, eax
.text:000000014000345D                 xorps   xmm0, xmm0
.text:0000000140003460                 mov     [rbp+57h+var_40], rax
.text:0000000140003464                 mov     rdx, rdi
.text:0000000140003467                 movups  [rbp+57h+var_60], xmm0
.text:000000014000346B                 mov     eax, 28h ; '('
.text:0000000140003470                 mov     word ptr [rbp+57h+var_60], ax
.text:0000000140003474                 mov     rax, cs:qword_14000D388
.text:000000014000347B                 movups  [rbp+57h+var_50], xmm0
.text:000000014000347F                 mov     rax, [rax+850h]
.text:0000000140003486                 call    cs:__guard_dispatch_icall_fptr
.text:000000014000348C                 cmp     dword ptr [rbp+57h+var_60+4], 0Eh
.text:0000000140003490                 jnz     loc_14000372D
.text:0000000140003496                 mov     eax, dword ptr [rbp+57h+var_50+8]
.text:0000000140003499                 and     eax, r12d
.text:000000014000349C                 cmp     al, r12b
.text:000000014000349F                 jnz     loc_14000372D
.text:00000001400034A5                 lfence
.text:00000001400034A8                 mov     rax, cs:qword_14000D388
.text:00000001400034AF                 lea     rcx, [rbp+57h+var_70]
.text:00000001400034B3                 mov     [rsp+0F0h+var_D0], rcx
.text:00000001400034B8                 lea     r9, [rbp+57h+var_B8]
.text:00000001400034BC                 mov     rcx, cs:qword_14000D390
.text:00000001400034C3                 xor     r8d, r8d
.text:00000001400034C6                 mov     rdx, rdi
.text:00000001400034C9                 mov     rax, [rax+888h]
.text:00000001400034D0                 call    cs:__guard_dispatch_icall_fptr
.text:00000001400034D6                 mov     ebx, eax
.text:00000001400034D8                 test    eax, eax
.text:00000001400034DA                 jns     short loc_1400034F6
.text:00000001400034DC                 cmp     cs:off_14000D008, r14
.text:00000001400034E3                 jz      loc_1400037F1
.text:00000001400034E9                 mov     r9d, 2Dh ; '-'
.text:00000001400034EF
.text:00000001400034EF loc_1400034EF:                          ; CODE XREF: sub_140003290+2B0↓j
.text:00000001400034EF                                         ; sub_140003290+320↓j ...
.text:00000001400034EF                 mov     dl, 2
.text:00000001400034F1                 jmp     loc_14000334E
.text:00000001400034F6 ; ---------------------------------------------------------------------------
.text:00000001400034F6
.text:00000001400034F6 loc_1400034F6:                          ; CODE XREF: sub_140003290+24A↑j
.text:00000001400034F6                 lfence
.text:00000001400034F9                 mov     rax, cs:qword_14000D388
.text:0000000140003500                 lea     rcx, [rbp+57h+var_68]
.text:0000000140003504                 mov     [rsp+0F0h+var_D0], rcx
.text:0000000140003509                 lea     r9, [rbp+57h+var_B0]
.text:000000014000350D                 mov     rcx, cs:qword_14000D390
.text:0000000140003514                 xor     r8d, r8d
.text:0000000140003517                 mov     rdx, rdi
.text:000000014000351A                 mov     rax, [rax+890h]
.text:0000000140003521                 call    cs:__guard_dispatch_icall_fptr
.text:0000000140003527                 mov     ebx, eax
.text:0000000140003529                 test    eax, eax
.text:000000014000352B                 jns     short loc_140003542
.text:000000014000352D                 cmp     cs:off_14000D008, r14
.text:0000000140003534                 jz      loc_1400037F1
.text:000000014000353A                 mov     r9d, 2Eh ; '.'
.text:0000000140003540                 jmp     short loc_1400034EF
.text:0000000140003542 ; ---------------------------------------------------------------------------
.text:0000000140003542
.text:0000000140003542 loc_140003542:                          ; CODE XREF: sub_140003290+29B↑j
.text:0000000140003542                 lfence
.text:0000000140003545                 mov     rcx, cs:qword_14000D390
.text:000000014000354C                 lea     r9, [rbp+57h+var_C0]
.text:0000000140003550                 xorps   xmm0, xmm0
.text:0000000140003553                 lea     r8, [rbp+57h+var_A8]
.text:0000000140003557                 movups  [rbp+57h+var_98], xmm0
.text:000000014000355B                 mov     eax, 1
.text:0000000140003560                 mov     rdx, rdi
.text:0000000140003563                 mov     dword ptr [rbp+57h+var_98+8], eax
.text:0000000140003566                 mov     dword ptr [rbp+57h+var_98+0Ch], eax
.text:0000000140003569                 mov     rax, cs:off_14000D050
.text:0000000140003570                 mov     [rbp+57h+var_78], rax
.text:0000000140003574                 mov     rax, cs:qword_14000D388
.text:000000014000357B                 movups  [rbp+57h+var_A8], xmm0
.text:000000014000357F                 mov     dword ptr [rbp+57h+var_A8], 38h ; '8'
.text:0000000140003586                 movups  [rbp+57h+var_88], xmm0
.text:000000014000358A                 mov     rax, [rax+658h]
.text:0000000140003591                 call    cs:__guard_dispatch_icall_fptr
.text:0000000140003597                 mov     ebx, eax
.text:0000000140003599                 test    eax, eax
.text:000000014000359B                 jns     short loc_1400035B5
.text:000000014000359D                 cmp     cs:off_14000D008, r14
.text:00000001400035A4                 jz      loc_1400037F1
.text:00000001400035AA                 mov     r9d, 2Fh ; '/'
.text:00000001400035B0                 jmp     loc_1400034EF
.text:00000001400035B5 ; ---------------------------------------------------------------------------
.text:00000001400035B5
.text:00000001400035B5 loc_1400035B5:                          ; CODE XREF: sub_140003290+30B↑j
.text:00000001400035B5                 mov     rax, [rbp+57h+var_C0]
.text:00000001400035B9                 xorps   xmm0, xmm0
.text:00000001400035BC                 movups  xmmword ptr [rax], xmm0
.text:00000001400035BF                 cmp     [rbp+57h+var_70], r15
.text:00000001400035C3                 jz      short loc_14000361B
.text:00000001400035C5                 cmp     [rbp+57h+var_B8], r15
.text:00000001400035C9                 jz      short loc_14000361B
.text:00000001400035CB                 lfence
.text:00000001400035CE                 mov     rcx, [rbp+57h+var_C0]
.text:00000001400035D2                 mov     rdx, rdi
.text:00000001400035D5                 mov     rax, cs:qword_14000D388
.text:00000001400035DC                 mov     r9, [rbp+57h+var_70]
.text:00000001400035E0                 mov     r8, [rbp+57h+var_B8]
.text:00000001400035E4                 mov     [rsp+0F0h+var_D0], rcx
.text:00000001400035E9                 mov     rax, [rax+8B0h]
.text:00000001400035F0                 mov     rcx, cs:qword_14000D390
.text:00000001400035F7                 call    cs:__guard_dispatch_icall_fptr
.text:00000001400035FD                 mov     ebx, eax
.text:00000001400035FF                 test    eax, eax
.text:0000000140003601                 jns     short loc_14000361B
.text:0000000140003603                 cmp     cs:off_14000D008, r14
.text:000000014000360A                 jz      loc_1400037F1
.text:0000000140003610                 mov     r9d, 30h ; '0'
.text:0000000140003616                 jmp     loc_1400034EF
.text:000000014000361B ; ---------------------------------------------------------------------------
.text:000000014000361B
.text:000000014000361B loc_14000361B:                          ; CODE XREF: sub_140003290+333↑j
.text:000000014000361B                                         ; sub_140003290+339↑j ...
.text:000000014000361B                 cmp     [rbp+57h+var_68], r15
.text:000000014000361F                 jz      short loc_14000367B
.text:0000000140003621                 cmp     [rbp+57h+var_B0], r15
.text:0000000140003625                 jz      short loc_14000367B
.text:0000000140003627                 lfence
.text:000000014000362A                 mov     rcx, [rbp+57h+var_C0]
.text:000000014000362E                 mov     rdx, rdi
.text:0000000140003631                 mov     rax, cs:qword_14000D388
.text:0000000140003638                 add     rcx, 8
.text:000000014000363C                 mov     r9, [rbp+57h+var_68]
.text:0000000140003640                 mov     r8, [rbp+57h+var_B0]
.text:0000000140003644                 mov     [rsp+0F0h+var_D0], rcx
.text:0000000140003649                 mov     rax, [rax+8B8h]
.text:0000000140003650                 mov     rcx, cs:qword_14000D390
.text:0000000140003657                 call    cs:__guard_dispatch_icall_fptr
.text:000000014000365D                 mov     ebx, eax
.text:000000014000365F                 test    eax, eax
.text:0000000140003661                 jns     short loc_14000367B
.text:0000000140003663                 cmp     cs:off_14000D008, r14
.text:000000014000366A                 jz      loc_1400037F1
.text:0000000140003670                 mov     r9d, 31h ; '1'
.text:0000000140003676                 jmp     loc_1400034EF
.text:000000014000367B ; ---------------------------------------------------------------------------
.text:000000014000367B
.text:000000014000367B loc_14000367B:                          ; CODE XREF: sub_140003290+38F↑j
.text:000000014000367B                                         ; sub_140003290+395↑j ...
.text:000000014000367B                 lfence
.text:000000014000367E                 cmp     cs:off_14000D008, r14
.text:0000000140003685                 jz      short loc_1400036AE
.text:0000000140003687                 mov     rcx, cs:DeviceObject
.text:000000014000368E                 cmp     [rcx+48h], r15w
.text:0000000140003693                 jz      short loc_1400036AE
.text:0000000140003695                 mov     rcx, [rcx+40h]
.text:0000000140003699                 mov     r9d, 32h ; '2'
.text:000000014000369F                 mov     r8d, r12d
.text:00000001400036A2                 mov     [rsp+0F0h+var_D0], r13
.text:00000001400036A7                 mov     dl, 5
.text:00000001400036A9                 call    sub_1400016A8
.text:00000001400036AE
.text:00000001400036AE loc_1400036AE:                          ; CODE XREF: sub_140003290+3F5↑j
.text:00000001400036AE                                         ; sub_140003290+403↑j
.text:00000001400036AE                 mov     rax, cs:qword_14000D388
.text:00000001400036B5                 mov     r8, rdi
.text:00000001400036B8                 mov     rcx, cs:qword_14000D390
.text:00000001400036BF                 mov     rdx, rsi
.text:00000001400036C2                 mov     rax, [rax+2D8h]
.text:00000001400036C9                 call    cs:__guard_dispatch_icall_fptr
.text:00000001400036CF                 mov     ebx, eax
.text:00000001400036D1                 test    eax, eax
.text:00000001400036D3                 jns     loc_140003850
.text:00000001400036D9                 cmp     cs:off_14000D008, r14
.text:00000001400036E0                 jz      short loc_140003709
.text:00000001400036E2                 lfence
.text:00000001400036E5                 mov     rcx, cs:DeviceObject
.text:00000001400036EC                 mov     r9d, 33h ; '3'
.text:00000001400036F2                 mov     dword ptr [rsp+0F0h+var_C8], eax
.text:00000001400036F6                 mov     r8d, r12d
.text:00000001400036F9                 mov     dl, 2
.text:00000001400036FB                 mov     [rsp+0F0h+var_D0], r13
.text:0000000140003700                 mov     rcx, [rcx+40h]
.text:0000000140003704                 call    sub_14000176C
.text:0000000140003709
.text:0000000140003709 loc_140003709:                          ; CODE XREF: sub_140003290+450↑j
.text:0000000140003709                 cmp     ebx, 0C0200204h
.text:000000014000370F                 jnz     loc_1400037F1
.text:0000000140003715                 cmp     cs:off_14000D008, r14
.text:000000014000371C                 jz      loc_1400037EC
.text:0000000140003722                 mov     r9d, 34h ; '4'
.text:0000000140003728                 jmp     loc_1400037D2
.text:000000014000372D ; ---------------------------------------------------------------------------
.text:000000014000372D
.text:000000014000372D loc_14000372D:                          ; CODE XREF: sub_140003290+200↑j
.text:000000014000372D                                         ; sub_140003290+20F↑j
.text:000000014000372D                 lfence
.text:0000000140003730                 cmp     cs:off_14000D008, r14
.text:0000000140003737                 jz      short loc_140003760
.text:0000000140003739                 mov     rcx, cs:DeviceObject
.text:0000000140003740                 cmp     [rcx+48h], r15w
.text:0000000140003745                 jz      short loc_140003760
.text:0000000140003747                 mov     rcx, [rcx+40h]
.text:000000014000374B                 mov     r9d, 2Ah ; '*'
.text:0000000140003751                 mov     r8d, r12d
.text:0000000140003754                 mov     [rsp+0F0h+var_D0], r13
.text:0000000140003759                 mov     dl, 5
.text:000000014000375B                 call    sub_1400016A8
.text:0000000140003760
.text:0000000140003760 loc_140003760:                          ; CODE XREF: sub_140003290+4A7↑j
.text:0000000140003760                                         ; sub_140003290+4B5↑j
.text:0000000140003760                 mov     rax, cs:qword_14000D388
.text:0000000140003767                 mov     r8, rdi
.text:000000014000376A                 mov     rcx, cs:qword_14000D390
.text:0000000140003771                 mov     rdx, rsi
.text:0000000140003774                 mov     rax, [rax+2D8h]
.text:000000014000377B                 call    cs:__guard_dispatch_icall_fptr
.text:0000000140003781                 mov     ebx, eax
.text:0000000140003783                 test    eax, eax
.text:0000000140003785                 jns     loc_140003850
.text:000000014000378B                 cmp     cs:off_14000D008, r14
.text:0000000140003792                 jz      short loc_1400037BB
.text:0000000140003794                 lfence
.text:0000000140003797                 mov     rcx, cs:DeviceObject
.text:000000014000379E                 mov     r9d, 2Bh ; '+'
.text:00000001400037A4                 mov     dword ptr [rsp+0F0h+var_C8], eax
.text:00000001400037A8                 mov     r8d, r12d
.text:00000001400037AB                 mov     dl, 2
.text:00000001400037AD                 mov     [rsp+0F0h+var_D0], r13
.text:00000001400037B2                 mov     rcx, [rcx+40h]
.text:00000001400037B6                 call    sub_14000176C
.text:00000001400037BB
.text:00000001400037BB loc_1400037BB:                          ; CODE XREF: sub_140003290+502↑j
.text:00000001400037BB                 cmp     ebx, 0C0200204h
.text:00000001400037C1                 jnz     short loc_1400037F1
.text:00000001400037C3                 cmp     cs:off_14000D008, r14
.text:00000001400037CA                 jz      short loc_1400037EC
.text:00000001400037CC                 mov     r9d, 2Ch ; ','
.text:00000001400037D2
.text:00000001400037D2 loc_1400037D2:                          ; CODE XREF: sub_140003290+1B8↑j
.text:00000001400037D2                                         ; sub_140003290+498↑j
.text:00000001400037D2                 mov     rcx, cs:DeviceObject
.text:00000001400037D9                 mov     r8d, r12d
.text:00000001400037DC                 mov     dl, 4
.text:00000001400037DE                 mov     [rsp+0F0h+var_D0], r13
.text:00000001400037E3                 mov     rcx, [rcx+40h]
.text:00000001400037E7                 call    sub_1400016A8
.text:00000001400037EC
.text:00000001400037EC loc_1400037EC:                          ; CODE XREF: sub_140003290+1AC↑j
.text:00000001400037EC                                         ; sub_140003290+48C↑j ...
.text:00000001400037EC                 mov     ebx, 0C0000120h
.text:00000001400037F1
.text:00000001400037F1 loc_1400037F1:                          ; CODE XREF: sub_140003290+9E↑j
.text:00000001400037F1                                         ; sub_140003290+B0↑j ...
.text:00000001400037F1                 test    ebx, ebx
.text:00000001400037F3                 jns     short loc_140003850
.text:00000001400037F5                 lfence
.text:00000001400037F8                 cmp     cs:off_14000D008, r14
.text:00000001400037FF                 jz      short loc_14000382C
.text:0000000140003801                 mov     rcx, cs:DeviceObject
.text:0000000140003808                 cmp     [rcx+48h], r15w
.text:000000014000380D                 jz      short loc_14000382C
.text:000000014000380F                 mov     rcx, [rcx+40h]
.text:0000000140003813                 mov     r9d, 35h ; '5'
.text:0000000140003819                 mov     dword ptr [rsp+0F0h+var_C8], ebx
.text:000000014000381D                 mov     r8d, r12d
.text:0000000140003820                 mov     dl, 5
.text:0000000140003822                 mov     [rsp+0F0h+var_D0], r13
.text:0000000140003827                 call    sub_14000176C
.text:000000014000382C
.text:000000014000382C loc_14000382C:                          ; CODE XREF: sub_140003290+56F↑j
.text:000000014000382C                                         ; sub_140003290+57D↑j
.text:000000014000382C                 mov     rax, cs:qword_14000D388
.text:0000000140003833                 xor     r9d, r9d
.text:0000000140003836                 mov     rcx, cs:qword_14000D390
.text:000000014000383D                 mov     r8d, ebx
.text:0000000140003840                 mov     rdx, rdi
.text:0000000140003843                 mov     rax, [rax+848h]
.text:000000014000384A                 call    cs:__guard_dispatch_icall_fptr
.text:0000000140003850
.text:0000000140003850 loc_140003850:                          ; CODE XREF: sub_140003290+163↑j
.text:0000000140003850                                         ; sub_140003290+443↑j ...
.text:0000000140003850                 cmp     cs:off_14000D008, r14
.text:0000000140003857                 jz      short loc_140003884
.text:0000000140003859                 mov     rcx, cs:DeviceObject
.text:0000000140003860                 cmp     [rcx+48h], r15w
.text:0000000140003865                 jz      short loc_140003884
.text:0000000140003867                 mov     rcx, [rcx+40h]
.text:000000014000386B                 mov     r9d, 36h ; '6'
.text:0000000140003871                 mov     dword ptr [rsp+0F0h+var_C8], ebx
.text:0000000140003875                 mov     r8d, r12d
.text:0000000140003878                 mov     dl, 5
.text:000000014000387A                 mov     [rsp+0F0h+var_D0], r13
.text:000000014000387F                 call    sub_14000176C
.text:0000000140003884
.text:0000000140003884 loc_140003884:                          ; CODE XREF: sub_140003290+5C7↑j
.text:0000000140003884                                         ; sub_140003290+5D5↑j
.text:0000000140003884                 mov     rcx, [rbp+57h+var_38]
.text:0000000140003888                 xor     rcx, rsp        ; StackCookie
.text:000000014000388B                 call    __security_check_cookie
.text:0000000140003890                 mov     rbx, [rsp+0F0h+arg_10]
.text:0000000140003898                 add     rsp, 0C0h
.text:000000014000389F                 pop     r15
.text:00000001400038A1                 pop     r14
.text:00000001400038A3                 pop     r13
.text:00000001400038A5                 pop     r12
.text:00000001400038A7                 pop     rdi
.text:00000001400038A8                 pop     rsi
.text:00000001400038A9                 pop     rbp
.text:00000001400038AA                 retn
.text:00000001400038AA ; } // starts at 140003290
.text:00000001400038AA sub_140003290   endp
.text:00000001400038AA
.text:00000001400038AA ; ---------------------------------------------------------------------------
.text:00000001400038AB algn_1400038AB:                         ; DATA XREF: .pdata:000000014000E0C0↓o
.text:00000001400038AB                 align 4
.text:00000001400038AC
.text:00000001400038AC ; =============== S U B R O U T I N E =======================================
.text:00000001400038AC
.text:00000001400038AC
.text:00000001400038AC ; __int64 __fastcall sub_1400038AC(unsigned __int64, unsigned int *)
.text:00000001400038AC sub_1400038AC   proc near               ; CODE XREF: CallbackRoutine+24C↓p
.text:00000001400038AC                                         ; sub_140004E78+8E↓p
.text:00000001400038AC                                         ; DATA XREF: ...
.text:00000001400038AC
.text:00000001400038AC var_38          = qword ptr -38h
.text:00000001400038AC var_30          = qword ptr -30h
.text:00000001400038AC arg_0           = qword ptr  8
.text:00000001400038AC arg_8           = qword ptr  10h
.text:00000001400038AC arg_10          = qword ptr  18h
.text:00000001400038AC arg_18          = qword ptr  20h
.text:00000001400038AC
.text:00000001400038AC                 mov     rax, rsp
.text:00000001400038AF                 mov     [rax+8], rbx
.text:00000001400038B3                 mov     [rax+10h], rbp
.text:00000001400038B7                 mov     [rax+20h], rsi
.text:00000001400038BB                 push    rdi
.text:00000001400038BC                 push    r12
.text:00000001400038BE                 push    r13
.text:00000001400038C0                 push    r14
.text:00000001400038C2                 push    r15
.text:00000001400038C4                 sub     rsp, 30h
.text:00000001400038C8                 xor     r14d, r14d
.text:00000001400038CB                 mov     rdi, rdx
.text:00000001400038CE                 mov     [rax+18h], r14
.text:00000001400038D2                 mov     rbp, rcx
.text:00000001400038D5                 lea     r15, off_14000D008
.text:00000001400038DC                 cmp     cs:off_14000D008, r15
.text:00000001400038E3                 lea     r13, unk_14000B2C0
.text:00000001400038EA                 lea     r12d, [r14+3]
.text:00000001400038EE                 jz      short loc_140003916
.text:00000001400038F0                 mov     rcx, cs:DeviceObject
.text:00000001400038F7                 cmp     [rcx+48h], r14w
.text:00000001400038FC                 jz      short loc_140003916
.text:00000001400038FE                 mov     rcx, [rcx+40h]
.text:0000000140003902                 mov     r9d, 83h
.text:0000000140003908                 mov     r8d, r12d
.text:000000014000390B                 mov     [rax-38h], r13
.text:000000014000390F                 mov     dl, 5
.text:0000000140003911                 call    sub_1400016A8
.text:0000000140003916
.text:0000000140003916 loc_140003916:                          ; CODE XREF: sub_1400038AC+42↑j
.text:0000000140003916                                         ; sub_1400038AC+50↑j
.text:0000000140003916                 xor     edx, edx
.text:0000000140003918                 mov     rcx, rdi
.text:000000014000391B                 lea     r8d, [rdx+60h]
.text:000000014000391F                 call    sub_14000A4C0
.text:0000000140003924                 mov     esi, 0Ch
.text:0000000140003929                 lea     r9, [rsp+58h+arg_10]
.text:000000014000392E                 mov     r8d, esi
.text:0000000140003931                 mov     edx, 0B01A8h
.text:0000000140003936                 mov     rcx, rbp
.text:0000000140003939                 call    sub_140003B4C
.text:000000014000393E                 mov     ebx, eax
.text:0000000140003940                 test    eax, eax
.text:0000000140003942                 jns     short loc_14000397B
.text:0000000140003944                 cmp     cs:off_14000D008, r15
.text:000000014000394B                 jz      loc_140003AC5
.text:0000000140003951                 lea     r9d, [rsi+78h]
.text:0000000140003955
.text:0000000140003955 loc_140003955:                          ; CODE XREF: sub_1400038AC+197↓j
.text:0000000140003955                                         ; sub_1400038AC+1EE↓j
.text:0000000140003955                 lfence
.text:0000000140003958                 mov     rcx, cs:DeviceObject
.text:000000014000395F                 mov     r8d, r12d
.text:0000000140003962                 mov     dword ptr [rsp+58h+var_30], eax
.text:0000000140003966                 mov     dl, 2
.text:0000000140003968                 mov     [rsp+58h+var_38], r13
.text:000000014000396D                 mov     rcx, [rcx+40h]
.text:0000000140003971                 call    sub_14000176C
.text:0000000140003976                 jmp     loc_140003AC5
.text:000000014000397B ; ---------------------------------------------------------------------------
.text:000000014000397B
.text:000000014000397B loc_14000397B:                          ; CODE XREF: sub_1400038AC+96↑j
.text:000000014000397B                 mov     rax, cs:qword_14000D388
.text:0000000140003982                 mov     r9, rdi
.text:0000000140003985                 mov     rcx, cs:qword_14000D390
.text:000000014000398C                 xor     r8d, r8d
.text:000000014000398F                 mov     [rsp+58h+var_38], rsi
.text:0000000140003994                 mov     rsi, [rsp+58h+arg_10]
.text:0000000140003999                 mov     rax, [rax+620h]
.text:00000001400039A0                 mov     rdx, rsi
.text:00000001400039A3                 call    cs:__guard_dispatch_icall_fptr
.text:00000001400039A9                 mov     ebx, eax
.text:00000001400039AB                 test    eax, eax
.text:00000001400039AD                 jns     short loc_1400039ED
.text:00000001400039AF                 cmp     cs:off_14000D008, r15
.text:00000001400039B6                 jz      loc_140003AA2
.text:00000001400039BC                 lfence
.text:00000001400039BF                 mov     rcx, cs:DeviceObject
.text:00000001400039C6                 mov     r9d, 85h
.text:00000001400039CC                 mov     dword ptr [rsp+58h+var_30], eax
.text:00000001400039D0                 mov     r8d, r12d
.text:00000001400039D3                 mov     dl, 2
.text:00000001400039D5                 mov     [rsp+58h+var_38], r13
.text:00000001400039DA                 mov     rcx, [rcx+40h]
.text:00000001400039DE                 call    sub_14000176C
.text:00000001400039E3                 mov     rsi, [rsp+58h+arg_10]
.text:00000001400039E8                 jmp     loc_140003AA2
.text:00000001400039ED ; ---------------------------------------------------------------------------
.text:00000001400039ED
.text:00000001400039ED loc_1400039ED:                          ; CODE XREF: sub_1400038AC+101↑j
.text:00000001400039ED                 lfence
.text:00000001400039F0                 mov     rax, cs:qword_14000D388
.text:00000001400039F7                 mov     rdx, [rsp+58h+arg_10]
.text:00000001400039FC                 mov     rcx, cs:qword_14000D390
.text:0000000140003A03                 mov     rax, [rax+680h]
.text:0000000140003A0A                 call    cs:__guard_dispatch_icall_fptr
.text:0000000140003A10                 mov     r8d, [rdi]
.text:0000000140003A13                 lea     r9, [rsp+58h+arg_10]
.text:0000000140003A18                 mov     edx, 0B0193h
.text:0000000140003A1D                 mov     [rsp+58h+arg_10], r14
.text:0000000140003A22                 mov     rcx, rbp
.text:0000000140003A25                 call    sub_140003B4C
.text:0000000140003A2A                 mov     ebx, eax
.text:0000000140003A2C                 test    eax, eax
.text:0000000140003A2E                 jns     short loc_140003A48
.text:0000000140003A30                 cmp     cs:off_14000D008, r15
.text:0000000140003A37                 jz      loc_140003AC5
.text:0000000140003A3D                 mov     r9d, 86h
.text:0000000140003A43                 jmp     loc_140003955
.text:0000000140003A48 ; ---------------------------------------------------------------------------
.text:0000000140003A48
.text:0000000140003A48 loc_140003A48:                          ; CODE XREF: sub_1400038AC+182↑j
.text:0000000140003A48                 lfence
.text:0000000140003A4B                 mov     rdx, [rsp+58h+arg_10]
.text:0000000140003A50                 xor     r8d, r8d
.text:0000000140003A53                 mov     [rdi+10h], rdx
.text:0000000140003A57                 mov     rax, cs:qword_14000D388
.text:0000000140003A5E                 mov     rcx, cs:qword_14000D390
.text:0000000140003A65                 mov     rax, [rax+610h]
.text:0000000140003A6C                 call    cs:__guard_dispatch_icall_fptr
.text:0000000140003A72                 lea     rdx, [rdi+20h]  ; Capabilities
.text:0000000140003A76                 mov     [rdi+18h], rax
.text:0000000140003A7A                 mov     rcx, rax        ; PreparsedData
.text:0000000140003A7D                 mov     rsi, r14
.text:0000000140003A80                 call    HidP_GetCaps
.text:0000000140003A85                 mov     ebx, eax
.text:0000000140003A87                 test    eax, eax
.text:0000000140003A89                 jns     short loc_140003A9F
.text:0000000140003A8B                 cmp     cs:off_14000D008, r15
.text:0000000140003A92                 jz      short loc_140003AC5
.text:0000000140003A94                 mov     r9d, 87h
.text:0000000140003A9A                 jmp     loc_140003955
.text:0000000140003A9F ; ---------------------------------------------------------------------------
.text:0000000140003A9F
.text:0000000140003A9F loc_140003A9F:                          ; CODE XREF: sub_1400038AC+1DD↑j
.text:0000000140003A9F                 mov     ebx, r14d
.text:0000000140003AA2
.text:0000000140003AA2 loc_140003AA2:                          ; CODE XREF: sub_1400038AC+10A↑j
.text:0000000140003AA2                                         ; sub_1400038AC+13C↑j
.text:0000000140003AA2                 test    rsi, rsi
.text:0000000140003AA5                 jz      short loc_140003AC5
.text:0000000140003AA7                 mov     rax, cs:qword_14000D388
.text:0000000140003AAE                 mov     rdx, rsi
.text:0000000140003AB1                 mov     rcx, cs:qword_14000D390
.text:0000000140003AB8                 mov     rax, [rax+680h]
.text:0000000140003ABF                 call    cs:__guard_dispatch_icall_fptr
.text:0000000140003AC5
.text:0000000140003AC5 loc_140003AC5:                          ; CODE XREF: sub_1400038AC+9F↑j
.text:0000000140003AC5                                         ; sub_1400038AC+CA↑j ...
.text:0000000140003AC5                 test    ebx, ebx
.text:0000000140003AC7                 jns     short loc_140003AF9
.text:0000000140003AC9                 cmp     [rdi+10h], r14
.text:0000000140003ACD                 jz      short loc_140003AF9
.text:0000000140003ACF                 lfence
.text:0000000140003AD2                 mov     rax, cs:qword_14000D388
.text:0000000140003AD9                 mov     rdx, [rdi+10h]
.text:0000000140003ADD                 mov     rcx, cs:qword_14000D390
.text:0000000140003AE4                 mov     rax, [rax+680h]
.text:0000000140003AEB                 call    cs:__guard_dispatch_icall_fptr
.text:0000000140003AF1                 mov     [rdi+10h], r14
.text:0000000140003AF5                 mov     [rdi+18h], r14
.text:0000000140003AF9
.text:0000000140003AF9 loc_140003AF9:                          ; CODE XREF: sub_1400038AC+21B↑j
.text:0000000140003AF9                                         ; sub_1400038AC+221↑j
.text:0000000140003AF9                 cmp     cs:off_14000D008, r15
.text:0000000140003B00                 jz      short loc_140003B2D
.text:0000000140003B02                 mov     rcx, cs:DeviceObject
.text:0000000140003B09                 cmp     [rcx+48h], r14w
.text:0000000140003B0E                 jz      short loc_140003B2D
.text:0000000140003B10                 mov     rcx, [rcx+40h]
.text:0000000140003B14                 mov     r9d, 88h
.text:0000000140003B1A                 mov     dword ptr [rsp+58h+var_30], ebx
.text:0000000140003B1E                 mov     r8d, r12d
.text:0000000140003B21                 mov     dl, 5
.text:0000000140003B23                 mov     [rsp+58h+var_38], r13
.text:0000000140003B28                 call    sub_14000176C
.text:0000000140003B2D
.text:0000000140003B2D loc_140003B2D:                          ; CODE XREF: sub_1400038AC+254↑j
.text:0000000140003B2D                                         ; sub_1400038AC+262↑j
.text:0000000140003B2D                 mov     rbp, [rsp+58h+arg_8]
.text:0000000140003B32                 mov     eax, ebx
.text:0000000140003B34                 mov     rbx, [rsp+58h+arg_0]
.text:0000000140003B39                 mov     rsi, [rsp+58h+arg_18]
.text:0000000140003B3E                 add     rsp, 30h
.text:0000000140003B42                 pop     r15
.text:0000000140003B44                 pop     r14
.text:0000000140003B46                 pop     r13
.text:0000000140003B48                 pop     r12
.text:0000000140003B4A                 pop     rdi
.text:0000000140003B4B                 retn
.text:0000000140003B4B sub_1400038AC   endp
.text:0000000140003B4B
.text:0000000140003B4C
.text:0000000140003B4C ; =============== S U B R O U T I N E =======================================
.text:0000000140003B4C
.text:0000000140003B4C ; Attributes: bp-based frame fpd=57h
.text:0000000140003B4C
.text:0000000140003B4C ; __int64 __fastcall sub_140003B4C(unsigned __int64, unsigned int, __int64, _QWORD *)
.text:0000000140003B4C sub_140003B4C   proc near               ; CODE XREF: sub_1400038AC+8D↑p
.text:0000000140003B4C                                         ; sub_1400038AC+179↑p
.text:0000000140003B4C                                         ; DATA XREF: ...
.text:0000000140003B4C
.text:0000000140003B4C var_D0          = qword ptr -0D0h
.text:0000000140003B4C var_C8          = qword ptr -0C8h
.text:0000000140003B4C var_C0          = qword ptr -0C0h
.text:0000000140003B4C var_B8          = qword ptr -0B8h
.text:0000000140003B4C var_A0          = qword ptr -0A0h
.text:0000000140003B4C var_98          = qword ptr -98h
.text:0000000140003B4C var_90          = xmmword ptr -90h
.text:0000000140003B4C var_80          = xmmword ptr -80h
.text:0000000140003B4C var_70          = xmmword ptr -70h
.text:0000000140003B4C var_60          = qword ptr -60h
.text:0000000140003B4C var_58          = dword ptr -58h
.text:0000000140003B4C var_54          = dword ptr -54h
.text:0000000140003B4C var_50          = qword ptr -50h
.text:0000000140003B4C var_48          = qword ptr -48h
.text:0000000140003B4C
.text:0000000140003B4C ; __unwind { // __GSHandlerCheck
.text:0000000140003B4C                 push    rbp
.text:0000000140003B4E                 push    rbx
.text:0000000140003B4F                 push    rsi
.text:0000000140003B50                 push    rdi
.text:0000000140003B51                 push    r12
.text:0000000140003B53                 push    r13
.text:0000000140003B55                 push    r14
.text:0000000140003B57                 push    r15
.text:0000000140003B59                 lea     rbp, [rsp-1Fh]
.text:0000000140003B5E                 sub     rsp, 0B8h
.text:0000000140003B65                 mov     rax, cs:__security_cookie
.text:0000000140003B6C                 xor     rax, rsp
.text:0000000140003B6F                 mov     [rbp+57h+var_48], rax
.text:0000000140003B73                 xor     r15d, r15d
.text:0000000140003B76                 mov     rsi, r9
.text:0000000140003B79                 mov     [rbp+57h+var_98], r15
.text:0000000140003B7D                 mov     rbx, r8
.text:0000000140003B80                 mov     [rbp+57h+var_A0], r15
.text:0000000140003B84                 mov     r14d, edx
.text:0000000140003B87                 mov     rdi, rcx
.text:0000000140003B8A                 lea     r12, off_14000D008
.text:0000000140003B91                 cmp     cs:off_14000D008, r12
.text:0000000140003B98                 lea     rax, unk_14000B2C0
.text:0000000140003B9F                 lea     r13d, [r15+3]
.text:0000000140003BA3                 jz      short loc_140003BD3
.text:0000000140003BA5                 mov     rcx, cs:DeviceObject
.text:0000000140003BAC                 cmp     [rcx+48h], r15w
.text:0000000140003BB1                 jz      short loc_140003BD3
.text:0000000140003BB3                 mov     rcx, [rcx+40h]
.text:0000000140003BB7                 mov     r9d, 89h
.text:0000000140003BBD                 mov     r8d, r13d
.text:0000000140003BC0                 mov     [rsp+0F0h+var_D0], rax
.text:0000000140003BC5                 mov     dl, 5
.text:0000000140003BC7                 call    sub_1400016A8
.text:0000000140003BCC                 lea     rax, unk_14000B2C0
.text:0000000140003BD3
.text:0000000140003BD3 loc_140003BD3:                          ; CODE XREF: sub_140003B4C+57↑j
.text:0000000140003BD3                                         ; sub_140003B4C+65↑j
.text:0000000140003BD3                 test    rbx, rbx
.text:0000000140003BD6                 jnz     short loc_140003C0B
.text:0000000140003BD8                 cmp     cs:off_14000D008, r12
.text:0000000140003BDF                 jz      short loc_140003C01
.text:0000000140003BE1                 mov     rcx, cs:DeviceObject
.text:0000000140003BE8                 mov     r9d, 8Ah
.text:0000000140003BEE                 mov     r8d, r13d
.text:0000000140003BF1                 mov     [rsp+0F0h+var_D0], rax
.text:0000000140003BF6                 mov     dl, 2
.text:0000000140003BF8                 mov     rcx, [rcx+40h]
.text:0000000140003BFC                 call    sub_1400016A8
.text:0000000140003C01
.text:0000000140003C01 loc_140003C01:                          ; CODE XREF: sub_140003B4C+93↑j
.text:0000000140003C01                 mov     ebx, 0C0000023h
.text:0000000140003C06                 jmp     loc_140003E41
.text:0000000140003C0B ; ---------------------------------------------------------------------------
.text:0000000140003C0B
.text:0000000140003C0B loc_140003C0B:                          ; CODE XREF: sub_140003B4C+8A↑j
.text:0000000140003C0B                 xor     eax, eax
.text:0000000140003C0D                 mov     [rsp+0F0h+var_C0], r15
.text:0000000140003C12                 mov     [rbp+57h+var_60], rax
.text:0000000140003C16                 lea     rcx, [rbp+57h+var_98]
.text:0000000140003C1A                 xorps   xmm0, xmm0
.text:0000000140003C1D                 mov     [rsp+0F0h+var_C8], rcx
.text:0000000140003C22                 mov     rcx, cs:qword_14000D390
.text:0000000140003C29                 lea     rdx, [rbp+57h+var_90]
.text:0000000140003C2D                 movups  [rbp+57h+var_80], xmm0
.text:0000000140003C31                 mov     eax, 1
.text:0000000140003C36                 mov     [rsp+0F0h+var_D0], rbx
.text:0000000140003C3B                 mov     dword ptr [rbp+57h+var_80+8], eax
.text:0000000140003C3E                 mov     r9d, 44464453h
.text:0000000140003C44                 mov     dword ptr [rbp+57h+var_80+0Ch], eax
.text:0000000140003C47                 mov     r8d, 200h
.text:0000000140003C4D                 mov     rax, cs:qword_14000D388
.text:0000000140003C54                 movups  [rbp+57h+var_90], xmm0
.text:0000000140003C58                 mov     dword ptr [rbp+57h+var_90], 38h ; '8'
.text:0000000140003C5F                 movups  [rbp+57h+var_70], xmm0
.text:0000000140003C63                 mov     qword ptr [rbp+57h+var_70], rdi
.text:0000000140003C67                 mov     rax, [rax+600h]
.text:0000000140003C6E                 call    cs:__guard_dispatch_icall_fptr
.text:0000000140003C74                 mov     ebx, eax
.text:0000000140003C76                 test    eax, eax
.text:0000000140003C78                 jns     short loc_140003CBE
.text:0000000140003C7A                 mov     [rbp+57h+var_98], r15
.text:0000000140003C7E                 cmp     cs:off_14000D008, r12
.text:0000000140003C85                 lea     rdi, unk_14000B2C0
.text:0000000140003C8C                 jz      loc_140003E70
.text:0000000140003C92                 mov     r9d, 8Bh
.text:0000000140003C98
.text:0000000140003C98 loc_140003C98:                          ; CODE XREF: sub_140003B4C+1E7↓j
.text:0000000140003C98                 lfence
.text:0000000140003C9B                 mov     rcx, cs:DeviceObject
.text:0000000140003CA2                 mov     r8d, r13d
.text:0000000140003CA5                 mov     dword ptr [rsp+0F0h+var_C8], eax
.text:0000000140003CA9                 mov     dl, 2
.text:0000000140003CAB                 mov     [rsp+0F0h+var_D0], rdi
.text:0000000140003CB0                 mov     rcx, [rcx+40h]
.text:0000000140003CB4                 call    sub_14000176C
.text:0000000140003CB9                 jmp     loc_140003E48
.text:0000000140003CBE ; ---------------------------------------------------------------------------
.text:0000000140003CBE
.text:0000000140003CBE loc_140003CBE:                          ; CODE XREF: sub_140003B4C+12C↑j
.text:0000000140003CBE                 mov     rcx, cs:qword_14000D390
.text:0000000140003CC5                 lea     r9, [rbp+57h+var_A0]
.text:0000000140003CC9                 xor     eax, eax
.text:0000000140003CCB                 lea     rdx, [rbp+57h+var_90]
.text:0000000140003CCF                 mov     [rbp+57h+var_60], rax
.text:0000000140003CD3                 xorps   xmm0, xmm0
.text:0000000140003CD6                 movups  [rbp+57h+var_80], xmm0
.text:0000000140003CDA                 mov     eax, 1
.text:0000000140003CDF                 mov     r8, rdi
.text:0000000140003CE2                 mov     dword ptr [rbp+57h+var_80+8], eax
.text:0000000140003CE5                 mov     dword ptr [rbp+57h+var_80+0Ch], eax
.text:0000000140003CE8                 mov     rax, cs:qword_14000D388
.text:0000000140003CEF                 movups  [rbp+57h+var_90], xmm0
.text:0000000140003CF3                 mov     dword ptr [rbp+57h+var_90], 38h ; '8'
.text:0000000140003CFA                 movups  [rbp+57h+var_70], xmm0
.text:0000000140003CFE                 mov     qword ptr [rbp+57h+var_70], rdi
.text:0000000140003D02                 mov     rax, [rax+7B8h]
.text:0000000140003D09                 call    cs:__guard_dispatch_icall_fptr
.text:0000000140003D0F                 mov     ebx, eax
.text:0000000140003D11                 test    eax, eax
.text:0000000140003D13                 jns     short loc_140003D38
.text:0000000140003D15                 mov     [rbp+57h+var_A0], r15
.text:0000000140003D19                 cmp     cs:off_14000D008, r12
.text:0000000140003D20                 jz      loc_140003E41
.text:0000000140003D26                 mov     r9d, 8Ch
.text:0000000140003D2C
.text:0000000140003D2C loc_140003D2C:                          ; CODE XREF: sub_140003B4C+249↓j
.text:0000000140003D2C                 lea     rdi, unk_14000B2C0
.text:0000000140003D33                 jmp     loc_140003C98
.text:0000000140003D38 ; ---------------------------------------------------------------------------
.text:0000000140003D38
.text:0000000140003D38 loc_140003D38:                          ; CODE XREF: sub_140003B4C+1C7↑j
.text:0000000140003D38                 lfence
.text:0000000140003D3B                 mov     rcx, [rbp+57h+var_98]
.text:0000000140003D3F                 mov     r9d, r14d
.text:0000000140003D42                 mov     rax, cs:qword_14000D388
.text:0000000140003D49                 mov     rdx, rdi
.text:0000000140003D4C                 mov     r8, [rbp+57h+var_A0]
.text:0000000140003D50                 mov     [rsp+0F0h+var_B8], r15
.text:0000000140003D55                 mov     [rsp+0F0h+var_C0], rcx
.text:0000000140003D5A                 mov     rax, [rax+5D8h]
.text:0000000140003D61                 mov     rcx, cs:qword_14000D390
.text:0000000140003D68                 mov     [rsp+0F0h+var_C8], r15
.text:0000000140003D6D                 mov     [rsp+0F0h+var_D0], r15
.text:0000000140003D72                 call    cs:__guard_dispatch_icall_fptr
.text:0000000140003D78                 mov     ebx, eax
.text:0000000140003D7A                 test    eax, eax
.text:0000000140003D7C                 jns     short loc_140003D97
.text:0000000140003D7E                 mov     [rbp+57h+var_A0], r15
.text:0000000140003D82                 cmp     cs:off_14000D008, r12
.text:0000000140003D89                 jz      loc_140003E41
.text:0000000140003D8F                 mov     r9d, 8Dh
.text:0000000140003D95                 jmp     short loc_140003D2C
.text:0000000140003D97 ; ---------------------------------------------------------------------------
.text:0000000140003D97
.text:0000000140003D97 loc_140003D97:                          ; CODE XREF: sub_140003B4C+230↑j
.text:0000000140003D97                 lfence
.text:0000000140003D9A                 mov     rax, cs:qword_14000D388
.text:0000000140003DA1                 lea     r9, [rbp+57h+var_58]
.text:0000000140003DA5                 mov     rdx, [rbp+57h+var_A0]
.text:0000000140003DA9                 mov     r8, rdi
.text:0000000140003DAC                 mov     rcx, cs:qword_14000D390
.text:0000000140003DB3                 mov     [rbp+57h+var_50], r15
.text:0000000140003DB7                 mov     [rbp+57h+var_58], 10h
.text:0000000140003DBE                 mov     [rbp+57h+var_54], 2
.text:0000000140003DC5                 mov     rax, [rax+7E8h]
.text:0000000140003DCC                 call    cs:__guard_dispatch_icall_fptr
.text:0000000140003DD2                 test    al, al
.text:0000000140003DD4                 jnz     short loc_140003E36
.text:0000000140003DD6                 mov     rax, cs:qword_14000D388
.text:0000000140003DDD                 mov     rdx, [rbp+57h+var_A0]
.text:0000000140003DE1                 mov     rcx, cs:qword_14000D390
.text:0000000140003DE8                 mov     rax, [rax+7F0h]
.text:0000000140003DEF                 call    cs:__guard_dispatch_icall_fptr
.text:0000000140003DF5                 mov     ebx, eax
.text:0000000140003DF7                 cmp     cs:off_14000D008, r12
.text:0000000140003DFE                 lea     rdi, unk_14000B2C0
.text:0000000140003E05                 jz      short loc_140003E2B
.text:0000000140003E07                 mov     rcx, cs:DeviceObject
.text:0000000140003E0E                 mov     r9d, 8Eh
.text:0000000140003E14                 mov     dword ptr [rsp+0F0h+var_C8], eax
.text:0000000140003E18                 mov     r8d, r13d
.text:0000000140003E1B                 mov     dl, 2
.text:0000000140003E1D                 mov     [rsp+0F0h+var_D0], rdi
.text:0000000140003E22                 mov     rcx, [rcx+40h]
.text:0000000140003E26                 call    sub_14000176C
.text:0000000140003E2B
.text:0000000140003E2B loc_140003E2B:                          ; CODE XREF: sub_140003B4C+2B9↑j
.text:0000000140003E2B                 test    ebx, ebx
.text:0000000140003E2D                 js      short loc_140003E48
.text:0000000140003E2F                 mov     ebx, 0C0000001h
.text:0000000140003E34                 jmp     short loc_140003E48
.text:0000000140003E36 ; ---------------------------------------------------------------------------
.text:0000000140003E36
.text:0000000140003E36 loc_140003E36:                          ; CODE XREF: sub_140003B4C+288↑j
.text:0000000140003E36                 mov     rax, [rbp+57h+var_98]
.text:0000000140003E3A                 mov     [rsi], rax
.text:0000000140003E3D                 mov     [rbp+57h+var_98], r15
.text:0000000140003E41
.text:0000000140003E41 loc_140003E41:                          ; CODE XREF: sub_140003B4C+BA↑j
.text:0000000140003E41                                         ; sub_140003B4C+1D4↑j ...
.text:0000000140003E41                 lea     rdi, unk_14000B2C0
.text:0000000140003E48
.text:0000000140003E48 loc_140003E48:                          ; CODE XREF: sub_140003B4C+16D↑j
.text:0000000140003E48                                         ; sub_140003B4C+2E1↑j ...
.text:0000000140003E48                 mov     rdx, [rbp+57h+var_98]
.text:0000000140003E4C                 test    rdx, rdx
.text:0000000140003E4F                 jz      short loc_140003E70
.text:0000000140003E51                 mov     rax, cs:qword_14000D388
.text:0000000140003E58                 mov     rcx, cs:qword_14000D390
.text:0000000140003E5F                 mov     rax, [rax+680h]
.text:0000000140003E66                 call    cs:__guard_dispatch_icall_fptr
.text:0000000140003E6C                 mov     [rbp+57h+var_98], r15
.text:0000000140003E70
.text:0000000140003E70 loc_140003E70:                          ; CODE XREF: sub_140003B4C+140↑j
.text:0000000140003E70                                         ; sub_140003B4C+303↑j
.text:0000000140003E70                 mov     rdx, [rbp+57h+var_A0]
.text:0000000140003E74                 test    rdx, rdx
.text:0000000140003E77                 jz      short loc_140003E98
.text:0000000140003E79                 mov     rax, cs:qword_14000D388
.text:0000000140003E80                 mov     rcx, cs:qword_14000D390
.text:0000000140003E87                 mov     rax, [rax+680h]
.text:0000000140003E8E                 call    cs:__guard_dispatch_icall_fptr
.text:0000000140003E94                 mov     [rbp+57h+var_A0], r15
.text:0000000140003E98
.text:0000000140003E98 loc_140003E98:                          ; CODE XREF: sub_140003B4C+32B↑j
.text:0000000140003E98                 cmp     cs:off_14000D008, r12
.text:0000000140003E9F                 jz      short loc_140003ECC
.text:0000000140003EA1                 mov     rcx, cs:DeviceObject
.text:0000000140003EA8                 cmp     [rcx+48h], r15w
.text:0000000140003EAD                 jz      short loc_140003ECC
.text:0000000140003EAF                 mov     rcx, [rcx+40h]
.text:0000000140003EB3                 mov     r9d, 8Fh
.text:0000000140003EB9                 mov     dword ptr [rsp+0F0h+var_C8], ebx
.text:0000000140003EBD                 mov     r8d, r13d
.text:0000000140003EC0                 mov     dl, 5
.text:0000000140003EC2                 mov     [rsp+0F0h+var_D0], rdi
.text:0000000140003EC7                 call    sub_14000176C
.text:0000000140003ECC
.text:0000000140003ECC loc_140003ECC:                          ; CODE XREF: sub_140003B4C+353↑j
.text:0000000140003ECC                                         ; sub_140003B4C+361↑j
.text:0000000140003ECC                 mov     eax, ebx
.text:0000000140003ECE                 mov     rcx, [rbp+57h+var_48]
.text:0000000140003ED2                 xor     rcx, rsp        ; StackCookie
.text:0000000140003ED5                 call    __security_check_cookie
.text:0000000140003EDA                 add     rsp, 0B8h
.text:0000000140003EE1                 pop     r15
.text:0000000140003EE3                 pop     r14
.text:0000000140003EE5                 pop     r13
.text:0000000140003EE7                 pop     r12
.text:0000000140003EE9                 pop     rdi
.text:0000000140003EEA                 pop     rsi
.text:0000000140003EEB                 pop     rbx
.text:0000000140003EEC                 pop     rbp
.text:0000000140003EED                 retn
.text:0000000140003EED ; } // starts at 140003B4C
.text:0000000140003EED sub_140003B4C   endp
.text:0000000140003EED
.text:0000000140003EED ; ---------------------------------------------------------------------------
.text:0000000140003EEE algn_140003EEE:                         ; DATA XREF: .pdata:000000014000E0D8↓o
.text:0000000140003EEE                 align 10h
.text:0000000140003EF0
.text:0000000140003EF0 ; =============== S U B R O U T I N E =======================================
.text:0000000140003EF0
.text:0000000140003EF0 ; Attributes: bp-based frame fpd=90h
.text:0000000140003EF0
.text:0000000140003EF0 ; __int64 __fastcall CallbackRoutine(char *NotificationStructure, __int64 Context)
.text:0000000140003EF0 CallbackRoutine proc near               ; DATA XREF: sub_14000597C+C7↓o
.text:0000000140003EF0                                         ; .rdata:000000014000B158↓o ...
.text:0000000140003EF0
.text:0000000140003EF0 var_170         = qword ptr -170h
.text:0000000140003EF0 var_168         = qword ptr -168h
.text:0000000140003EF0 var_160         = dword ptr -160h
.text:0000000140003EF0 var_158         = dword ptr -158h
.text:0000000140003EF0 var_150         = dword ptr -150h
.text:0000000140003EF0 var_140         = qword ptr -140h
.text:0000000140003EF0 var_130         = byte ptr -130h
.text:0000000140003EF0 var_12A         = word ptr -12Ah
.text:0000000140003EF0 var_128         = word ptr -128h
.text:0000000140003EF0 var_110         = word ptr -110h
.text:0000000140003EF0 var_10E         = word ptr -10Eh
.text:0000000140003EF0 var_D0          = dword ptr -0D0h
.text:0000000140003EF0 var_CC          = dword ptr -0CCh
.text:0000000140003EF0 var_A0          = xmmword ptr -0A0h
.text:0000000140003EF0 var_90          = dword ptr -90h
.text:0000000140003EF0 var_8C          = dword ptr -8Ch
.text:0000000140003EF0 var_80          = dword ptr -80h
.text:0000000140003EF0 var_40          = qword ptr -40h
.text:0000000140003EF0 arg_10          = qword ptr  20h
.text:0000000140003EF0
.text:0000000140003EF0 ; __unwind { // __GSHandlerCheck
.text:0000000140003EF0                 mov     [rsp-8+arg_10], rbx
.text:0000000140003EF5                 push    rbp
.text:0000000140003EF6                 push    rsi
.text:0000000140003EF7                 push    rdi
.text:0000000140003EF8                 push    r12
.text:0000000140003EFA                 push    r13
.text:0000000140003EFC                 push    r14
.text:0000000140003EFE                 push    r15
.text:0000000140003F00                 lea     rbp, [rsp-60h]
.text:0000000140003F05                 sub     rsp, 160h
.text:0000000140003F0C                 mov     rax, cs:__security_cookie
.text:0000000140003F13                 xor     rax, rsp
.text:0000000140003F16                 mov     [rbp+90h+var_40], rax
.text:0000000140003F1A                 xor     r14d, r14d
.text:0000000140003F1D                 mov     rsi, rdx
.text:0000000140003F20                 mov     rdi, rcx
.text:0000000140003F23                 mov     [rsp+190h+var_140], r14
.text:0000000140003F28                 xor     edx, edx
.text:0000000140003F2A                 lea     rcx, [rsp+190h+var_130]
.text:0000000140003F2F                 mov     ebx, r14d
.text:0000000140003F32                 lea     r8d, [r14+60h]
.text:0000000140003F36                 call    sub_14000A4C0
.text:0000000140003F3B                 lea     r15, off_14000D008
.text:0000000140003F42                 cmp     cs:off_14000D008, r15
.text:0000000140003F49                 lea     r13, unk_14000B2C0
.text:0000000140003F50                 lea     r12d, [r14+3]
.text:0000000140003F54                 jz      short loc_140003F7B
.text:0000000140003F56                 mov     rcx, cs:DeviceObject
.text:0000000140003F5D                 cmp     [rcx+48h], r14w
.text:0000000140003F62                 jz      short loc_140003F7B
.text:0000000140003F64                 mov     rcx, [rcx+40h]
.text:0000000140003F68                 lea     r9d, [r14+78h]
.text:0000000140003F6C                 mov     r8d, r12d
.text:0000000140003F6F                 mov     [rsp+190h+var_170], r13
.text:0000000140003F74                 mov     dl, 5
.text:0000000140003F76                 call    sub_1400016A8
.text:0000000140003F7B
.text:0000000140003F7B loc_140003F7B:                          ; CODE XREF: CallbackRoutine+64↑j
.text:0000000140003F7B                                         ; CallbackRoutine+72↑j
.text:0000000140003F7B                 mov     rax, cs:qword_14000D388
.text:0000000140003F82                 mov     rdx, rsi
.text:0000000140003F85                 mov     r8, cs:off_14000D028
.text:0000000140003F8C                 mov     rcx, cs:qword_14000D390
.text:0000000140003F93                 mov     rax, [rax+650h]
.text:0000000140003F9A                 call    cs:__guard_dispatch_icall_fptr
.text:0000000140003FA0                 lea     rdx, [rdi+4]
.text:0000000140003FA4                 mov     rax, [rdx]
.text:0000000140003FA7                 cmp     rax, cs:qword_14000B280
.text:0000000140003FAE                 jnz     loc_14000424C
.text:0000000140003FB4                 mov     rax, [rdx+8]
.text:0000000140003FB8                 cmp     rax, cs:qword_14000B288
.text:0000000140003FBF                 jnz     loc_14000424C
.text:0000000140003FC5                 cmp     cs:off_14000D008, r15
.text:0000000140003FCC                 jz      short loc_140004002
.text:0000000140003FCE                 mov     rcx, cs:DeviceObject
.text:0000000140003FD5                 cmp     [rcx+48h], r14w
.text:0000000140003FDA                 jz      short loc_140004002
.text:0000000140003FDC                 mov     rax, [rdi+28h]
.text:0000000140003FE0                 mov     r9d, 7Ah ; 'z'
.text:0000000140003FE6                 mov     rcx, [rcx+40h]
.text:0000000140003FEA                 mov     r8d, r12d
.text:0000000140003FED                 mov     dl, 5
.text:0000000140003FEF                 mov     rax, [rax+8]
.text:0000000140003FF3                 mov     [rsp+190h+var_168], rax
.text:0000000140003FF8                 mov     [rsp+190h+var_170], r13
.text:0000000140003FFD                 call    sub_140005D44
.text:0000000140004002
.text:0000000140004002 loc_140004002:                          ; CODE XREF: CallbackRoutine+DC↑j
.text:0000000140004002                                         ; CallbackRoutine+EA↑j
.text:0000000140004002                 mov     rax, cs:qword_14000D388
.text:0000000140004009                 lea     r9, [rsp+190h+var_140]
.text:000000014000400E                 mov     rcx, cs:qword_14000D390
.text:0000000140004015                 xor     r8d, r8d
.text:0000000140004018                 mov     rdx, rsi
.text:000000014000401B                 mov     rax, [rax+538h]
.text:0000000140004022                 call    cs:__guard_dispatch_icall_fptr
.text:0000000140004028                 mov     ebx, eax
.text:000000014000402A                 test    eax, eax
.text:000000014000402C                 jns     short loc_14000406C
.text:000000014000402E                 mov     [rsp+190h+var_140], r14
.text:0000000140004033                 cmp     cs:off_14000D008, r15
.text:000000014000403A                 jz      loc_140004281
.text:0000000140004040                 mov     r9d, 7Bh ; '{'
.text:0000000140004046
.text:0000000140004046 loc_140004046:                          ; CODE XREF: CallbackRoutine+357↓j
.text:0000000140004046                 mov     dword ptr [rsp+190h+var_168], eax
.text:000000014000404A
.text:000000014000404A loc_14000404A:                          ; CODE XREF: CallbackRoutine+23D↓j
.text:000000014000404A                 lfence
.text:000000014000404D                 mov     rcx, cs:DeviceObject
.text:0000000140004054                 mov     r8d, r12d
.text:0000000140004057                 mov     dl, 2
.text:0000000140004059                 mov     [rsp+190h+var_170], r13
.text:000000014000405E                 mov     rcx, [rcx+40h]
.text:0000000140004062                 call    sub_14000176C
.text:0000000140004067                 jmp     loc_140004281
.text:000000014000406C ; ---------------------------------------------------------------------------
.text:000000014000406C
.text:000000014000406C loc_14000406C:                          ; CODE XREF: CallbackRoutine+13C↑j
.text:000000014000406C                 mov     ebx, 88h
.text:0000000140004071                 lea     rcx, [rbp+90h+var_D0]
.text:0000000140004075                 mov     r8d, ebx
.text:0000000140004078                 xor     edx, edx
.text:000000014000407A                 call    sub_14000A4C0
.text:000000014000407F                 mov     rax, [rdi+28h]
.text:0000000140004083                 lea     r8, [rbp+90h+var_D0]
.text:0000000140004087                 mov     rdx, [rsp+190h+var_140]
.text:000000014000408C                 mov     rcx, cs:qword_14000D390
.text:0000000140004093                 mov     [rbp+90h+var_D0], ebx
.text:0000000140004096                 mov     [rbp+90h+var_CC], 2
.text:000000014000409D                 movups  xmm0, xmmword ptr [rax]
.text:00000001400040A0                 mov     rax, cs:qword_14000D388
.text:00000001400040A7                 mov     [rbp+90h+var_90], r14d
.text:00000001400040AB                 movdqu  [rbp+90h+var_A0], xmm0
.text:00000001400040B0                 mov     [rbp+90h+var_80], 40h ; '@'
.text:00000001400040B7                 mov     [rbp+90h+var_8C], 7
.text:00000001400040BE                 mov     rax, [rax+540h]
.text:00000001400040C5                 call    cs:__guard_dispatch_icall_fptr
.text:00000001400040CB                 mov     ebx, eax
.text:00000001400040CD                 mov     eax, 0C0000043h
.text:00000001400040D2                 cmp     ebx, eax
.text:00000001400040D4                 jnz     short loc_140004112
.text:00000001400040D6                 cmp     cs:off_14000D008, r15
.text:00000001400040DD                 jz      short loc_14000410A
.text:00000001400040DF                 mov     rcx, cs:DeviceObject
.text:00000001400040E6                 cmp     [rcx+48h], r14w
.text:00000001400040EB                 jz      short loc_14000410A
.text:00000001400040ED                 mov     rcx, [rcx+40h]
.text:00000001400040F1                 mov     r9d, 7Ch ; '|'
.text:00000001400040F7                 mov     dword ptr [rsp+190h+var_168], eax
.text:00000001400040FB                 mov     r8d, r12d
.text:00000001400040FE                 mov     dl, 5
.text:0000000140004100                 mov     [rsp+190h+var_170], r13
.text:0000000140004105                 call    sub_14000176C
.text:000000014000410A
.text:000000014000410A loc_14000410A:                          ; CODE XREF: CallbackRoutine+1ED↑j
.text:000000014000410A                                         ; CallbackRoutine+1FB↑j
.text:000000014000410A                 mov     ebx, r14d
.text:000000014000410D                 jmp     loc_140004281
.text:0000000140004112 ; ---------------------------------------------------------------------------
.text:0000000140004112
.text:0000000140004112 loc_140004112:                          ; CODE XREF: CallbackRoutine+1E4↑j
.text:0000000140004112                 test    ebx, ebx
.text:0000000140004114                 jns     short loc_140004132
.text:0000000140004116                 cmp     cs:off_14000D008, r15
.text:000000014000411D                 jz      loc_140004281
.text:0000000140004123                 mov     r9d, 7Dh ; '}'
.text:0000000140004129
.text:0000000140004129 loc_140004129:                          ; CODE XREF: CallbackRoutine+27A↓j
.text:0000000140004129                 mov     dword ptr [rsp+190h+var_168], ebx
.text:000000014000412D                 jmp     loc_14000404A
.text:0000000140004132 ; ---------------------------------------------------------------------------
.text:0000000140004132
.text:0000000140004132 loc_140004132:                          ; CODE XREF: CallbackRoutine+224↑j
.text:0000000140004132                 mov     rcx, [rsp+190h+var_140]
.text:0000000140004137                 lea     rdx, [rsp+190h+var_130]
.text:000000014000413C                 call    sub_1400038AC
.text:0000000140004141                 mov     ebx, eax
.text:0000000140004143                 test    eax, eax
.text:0000000140004145                 jns     short loc_14000416C
.text:0000000140004147                 xor     edx, edx
.text:0000000140004149                 lea     rcx, [rsp+190h+var_130]
.text:000000014000414E                 lea     r8d, [rdx+60h]
.text:0000000140004152                 call    sub_14000A4C0
.text:0000000140004157                 cmp     cs:off_14000D008, r15
.text:000000014000415E                 jz      loc_140004281
.text:0000000140004164                 mov     r9d, 7Eh ; '~'
.text:000000014000416A                 jmp     short loc_140004129
.text:000000014000416C ; ---------------------------------------------------------------------------
.text:000000014000416C
.text:000000014000416C loc_14000416C:                          ; CODE XREF: CallbackRoutine+255↑j
.text:000000014000416C                 cmp     cs:off_14000D008, r15
.text:0000000140004173                 jz      short loc_1400041C2
.text:0000000140004175                 mov     rcx, cs:DeviceObject
.text:000000014000417C                 cmp     [rcx+48h], r14w
.text:0000000140004181                 jz      short loc_1400041C2
.text:0000000140004183                 movzx   edx, [rbp+90h+var_10E]
.text:0000000140004187                 mov     r9d, 7Fh
.text:000000014000418D                 movzx   r8d, [rsp+190h+var_128]
.text:0000000140004193                 movzx   eax, [rbp+90h+var_110]
.text:0000000140004197                 movzx   r10d, [rsp+190h+var_12A]
.text:000000014000419D                 mov     rcx, [rcx+40h]
.text:00000001400041A1                 mov     [rsp+190h+var_150], eax
.text:00000001400041A5                 mov     [rsp+190h+var_158], edx
.text:00000001400041A9                 mov     dl, 5
.text:00000001400041AB                 mov     [rsp+190h+var_160], r8d
.text:00000001400041B0                 mov     r8d, r12d
.text:00000001400041B3                 mov     dword ptr [rsp+190h+var_168], r10d
.text:00000001400041B8                 mov     [rsp+190h+var_170], r13
.text:00000001400041BD                 call    sub_140005B40
.text:00000001400041C2
.text:00000001400041C2 loc_1400041C2:                          ; CODE XREF: CallbackRoutine+283↑j
.text:00000001400041C2                                         ; CallbackRoutine+291↑j
.text:00000001400041C2                 mov     eax, 45Eh
.text:00000001400041C7                 cmp     [rsp+190h+var_12A], ax
.text:00000001400041CC                 jnz     loc_140004281
.text:00000001400041D2                 mov     eax, 0FF09h
.text:00000001400041D7                 cmp     [rbp+90h+var_10E], ax
.text:00000001400041DB                 jnz     loc_140004281
.text:00000001400041E1                 mov     eax, 100h
.text:00000001400041E6                 cmp     [rbp+90h+var_110], ax
.text:00000001400041EA                 jnz     loc_140004281
.text:00000001400041F0                 lfence
.text:00000001400041F3                 cmp     cs:off_14000D008, r15
.text:00000001400041FA                 jz      short loc_140004221
.text:00000001400041FC                 mov     rcx, cs:DeviceObject
.text:0000000140004203                 cmp     [rcx+48h], r14w
.text:0000000140004208                 jz      short loc_140004221
.text:000000014000420A                 mov     rcx, [rcx+40h]
.text:000000014000420E                 lea     r9d, [rax-80h]
.text:0000000140004212                 mov     r8d, r12d
.text:0000000140004215                 mov     [rsp+190h+var_170], r13
.text:000000014000421A                 mov     dl, 5
.text:000000014000421C                 call    sub_1400016A8
.text:0000000140004221
.text:0000000140004221 loc_140004221:                          ; CODE XREF: CallbackRoutine+30A↑j
.text:0000000140004221                                         ; CallbackRoutine+318↑j
.text:0000000140004221                 mov     rdx, [rdi+28h]
.text:0000000140004225                 lea     r8, [rsp+190h+var_130]
.text:000000014000422A                 mov     rcx, rsi
.text:000000014000422D                 call    sub_140004958
.text:0000000140004232                 mov     ebx, eax
.text:0000000140004234                 test    eax, eax
.text:0000000140004236                 jns     short loc_140004281
.text:0000000140004238                 cmp     cs:off_14000D008, r15
.text:000000014000423F                 jz      short loc_140004281
.text:0000000140004241                 mov     r9d, 81h
.text:0000000140004247                 jmp     loc_140004046
.text:000000014000424C ; ---------------------------------------------------------------------------
.text:000000014000424C
.text:000000014000424C loc_14000424C:                          ; CODE XREF: CallbackRoutine+BE↑j
.text:000000014000424C                                         ; CallbackRoutine+CF↑j
.text:000000014000424C                 cmp     cs:off_14000D008, r15
.text:0000000140004253                 jz      short loc_140004281
.text:0000000140004255                 mov     rcx, cs:DeviceObject
.text:000000014000425C                 cmp     [rcx+48h], r14w
.text:0000000140004261                 jz      short loc_140004281
.text:0000000140004263                 mov     rcx, [rcx+40h]
.text:0000000140004267                 mov     r9d, 79h ; 'y'
.text:000000014000426D                 mov     [rsp+190h+var_168], rdx
.text:0000000140004272                 mov     r8d, r12d
.text:0000000140004275                 mov     dl, 5
.text:0000000140004277                 mov     [rsp+190h+var_170], r13
.text:000000014000427C                 call    sub_1400061D4
.text:0000000140004281
.text:0000000140004281 loc_140004281:                          ; CODE XREF: CallbackRoutine+14A↑j
.text:0000000140004281                                         ; CallbackRoutine+177↑j ...
.text:0000000140004281                 lea     rcx, [rsp+190h+var_130]
.text:0000000140004286                 call    sub_140001840
.text:000000014000428B                 mov     rdx, [rsp+190h+var_140]
.text:0000000140004290                 test    rdx, rdx
.text:0000000140004293                 jz      short loc_1400042B5
.text:0000000140004295                 mov     rax, cs:qword_14000D388
.text:000000014000429C                 mov     rcx, cs:qword_14000D390
.text:00000001400042A3                 mov     rax, [rax+680h]
.text:00000001400042AA                 call    cs:__guard_dispatch_icall_fptr
.text:00000001400042B0                 mov     [rsp+190h+var_140], r14
.text:00000001400042B5
.text:00000001400042B5 loc_1400042B5:                          ; CODE XREF: CallbackRoutine+3A3↑j
.text:00000001400042B5                 cmp     cs:off_14000D008, r15
.text:00000001400042BC                 jz      short loc_1400042E9
.text:00000001400042BE                 mov     rcx, cs:DeviceObject
.text:00000001400042C5                 cmp     [rcx+48h], r14w
.text:00000001400042CA                 jz      short loc_1400042E9
.text:00000001400042CC                 mov     rcx, [rcx+40h]
.text:00000001400042D0                 mov     r9d, 82h
.text:00000001400042D6                 mov     dword ptr [rsp+190h+var_168], ebx
.text:00000001400042DA                 mov     r8d, r12d
.text:00000001400042DD                 mov     dl, 5
.text:00000001400042DF                 mov     [rsp+190h+var_170], r13
.text:00000001400042E4                 call    sub_14000176C
.text:00000001400042E9
.text:00000001400042E9 loc_1400042E9:                          ; CODE XREF: CallbackRoutine+3CC↑j
.text:00000001400042E9                                         ; CallbackRoutine+3DA↑j
.text:00000001400042E9                 xor     eax, eax
.text:00000001400042EB                 mov     rcx, [rbp+90h+var_40]
.text:00000001400042EF                 xor     rcx, rsp        ; StackCookie
.text:00000001400042F2                 call    __security_check_cookie
.text:00000001400042F7                 mov     rbx, [rsp+190h+arg_10]
.text:00000001400042FF                 add     rsp, 160h
.text:0000000140004306                 pop     r15
.text:0000000140004308                 pop     r14
.text:000000014000430A                 pop     r13
.text:000000014000430C                 pop     r12
.text:000000014000430E                 pop     rdi
.text:000000014000430F                 pop     rsi
.text:0000000140004310                 pop     rbp
.text:0000000140004311                 retn
.text:0000000140004311 ; } // starts at 140003EF0
.text:0000000140004311 CallbackRoutine endp
.text:0000000140004311
.text:0000000140004311 ; ---------------------------------------------------------------------------
.text:0000000140004312 algn_140004312:                         ; DATA XREF: .pdata:000000014000E0E4↓o
.text:0000000140004312                 align 4
.text:0000000140004314
.text:0000000140004314 ; =============== S U B R O U T I N E =======================================
.text:0000000140004314
.text:0000000140004314 ; Attributes: bp-based frame
.text:0000000140004314
.text:0000000140004314 ; __int64 __fastcall sub_140004314(__int64, __int16)
.text:0000000140004314 sub_140004314   proc near               ; CODE XREF: sub_140002C50+F3↑p
.text:0000000140004314                                         ; DATA XREF: .pdata:000000014000E0F0↓o
.text:0000000140004314
.text:0000000140004314 Timeout         = qword ptr -30h
.text:0000000140004314 var_28          = qword ptr -28h
.text:0000000140004314 var_20          = dword ptr -20h
.text:0000000140004314 var_1C          = dword ptr -1Ch
.text:0000000140004314 var_18          = dword ptr -18h
.text:0000000140004314 var_14          = dword ptr -14h
.text:0000000140004314 var_10          = _LARGE_INTEGER ptr -10h
.text:0000000140004314 var_8           = qword ptr -8
.text:0000000140004314 var_s0          = byte ptr  0
.text:0000000140004314 arg_8           = qword ptr  38h
.text:0000000140004314 arg_10          = qword ptr  40h
.text:0000000140004314
.text:0000000140004314 ; __unwind { // __GSHandlerCheck
.text:0000000140004314                 mov     [rsp-28h+arg_8], rbx
.text:0000000140004319                 mov     [rsp-28h+arg_10], rsi
.text:000000014000431E                 push    rbp
.text:000000014000431F                 push    rdi
.text:0000000140004320                 push    r12
.text:0000000140004322                 push    r14
.text:0000000140004324                 push    r15
.text:0000000140004326                 mov     rbp, rsp
.text:0000000140004329                 sub     rsp, 50h
.text:000000014000432D                 mov     rax, cs:__security_cookie
.text:0000000140004334                 xor     rax, rsp
.text:0000000140004337                 mov     [rbp+var_8], rax
.text:000000014000433B                 xor     esi, esi
.text:000000014000433D                 mov     rbx, rcx
.text:0000000140004340                 xor     eax, eax
.text:0000000140004342                 mov     [rbp+var_20], esi
.text:0000000140004345                 mov     qword ptr [rbp+var_10], rax
.text:0000000140004349                 mov     [rbp+var_1C], esi
.text:000000014000434C                 mov     [rbp+var_18], esi
.text:000000014000434F                 mov     [rbp+var_14], esi
.text:0000000140004352                 lea     r14, off_14000D008
.text:0000000140004359                 cmp     cs:off_14000D008, r14
.text:0000000140004360                 lea     r12, unk_14000B2C0
.text:0000000140004367                 lea     r15d, [rsi+3]
.text:000000014000436B                 jz      short loc_140004391
.text:000000014000436D                 mov     rcx, cs:DeviceObject
.text:0000000140004374                 cmp     [rcx+48h], si
.text:0000000140004378                 jz      short loc_140004391
.text:000000014000437A                 mov     rcx, [rcx+40h]
.text:000000014000437E                 lea     r9d, [rsi+49h]
.text:0000000140004382                 mov     r8d, r15d
.text:0000000140004385                 mov     [rsp+50h+Timeout], r12
.text:000000014000438A                 mov     dl, 5
.text:000000014000438C                 call    sub_1400016A8
.text:0000000140004391
.text:0000000140004391 loc_140004391:                          ; CODE XREF: sub_140004314+57↑j
.text:0000000140004391                                         ; sub_140004314+64↑j
.text:0000000140004391                 mov     rax, cs:qword_14000D388
.text:0000000140004398                 mov     rdx, rbx
.text:000000014000439B                 mov     r8, cs:off_14000D028
.text:00000001400043A2                 mov     rcx, cs:qword_14000D390
.text:00000001400043A9                 mov     rax, [rax+650h]
.text:00000001400043B0                 call    cs:__guard_dispatch_icall_fptr
.text:00000001400043B6                 mov     rdi, rax
.text:00000001400043B9                 cmp     [rax+274h], sil
.text:00000001400043C0                 jz      short loc_1400043F1
.text:00000001400043C2                 cmp     cs:off_14000D008, r14
.text:00000001400043C9                 jz      loc_140004484
.text:00000001400043CF                 mov     rcx, cs:DeviceObject
.text:00000001400043D6                 mov     r9d, 4Ah ; 'J'
.text:00000001400043DC                 mov     r8d, r15d
.text:00000001400043DF                 mov     [rsp+50h+Timeout], r12
.text:00000001400043E4                 mov     dl, 4
.text:00000001400043E6                 mov     rcx, [rcx+40h]
.text:00000001400043EA                 call    sub_1400016A8
.text:00000001400043EF                 jmp     short loc_14000441B
.text:00000001400043F1 ; ---------------------------------------------------------------------------
.text:00000001400043F1
.text:00000001400043F1 loc_1400043F1:                          ; CODE XREF: sub_140004314+AC↑j
.text:00000001400043F1                 lea     r9, [rbp+var_14]
.text:00000001400043F5                 lea     r8, [rbp+var_18]
.text:00000001400043F9                 lea     rdx, [rbp+var_1C]
.text:00000001400043FD                 lea     rcx, [rbp+var_20]
.text:0000000140004401                 call    sub_1400057AC
.text:0000000140004406                 mov     ebx, eax
.text:0000000140004408                 test    eax, eax
.text:000000014000440A                 jns     loc_1400045CF
.text:0000000140004410                 cmp     eax, 0C0000034h
.text:0000000140004415                 jnz     loc_1400045B4
.text:000000014000441B
.text:000000014000441B loc_14000441B:                          ; CODE XREF: sub_140004314+DB↑j
.text:000000014000441B                 cmp     cs:off_14000D008, r14
.text:0000000140004422                 jz      short loc_140004484
.text:0000000140004424                 mov     rcx, cs:DeviceObject
.text:000000014000442B                 cmp     [rcx+48h], si
.text:000000014000442F                 jz      short loc_14000444A
.text:0000000140004431                 mov     rcx, [rcx+40h]
.text:0000000140004435                 mov     r9d, 4Bh ; 'K'
.text:000000014000443B                 mov     r8d, r15d
.text:000000014000443E                 mov     [rsp+50h+Timeout], r12
.text:0000000140004443                 mov     dl, 5
.text:0000000140004445                 call    sub_1400016A8
.text:000000014000444A
.text:000000014000444A loc_14000444A:                          ; CODE XREF: sub_140004314+11B↑j
.text:000000014000444A                 cmp     cs:off_14000D008, r14
.text:0000000140004451                 jz      short loc_140004484
.text:0000000140004453                 mov     rcx, cs:DeviceObject
.text:000000014000445A                 cmp     [rcx+48h], si
.text:000000014000445E                 jz      short loc_140004484
.text:0000000140004460                 mov     eax, [rdi+278h]
.text:0000000140004466                 mov     r9d, 4Ch ; 'L'
.text:000000014000446C                 mov     rcx, [rcx+40h]
.text:0000000140004470                 mov     r8d, r15d
.text:0000000140004473                 mov     [rsp+50h+var_28], rax
.text:0000000140004478                 mov     dl, 5
.text:000000014000447A                 mov     [rsp+50h+Timeout], r12
.text:000000014000447F                 call    sub_140005C70
.text:0000000140004484
.text:0000000140004484 loc_140004484:                          ; CODE XREF: sub_140004314+B5↑j
.text:0000000140004484                                         ; sub_140004314+10E↑j ...
.text:0000000140004484                 mov     eax, [rdi+278h]
.text:000000014000448A                 xor     r9d, r9d        ; Alertable
.text:000000014000448D                 imul    rcx, rax, 0FFFFFFFFFFFFD8F0h
.text:0000000140004494                 lea     rax, [rbp+var_10]
.text:0000000140004498                 xor     r8d, r8d        ; WaitMode
.text:000000014000449B                 mov     qword ptr [rbp+var_10], rcx
.text:000000014000449F                 xor     edx, edx        ; WaitReason
.text:00000001400044A1                 lea     rcx, [rdi+0F8h] ; Object
.text:00000001400044A8                 mov     [rsp+50h+Timeout], rax ; Timeout
.text:00000001400044AD                 call    cs:KeWaitForSingleObject
.text:00000001400044B3                 mov     ebx, eax
.text:00000001400044B5                 test    eax, eax
.text:00000001400044B7                 jz      short loc_140004514
.text:00000001400044B9                 cmp     eax, 102h
.text:00000001400044BE                 jz      short loc_1400044F6
.text:00000001400044C0                 cmp     cs:off_14000D008, r14
.text:00000001400044C7                 jz      loc_14000467A
.text:00000001400044CD                 mov     r9d, 50h ; 'P'
.text:00000001400044D3
.text:00000001400044D3 loc_1400044D3:                          ; CODE XREF: sub_140004314+29B↓j
.text:00000001400044D3                                         ; sub_140004314+2B6↓j ...
.text:00000001400044D3                 mov     rcx, cs:DeviceObject
.text:00000001400044DA                 mov     r8d, r15d
.text:00000001400044DD                 mov     dword ptr [rsp+50h+var_28], eax
.text:00000001400044E1                 mov     dl, 2
.text:00000001400044E3                 mov     [rsp+50h+Timeout], r12
.text:00000001400044E8                 mov     rcx, [rcx+40h]
.text:00000001400044EC                 call    sub_14000176C
.text:00000001400044F1                 jmp     loc_140004647
.text:00000001400044F6 ; ---------------------------------------------------------------------------
.text:00000001400044F6
.text:00000001400044F6 loc_1400044F6:                          ; CODE XREF: sub_140004314+1AA↑j
.text:00000001400044F6                 cmp     cs:off_14000D008, r14
.text:00000001400044FD                 jz      short loc_140004543
.text:00000001400044FF                 mov     rcx, cs:DeviceObject
.text:0000000140004506                 cmp     [rcx+48h], si
.text:000000014000450A                 jz      short loc_140004543
.text:000000014000450C                 mov     r9d, 4Fh ; 'O'
.text:0000000140004512                 jmp     short loc_140004530
.text:0000000140004514 ; ---------------------------------------------------------------------------
.text:0000000140004514
.text:0000000140004514 loc_140004514:                          ; CODE XREF: sub_140004314+1A3↑j
.text:0000000140004514                 cmp     cs:off_14000D008, r14
.text:000000014000451B                 jz      short loc_140004543
.text:000000014000451D                 mov     rcx, cs:DeviceObject
.text:0000000140004524                 cmp     [rcx+48h], si
.text:0000000140004528                 jz      short loc_140004543
.text:000000014000452A                 mov     r9d, 4Eh ; 'N'
.text:0000000140004530
.text:0000000140004530 loc_140004530:                          ; CODE XREF: sub_140004314+1FE↑j
.text:0000000140004530                 mov     rcx, [rcx+40h]
.text:0000000140004534                 mov     r8d, r15d
.text:0000000140004537                 mov     dl, 5
.text:0000000140004539                 mov     [rsp+50h+Timeout], r12
.text:000000014000453E                 call    sub_1400016A8
.text:0000000140004543
.text:0000000140004543 loc_140004543:                          ; CODE XREF: sub_140004314+1E9↑j
.text:0000000140004543                                         ; sub_140004314+1F6↑j ...
.text:0000000140004543                 lea     r9, [rbp+var_14]
.text:0000000140004547                 lea     r8, [rbp+var_18]
.text:000000014000454B                 lea     rdx, [rbp+var_1C]
.text:000000014000454F                 lea     rcx, [rbp+var_20]
.text:0000000140004553                 call    sub_1400057AC
.text:0000000140004558                 mov     ebx, eax
.text:000000014000455A                 test    eax, eax
.text:000000014000455C                 jns     short loc_1400045CF
.text:000000014000455E                 cmp     eax, 0C0000034h
.text:0000000140004563                 jnz     short loc_140004599
.text:0000000140004565                 cmp     cs:off_14000D008, r14
.text:000000014000456C                 jz      short loc_14000458E
.text:000000014000456E                 mov     rcx, cs:DeviceObject
.text:0000000140004575                 mov     r9d, 52h ; 'R'
.text:000000014000457B                 mov     r8d, r15d
.text:000000014000457E                 mov     [rsp+50h+Timeout], r12
.text:0000000140004583                 mov     dl, 2
.text:0000000140004585                 mov     rcx, [rcx+40h]
.text:0000000140004589                 call    sub_1400016A8
.text:000000014000458E
.text:000000014000458E loc_14000458E:                          ; CODE XREF: sub_140004314+258↑j
.text:000000014000458E                 mov     eax, esi
.text:0000000140004590                 mov     ecx, esi
.text:0000000140004592                 mov     edx, esi
.text:0000000140004594                 mov     r8d, esi
.text:0000000140004597                 jmp     short loc_1400045DC
.text:0000000140004599 ; ---------------------------------------------------------------------------
.text:0000000140004599
.text:0000000140004599 loc_140004599:                          ; CODE XREF: sub_140004314+24F↑j
.text:0000000140004599                 cmp     cs:off_14000D008, r14
.text:00000001400045A0                 jz      loc_14000467A
.text:00000001400045A6                 lfence
.text:00000001400045A9                 mov     r9d, 53h ; 'S'
.text:00000001400045AF                 jmp     loc_1400044D3
.text:00000001400045B4 ; ---------------------------------------------------------------------------
.text:00000001400045B4
.text:00000001400045B4 loc_1400045B4:                          ; CODE XREF: sub_140004314+101↑j
.text:00000001400045B4                 cmp     cs:off_14000D008, r14
.text:00000001400045BB                 jz      loc_14000467A
.text:00000001400045C1                 lfence
.text:00000001400045C4                 mov     r9d, 54h ; 'T'
.text:00000001400045CA                 jmp     loc_1400044D3
.text:00000001400045CF ; ---------------------------------------------------------------------------
.text:00000001400045CF
.text:00000001400045CF loc_1400045CF:                          ; CODE XREF: sub_140004314+F6↑j
.text:00000001400045CF                                         ; sub_140004314+248↑j
.text:00000001400045CF                 mov     eax, [rbp+var_20]
.text:00000001400045D2                 mov     ecx, [rbp+var_1C]
.text:00000001400045D5                 mov     edx, [rbp+var_18]
.text:00000001400045D8                 mov     r8d, [rbp+var_14]
.text:00000001400045DC
.text:00000001400045DC loc_1400045DC:                          ; CODE XREF: sub_140004314+283↑j
.text:00000001400045DC                 movzx   r9d, r8w        ; int
.text:00000001400045E0                 mov     [rsp+50h+Timeout], rdi ; DeviceDescription
.text:00000001400045E5                 movzx   r8d, dx         ; int
.text:00000001400045E9                 movzx   edx, cx         ; int
.text:00000001400045EC                 movzx   ecx, ax         ; int
.text:00000001400045EF                 call    sub_1400012E8
.text:00000001400045F4                 mov     ebx, eax
.text:00000001400045F6                 test    eax, eax
.text:00000001400045F8                 jns     short loc_140004611
.text:00000001400045FA                 cmp     cs:off_14000D008, r14
.text:0000000140004601                 jz      short loc_14000467A
.text:0000000140004603                 lfence
.text:0000000140004606                 mov     r9d, 56h ; 'V'
.text:000000014000460C                 jmp     loc_1400044D3
.text:0000000140004611 ; ---------------------------------------------------------------------------
.text:0000000140004611
.text:0000000140004611 loc_140004611:                          ; CODE XREF: sub_140004314+2E4↑j
.text:0000000140004611                 lfence
.text:0000000140004614                 mov     rcx, [rdi]
.text:0000000140004617                 lea     rdx, [rdi+48h]  ; Capabilities
.text:000000014000461B                 mov     [rdi+40h], rcx
.text:000000014000461F                 mov     rcx, [rcx+20h]  ; PreparsedData
.text:0000000140004623                 call    HidP_GetCaps
.text:0000000140004628                 mov     ebx, eax
.text:000000014000462A                 test    eax, eax
.text:000000014000462C                 jns     short loc_140004645
.text:000000014000462E                 cmp     cs:off_14000D008, r14
.text:0000000140004635                 jz      short loc_14000467A
.text:0000000140004637                 lfence
.text:000000014000463A                 mov     r9d, 57h ; 'W'
.text:0000000140004640                 jmp     loc_1400044D3
.text:0000000140004645 ; ---------------------------------------------------------------------------
.text:0000000140004645
.text:0000000140004645 loc_140004645:                          ; CODE XREF: sub_140004314+318↑j
.text:0000000140004645                 mov     ebx, esi
.text:0000000140004647
.text:0000000140004647 loc_140004647:                          ; CODE XREF: sub_140004314+1DD↑j
.text:0000000140004647                 cmp     cs:off_14000D008, r14
.text:000000014000464E                 jz      short loc_14000467A
.text:0000000140004650                 mov     rcx, cs:DeviceObject
.text:0000000140004657                 cmp     [rcx+48h], si
.text:000000014000465B                 jz      short loc_14000467A
.text:000000014000465D                 mov     rcx, [rcx+40h]
.text:0000000140004661                 mov     r9d, 58h ; 'X'
.text:0000000140004667                 mov     dword ptr [rsp+50h+var_28], ebx
.text:000000014000466B                 mov     r8d, r15d
.text:000000014000466E                 mov     dl, 5
.text:0000000140004670                 mov     [rsp+50h+Timeout], r12
.text:0000000140004675                 call    sub_14000176C
.text:000000014000467A
.text:000000014000467A loc_14000467A:                          ; CODE XREF: sub_140004314+1B3↑j
.text:000000014000467A                                         ; sub_140004314+28C↑j ...
.text:000000014000467A                 mov     eax, ebx
.text:000000014000467C                 mov     rcx, [rbp+var_8]
.text:0000000140004680                 xor     rcx, rsp        ; StackCookie
.text:0000000140004683                 call    __security_check_cookie
.text:0000000140004688                 lea     r11, [rsp+50h+var_s0]
.text:000000014000468D                 mov     rbx, [r11+38h]
.text:0000000140004691                 mov     rsi, [r11+40h]
.text:0000000140004695                 mov     rsp, r11
.text:0000000140004698                 pop     r15
.text:000000014000469A                 pop     r14
.text:000000014000469C                 pop     r12
.text:000000014000469E                 pop     rdi
.text:000000014000469F                 pop     rbp
.text:00000001400046A0                 retn
.text:00000001400046A0 ; } // starts at 140004314
.text:00000001400046A0 sub_140004314   endp
.text:00000001400046A0
.text:00000001400046A0 ; ---------------------------------------------------------------------------
.text:00000001400046A1 algn_1400046A1:                         ; DATA XREF: .pdata:000000014000E0F0↓o
.text:00000001400046A1                 align 4
.text:00000001400046A4
.text:00000001400046A4 ; =============== S U B R O U T I N E =======================================
.text:00000001400046A4
.text:00000001400046A4 ; Attributes: bp-based frame fpd=57h
.text:00000001400046A4
.text:00000001400046A4 ; __int64 __fastcall sub_1400046A4(__int64, __int64)
.text:00000001400046A4 sub_1400046A4   proc near               ; CODE XREF: sub_140002950+247↑p
.text:00000001400046A4                                         ; DATA XREF: .pdata:000000014000E0FC↓o
.text:00000001400046A4
.text:00000001400046A4 var_F0          = qword ptr -0F0h
.text:00000001400046A4 var_E8          = qword ptr -0E8h
.text:00000001400046A4 var_E0          = qword ptr -0E0h
.text:00000001400046A4 var_D0          = dword ptr -0D0h
.text:00000001400046A4 var_CC          = dword ptr -0CCh
.text:00000001400046A4 var_B0          = qword ptr -0B0h
.text:00000001400046A4 var_A8          = qword ptr -0A8h
.text:00000001400046A4 var_40          = qword ptr -40h
.text:00000001400046A4 arg_10          = qword ptr  20h
.text:00000001400046A4
.text:00000001400046A4 ; __unwind { // __GSHandlerCheck
.text:00000001400046A4                 mov     [rsp-8+arg_10], rbx
.text:00000001400046A9                 push    rbp
.text:00000001400046AA                 push    rsi
.text:00000001400046AB                 push    rdi
.text:00000001400046AC                 push    r12
.text:00000001400046AE                 push    r13
.text:00000001400046B0                 push    r14
.text:00000001400046B2                 push    r15
.text:00000001400046B4                 lea     rbp, [rsp-27h]
.text:00000001400046B9                 sub     rsp, 0E0h
.text:00000001400046C0                 mov     rax, cs:__security_cookie
.text:00000001400046C7                 xor     rax, rsp
.text:00000001400046CA                 mov     [rbp+57h+var_40], rax
.text:00000001400046CE                 xor     r12d, r12d
.text:00000001400046D1                 mov     r14, rdx
.text:00000001400046D4                 mov     [rsp+110h+var_E0], r12
.text:00000001400046D9                 mov     rdi, rcx
.text:00000001400046DC                 lea     r13, off_14000D008
.text:00000001400046E3                 cmp     cs:off_14000D008, r13
.text:00000001400046EA                 lea     r15, unk_14000B2C0
.text:00000001400046F1                 jz      short loc_14000471B
.text:00000001400046F3                 mov     rcx, cs:DeviceObject
.text:00000001400046FA                 cmp     [rcx+48h], r12w
.text:00000001400046FF                 jz      short loc_14000471B
.text:0000000140004701                 mov     rcx, [rcx+40h]
.text:0000000140004705                 lea     r9d, [r12+6Fh]
.text:000000014000470A                 lea     r8d, [r12+3]
.text:000000014000470F                 mov     [rsp+110h+var_F0], r15
.text:0000000140004714                 mov     dl, 5
.text:0000000140004716                 call    sub_1400016A8
.text:000000014000471B
.text:000000014000471B loc_14000471B:                          ; CODE XREF: sub_1400046A4+4D↑j
.text:000000014000471B                                         ; sub_1400046A4+5B↑j
.text:000000014000471B                 mov     rax, cs:qword_14000D388
.text:0000000140004722                 mov     rdx, rdi
.text:0000000140004725                 mov     r8, cs:off_14000D028
.text:000000014000472C                 mov     rcx, cs:qword_14000D390
.text:0000000140004733                 mov     rax, [rax+650h]
.text:000000014000473A                 call    cs:__guard_dispatch_icall_fptr
.text:0000000140004740                 mov     rcx, cs:qword_14000D388
.text:0000000140004747                 lea     r9, [rsp+110h+var_E0]
.text:000000014000474C                 mov     rsi, rax
.text:000000014000474F                 xor     r8d, r8d
.text:0000000140004752                 mov     rdx, rdi
.text:0000000140004755                 mov     rax, [rcx+538h]
.text:000000014000475C                 mov     rcx, cs:qword_14000D390
.text:0000000140004763                 call    cs:__guard_dispatch_icall_fptr
.text:0000000140004769                 mov     ebx, eax
.text:000000014000476B                 test    eax, eax
.text:000000014000476D                 jns     short loc_1400047B0
.text:000000014000476F                 mov     [rsp+110h+var_E0], r12
.text:0000000140004774                 cmp     cs:off_14000D008, r13
.text:000000014000477B                 jz      loc_14000492D
.text:0000000140004781                 mov     r9d, 70h ; 'p'
.text:0000000140004787
.text:0000000140004787 loc_140004787:                          ; CODE XREF: sub_1400046A4+195↓j
.text:0000000140004787                                         ; sub_1400046A4+1F7↓j
.text:0000000140004787                 lfence
.text:000000014000478A                 mov     rcx, cs:DeviceObject
.text:0000000140004791                 mov     r8d, 3
.text:0000000140004797                 mov     dword ptr [rsp+110h+var_E8], eax
.text:000000014000479B                 mov     dl, 2
.text:000000014000479D                 mov     [rsp+110h+var_F0], r15
.text:00000001400047A2                 mov     rcx, [rcx+40h]
.text:00000001400047A6                 call    sub_14000176C
.text:00000001400047AB                 jmp     loc_1400048AE
.text:00000001400047B0 ; ---------------------------------------------------------------------------
.text:00000001400047B0
.text:00000001400047B0 loc_1400047B0:                          ; CODE XREF: sub_1400046A4+C9↑j
.text:00000001400047B0                 lfence
.text:00000001400047B3                 mov     rax, cs:qword_14000D388
.text:00000001400047BA                 mov     rdx, rdi
.text:00000001400047BD                 mov     rcx, cs:qword_14000D390
.text:00000001400047C4                 mov     rax, [rax+100h]
.text:00000001400047CB                 call    cs:__guard_dispatch_icall_fptr
.text:00000001400047D1                 mov     r15d, 88h
.text:00000001400047D7                 lea     rcx, [rbp+57h+var_D0]
.text:00000001400047DB                 mov     r8d, r15d
.text:00000001400047DE                 xor     edx, edx
.text:00000001400047E0                 mov     rbx, rax
.text:00000001400047E3                 call    sub_14000A4C0
.text:00000001400047E8                 mov     rax, cs:qword_14000D388
.text:00000001400047EF                 lea     r8, [rbp+57h+var_D0]
.text:00000001400047F3                 mov     rdx, [rsp+110h+var_E0]
.text:00000001400047F8                 mov     rcx, cs:qword_14000D390
.text:00000001400047FF                 mov     [rbp+57h+var_D0], r15d
.text:0000000140004803                 mov     [rbp+57h+var_CC], 1
.text:000000014000480A                 mov     [rbp+57h+var_B0], rbx
.text:000000014000480E                 mov     [rbp+57h+var_A8], r14
.text:0000000140004812                 mov     rax, [rax+540h]
.text:0000000140004819                 call    cs:__guard_dispatch_icall_fptr
.text:000000014000481F                 mov     ebx, eax
.text:0000000140004821                 test    eax, eax
.text:0000000140004823                 jns     short loc_14000483E
.text:0000000140004825                 cmp     cs:off_14000D008, r13
.text:000000014000482C                 jz      short loc_1400048A0
.text:000000014000482E                 lea     r9d, [r15-17h]
.text:0000000140004832                 lea     r15, unk_14000B2C0
.text:0000000140004839                 jmp     loc_140004787
.text:000000014000483E ; ---------------------------------------------------------------------------
.text:000000014000483E
.text:000000014000483E loc_14000483E:                          ; CODE XREF: sub_1400046A4+17F↑j
.text:000000014000483E                 lfence
.text:0000000140004841                 cmp     cs:off_14000D008, r13
.text:0000000140004848                 lea     r15, unk_14000B2C0
.text:000000014000484F                 jz      short loc_140004872
.text:0000000140004851                 mov     rcx, cs:DeviceObject
.text:0000000140004858                 mov     r9d, 72h ; 'r'
.text:000000014000485E                 mov     dl, 4
.text:0000000140004860                 mov     [rsp+110h+var_F0], r15
.text:0000000140004865                 mov     rcx, [rcx+40h]
.text:0000000140004869                 lea     r8d, [r9-6Fh]
.text:000000014000486D                 call    sub_1400016A8
.text:0000000140004872
.text:0000000140004872 loc_140004872:                          ; CODE XREF: sub_1400046A4+1AB↑j
.text:0000000140004872                 mov     rdx, [rsp+110h+var_E0]
.text:0000000140004877                 lea     r8, [rsi+128h]
.text:000000014000487E                 mov     rcx, rdi
.text:0000000140004881                 call    sub_140004E78
.text:0000000140004886                 mov     ebx, eax
.text:0000000140004888                 test    eax, eax
.text:000000014000488A                 jns     short loc_1400048A9
.text:000000014000488C                 cmp     cs:off_14000D008, r13
.text:0000000140004893                 jz      short loc_1400048A0
.text:0000000140004895                 mov     r9d, 73h ; 's'
.text:000000014000489B                 jmp     loc_140004787
.text:00000001400048A0 ; ---------------------------------------------------------------------------
.text:00000001400048A0
.text:00000001400048A0 loc_1400048A0:                          ; CODE XREF: sub_1400046A4+188↑j
.text:00000001400048A0                                         ; sub_1400046A4+1EF↑j
.text:00000001400048A0                 lea     r15, unk_14000B2C0
.text:00000001400048A7                 jmp     short loc_1400048AE
.text:00000001400048A9 ; ---------------------------------------------------------------------------
.text:00000001400048A9
.text:00000001400048A9 loc_1400048A9:                          ; CODE XREF: sub_1400046A4+1E6↑j
.text:00000001400048A9                 mov     [rsp+110h+var_E0], r12
.text:00000001400048AE
.text:00000001400048AE loc_1400048AE:                          ; CODE XREF: sub_1400046A4+107↑j
.text:00000001400048AE                                         ; sub_1400046A4+203↑j
.text:00000001400048AE                 mov     rdx, [rsp+110h+var_E0]
.text:00000001400048B3                 test    rdx, rdx
.text:00000001400048B6                 jz      short loc_1400048F8
.text:00000001400048B8                 mov     rax, cs:qword_14000D388
.text:00000001400048BF                 mov     rcx, cs:qword_14000D390
.text:00000001400048C6                 mov     rax, [rax+550h]
.text:00000001400048CD                 call    cs:__guard_dispatch_icall_fptr
.text:00000001400048D3                 mov     rax, cs:qword_14000D388
.text:00000001400048DA                 mov     rdx, [rsp+110h+var_E0]
.text:00000001400048DF                 mov     rcx, cs:qword_14000D390
.text:00000001400048E6                 mov     rax, [rax+680h]
.text:00000001400048ED                 call    cs:__guard_dispatch_icall_fptr
.text:00000001400048F3                 mov     [rsp+110h+var_E0], r12
.text:00000001400048F8
.text:00000001400048F8 loc_1400048F8:                          ; CODE XREF: sub_1400046A4+212↑j
.text:00000001400048F8                 cmp     cs:off_14000D008, r13
.text:00000001400048FF                 jz      short loc_14000492D
.text:0000000140004901                 mov     rcx, cs:DeviceObject
.text:0000000140004908                 cmp     [rcx+48h], r12w
.text:000000014000490D                 jz      short loc_14000492D
.text:000000014000490F                 mov     rcx, [rcx+40h]
.text:0000000140004913                 mov     r9d, 74h ; 't'
.text:0000000140004919                 mov     dword ptr [rsp+110h+var_E8], ebx
.text:000000014000491D                 mov     dl, 5
.text:000000014000491F                 mov     [rsp+110h+var_F0], r15
.text:0000000140004924                 lea     r8d, [r9-71h]
.text:0000000140004928                 call    sub_14000176C
.text:000000014000492D
.text:000000014000492D loc_14000492D:                          ; CODE XREF: sub_1400046A4+D7↑j
.text:000000014000492D                                         ; sub_1400046A4+25B↑j ...
.text:000000014000492D                 mov     eax, ebx
.text:000000014000492F                 mov     rcx, [rbp+57h+var_40]
.text:0000000140004933                 xor     rcx, rsp        ; StackCookie
.text:0000000140004936                 call    __security_check_cookie
.text:000000014000493B                 mov     rbx, [rsp+110h+arg_10]
.text:0000000140004943                 add     rsp, 0E0h
.text:000000014000494A                 pop     r15
.text:000000014000494C                 pop     r14
.text:000000014000494E                 pop     r13
.text:0000000140004950                 pop     r12
.text:0000000140004952                 pop     rdi
.text:0000000140004953                 pop     rsi
.text:0000000140004954                 pop     rbp
.text:0000000140004955                 retn
.text:0000000140004955 ; } // starts at 1400046A4
.text:0000000140004955 sub_1400046A4   endp
.text:0000000140004955
.text:0000000140004955 ; ---------------------------------------------------------------------------
.text:0000000140004956 algn_140004956:                         ; DATA XREF: .pdata:000000014000E0FC↓o
.text:0000000140004956                 align 8
.text:0000000140004958
.text:0000000140004958 ; =============== S U B R O U T I N E =======================================
.text:0000000140004958
.text:0000000140004958 ; Attributes: bp-based frame fpd=90h
.text:0000000140004958
.text:0000000140004958 ; __int64 __fastcall sub_140004958(__int64, __int128 *, __int64)
.text:0000000140004958 sub_140004958   proc near               ; CODE XREF: CallbackRoutine+33D↑p
.text:0000000140004958                                         ; DATA XREF: .pdata:000000014000E108↓o
.text:0000000140004958
.text:0000000140004958 ValueCaps       = qword ptr -170h
.text:0000000140004958 ValueCapsLength = qword ptr -168h
.text:0000000140004958 PreparsedData   = qword ptr -160h
.text:0000000140004958 var_158         = dword ptr -158h
.text:0000000140004958 var_150         = dword ptr -150h
.text:0000000140004958 var_140         = qword ptr -140h
.text:0000000140004958 var_138         = qword ptr -138h
.text:0000000140004958 var_130         = dword ptr -130h
.text:0000000140004958 var_12C         = dword ptr -12Ch
.text:0000000140004958 var_118         = qword ptr -118h
.text:0000000140004958 var_100         = xmmword ptr -100h
.text:0000000140004958 var_F0          = dword ptr -0F0h
.text:0000000140004958 var_EC          = dword ptr -0ECh
.text:0000000140004958 var_E0          = dword ptr -0E0h
.text:0000000140004958 var_A0          = word ptr -0A0h
.text:0000000140004958 var_90          = _HIDP_VALUE_CAPS ptr -90h
.text:0000000140004958 var_40          = qword ptr -40h
.text:0000000140004958 arg_8           = qword ptr  18h
.text:0000000140004958
.text:0000000140004958 ; __unwind { // __GSHandlerCheck
.text:0000000140004958                 mov     [rsp-8+arg_8], rbx
.text:000000014000495D                 push    rbp
.text:000000014000495E                 push    rsi
.text:000000014000495F                 push    rdi
.text:0000000140004960                 push    r12
.text:0000000140004962                 push    r13
.text:0000000140004964                 push    r14
.text:0000000140004966                 push    r15
.text:0000000140004968                 lea     rbp, [rsp-60h]
.text:000000014000496D                 sub     rsp, 160h
.text:0000000140004974                 mov     rax, cs:__security_cookie
.text:000000014000497B                 xor     rax, rsp
.text:000000014000497E                 mov     [rbp+90h+var_40], rax
.text:0000000140004982                 xor     r14d, r14d
.text:0000000140004985                 mov     [rsp+190h+var_140], rdx
.text:000000014000498A                 mov     rdi, r8
.text:000000014000498D                 mov     [rsp+190h+var_138], r14
.text:0000000140004992                 mov     r12, rcx
.text:0000000140004995                 lea     ebx, [r14+1]
.text:0000000140004999                 mov     [rbp+90h+var_A0], bx
.text:000000014000499D                 lea     rsi, off_14000D008
.text:00000001400049A4                 cmp     cs:off_14000D008, rsi
.text:00000001400049AB                 lea     r15, unk_14000B2C0
.text:00000001400049B2                 jz      short loc_1400049DC
.text:00000001400049B4                 mov     rcx, cs:DeviceObject
.text:00000001400049BB                 cmp     [rcx+48h], r14w
.text:00000001400049C0                 jz      short loc_1400049DC
.text:00000001400049C2                 mov     rcx, [rcx+40h]
.text:00000001400049C6                 lea     r8d, [r14+3]
.text:00000001400049CA                 mov     r9d, 92h
.text:00000001400049D0                 mov     [rsp+190h+ValueCaps], r15
.text:00000001400049D5                 mov     dl, 5
.text:00000001400049D7                 call    sub_1400016A8
.text:00000001400049DC
.text:00000001400049DC loc_1400049DC:                          ; CODE XREF: sub_140004958+5A↑j
.text:00000001400049DC                                         ; sub_140004958+68↑j
.text:00000001400049DC                 mov     rax, cs:qword_14000D388
.text:00000001400049E3                 mov     rdx, r12
.text:00000001400049E6                 mov     r8, cs:off_14000D028
.text:00000001400049ED                 mov     rcx, cs:qword_14000D390
.text:00000001400049F4                 mov     rax, [rax+650h]
.text:00000001400049FB                 call    cs:__guard_dispatch_icall_fptr
.text:0000000140004A01                 xor     edx, edx
.text:0000000140004A03                 lea     rcx, [rbp+90h+var_90]
.text:0000000140004A07                 mov     r13, rax
.text:0000000140004A0A                 lea     r8d, [rdx+48h]
.text:0000000140004A0E                 call    sub_14000A4C0
.text:0000000140004A13                 mov     rcx, [rdi+18h]
.text:0000000140004A17                 lea     rax, [rbp+90h+var_A0]
.text:0000000140004A1B                 mov     [rsp+190h+PreparsedData], rcx ; PreparsedData
.text:0000000140004A20                 mov     r9d, 30h ; '0'  ; Usage
.text:0000000140004A26                 mov     [rsp+190h+ValueCapsLength], rax ; ValueCapsLength
.text:0000000140004A2B                 xor     r8d, r8d        ; LinkCollection
.text:0000000140004A2E                 lea     rax, [rbp+90h+var_90]
.text:0000000140004A32                 mov     edx, ebx        ; UsagePage
.text:0000000140004A34                 xor     ecx, ecx        ; ReportType
.text:0000000140004A36                 mov     [rsp+190h+ValueCaps], rax ; ValueCaps
.text:0000000140004A3B                 call    HidP_GetSpecificValueCaps
.text:0000000140004A40                 mov     ebx, eax
.text:0000000140004A42                 test    eax, eax
.text:0000000140004A44                 jns     short loc_140004A82
.text:0000000140004A46                 cmp     cs:off_14000D008, rsi
.text:0000000140004A4D                 jz      loc_140004DC8
.text:0000000140004A53                 mov     r9d, 93h
.text:0000000140004A59
.text:0000000140004A59 loc_140004A59:                          ; CODE XREF: sub_140004958+22C↓j
.text:0000000140004A59                                         ; sub_140004958+267↓j ...
.text:0000000140004A59                 mov     dword ptr [rsp+190h+ValueCapsLength], eax
.text:0000000140004A5D
.text:0000000140004A5D loc_140004A5D:                          ; CODE XREF: sub_140004958+196↓j
.text:0000000140004A5D                 lfence
.text:0000000140004A60                 mov     rcx, cs:DeviceObject
.text:0000000140004A67                 mov     r8d, 3
.text:0000000140004A6D                 mov     dl, 2
.text:0000000140004A6F                 mov     [rsp+190h+ValueCaps], r15
.text:0000000140004A74                 mov     rcx, [rcx+40h]
.text:0000000140004A78                 call    sub_14000176C
.text:0000000140004A7D                 jmp     loc_140004DC8
.text:0000000140004A82 ; ---------------------------------------------------------------------------
.text:0000000140004A82
.text:0000000140004A82 loc_140004A82:                          ; CODE XREF: sub_140004958+EC↑j
.text:0000000140004A82                 mov     r14d, [rbp+90h+var_90.PhysicalMax]
.text:0000000140004A86                 lea     rcx, [rbp+90h+var_90]
.text:0000000140004A8A                 mov     r15d, [rbp+90h+var_90.LogicalMax]
.text:0000000140004A8E                 xor     edx, edx
.text:0000000140004A90                 lea     r8d, [rdx+48h]
.text:0000000140004A94                 call    sub_14000A4C0
.text:0000000140004A99                 mov     rax, [rdi+18h]
.text:0000000140004A9D                 mov     r9d, 31h ; '1'  ; Usage
.text:0000000140004AA3                 mov     [rsp+190h+PreparsedData], rax ; PreparsedData
.text:0000000140004AA8                 xor     r8d, r8d        ; LinkCollection
.text:0000000140004AAB                 lea     rax, [rbp+90h+var_A0]
.text:0000000140004AAF                 xor     ecx, ecx        ; ReportType
.text:0000000140004AB1                 mov     [rsp+190h+ValueCapsLength], rax ; ValueCapsLength
.text:0000000140004AB6                 lea     rax, [rbp+90h+var_90]
.text:0000000140004ABA                 lea     edx, [r9-30h]   ; UsagePage
.text:0000000140004ABE                 mov     [rsp+190h+ValueCaps], rax ; ValueCaps
.text:0000000140004AC3                 call    HidP_GetSpecificValueCaps
.text:0000000140004AC8                 mov     ebx, eax
.text:0000000140004ACA                 xor     eax, eax
.text:0000000140004ACC                 test    ebx, ebx
.text:0000000140004ACE                 jns     short loc_140004AF3
.text:0000000140004AD0                 cmp     cs:off_14000D008, rsi
.text:0000000140004AD7                 lea     r15, unk_14000B2C0
.text:0000000140004ADE                 jz      loc_140004DC8
.text:0000000140004AE4                 mov     r9d, 94h
.text:0000000140004AEA                 mov     dword ptr [rsp+190h+ValueCapsLength], ebx
.text:0000000140004AEE                 jmp     loc_140004A5D
.text:0000000140004AF3 ; ---------------------------------------------------------------------------
.text:0000000140004AF3
.text:0000000140004AF3 loc_140004AF3:                          ; CODE XREF: sub_140004958+176↑j
.text:0000000140004AF3                 mov     edi, [rbp+90h+var_90.PhysicalMax]
.text:0000000140004AF6                 mov     esi, [rbp+90h+var_90.LogicalMax]
.text:0000000140004AF9                 lea     rcx, off_14000D008
.text:0000000140004B00                 cmp     cs:off_14000D008, rcx
.text:0000000140004B07                 jz      short loc_140004B4B
.text:0000000140004B09                 mov     rcx, cs:DeviceObject
.text:0000000140004B10                 cmp     [rcx+48h], ax
.text:0000000140004B14                 jz      short loc_140004B4B
.text:0000000140004B16                 mov     rcx, [rcx+40h]
.text:0000000140004B1A                 lea     rax, unk_14000B2C0
.text:0000000140004B21                 mov     [rsp+190h+var_150], esi
.text:0000000140004B25                 mov     r9d, 95h
.text:0000000140004B2B                 mov     [rsp+190h+var_158], edi
.text:0000000140004B2F                 mov     r8d, 3
.text:0000000140004B35                 mov     dword ptr [rsp+190h+PreparsedData], r15d
.text:0000000140004B3A                 mov     dl, 5
.text:0000000140004B3C                 mov     dword ptr [rsp+190h+ValueCapsLength], r14d
.text:0000000140004B41                 mov     [rsp+190h+ValueCaps], rax
.text:0000000140004B46                 call    sub_140005B40
.text:0000000140004B4B
.text:0000000140004B4B loc_140004B4B:                          ; CODE XREF: sub_140004958+1AF↑j
.text:0000000140004B4B                                         ; sub_140004958+1BC↑j
.text:0000000140004B4B                 mov     edx, r14d
.text:0000000140004B4E                 lea     rcx, word_14000B1F0
.text:0000000140004B55                 call    sub_140005350
.text:0000000140004B5A                 xor     r14d, r14d
.text:0000000140004B5D                 mov     ebx, eax
.text:0000000140004B5F                 test    eax, eax
.text:0000000140004B61                 jns     short loc_140004B89
.text:0000000140004B63                 lea     rsi, off_14000D008
.text:0000000140004B6A                 cmp     cs:off_14000D008, rsi
.text:0000000140004B71                 lea     r15, unk_14000B2C0
.text:0000000140004B78                 jz      loc_140004DC8
.text:0000000140004B7E                 mov     r9d, 96h
.text:0000000140004B84                 jmp     loc_140004A59
.text:0000000140004B89 ; ---------------------------------------------------------------------------
.text:0000000140004B89
.text:0000000140004B89 loc_140004B89:                          ; CODE XREF: sub_140004958+209↑j
.text:0000000140004B89                 mov     edx, r15d
.text:0000000140004B8C                 lea     rcx, word_14000B218
.text:0000000140004B93                 call    sub_140005350
.text:0000000140004B98                 mov     ebx, eax
.text:0000000140004B9A                 test    eax, eax
.text:0000000140004B9C                 jns     short loc_140004BC4
.text:0000000140004B9E                 lea     rsi, off_14000D008
.text:0000000140004BA5                 cmp     cs:off_14000D008, rsi
.text:0000000140004BAC                 lea     r15, unk_14000B2C0
.text:0000000140004BB3                 jz      loc_140004DC8
.text:0000000140004BB9                 mov     r9d, 97h
.text:0000000140004BBF                 jmp     loc_140004A59
.text:0000000140004BC4 ; ---------------------------------------------------------------------------
.text:0000000140004BC4
.text:0000000140004BC4 loc_140004BC4:                          ; CODE XREF: sub_140004958+244↑j
.text:0000000140004BC4                 mov     edx, edi
.text:0000000140004BC6                 lea     rcx, word_14000B248
.text:0000000140004BCD                 call    sub_140005350
.text:0000000140004BD2                 mov     ebx, eax
.text:0000000140004BD4                 test    eax, eax
.text:0000000140004BD6                 jns     short loc_140004BFE
.text:0000000140004BD8                 lea     rsi, off_14000D008
.text:0000000140004BDF                 cmp     cs:off_14000D008, rsi
.text:0000000140004BE6                 lea     r15, unk_14000B2C0
.text:0000000140004BED                 jz      loc_140004DC8
.text:0000000140004BF3                 mov     r9d, 98h
.text:0000000140004BF9                 jmp     loc_140004A59
.text:0000000140004BFE ; ---------------------------------------------------------------------------
.text:0000000140004BFE
.text:0000000140004BFE loc_140004BFE:                          ; CODE XREF: sub_140004958+27E↑j
.text:0000000140004BFE                 mov     edx, esi
.text:0000000140004C00                 lea     rcx, word_14000B270
.text:0000000140004C07                 call    sub_140005350
.text:0000000140004C0C                 mov     ebx, eax
.text:0000000140004C0E                 test    eax, eax
.text:0000000140004C10                 jns     short loc_140004C38
.text:0000000140004C12                 lea     rsi, off_14000D008
.text:0000000140004C19                 cmp     cs:off_14000D008, rsi
.text:0000000140004C20                 lea     r15, unk_14000B2C0
.text:0000000140004C27                 jz      loc_140004DC8
.text:0000000140004C2D                 mov     r9d, 99h
.text:0000000140004C33                 jmp     loc_140004A59
.text:0000000140004C38 ; ---------------------------------------------------------------------------
.text:0000000140004C38
.text:0000000140004C38 loc_140004C38:                          ; CODE XREF: sub_140004958+2B8↑j
.text:0000000140004C38                 lea     rcx, [r13+0F8h] ; Event
.text:0000000140004C3F                 xor     r8d, r8d        ; Wait
.text:0000000140004C42                 xor     edx, edx        ; Increment
.text:0000000140004C44                 call    cs:KeSetEvent
.text:0000000140004C4A                 lea     rsi, off_14000D008
.text:0000000140004C51                 cmp     cs:off_14000D008, rsi
.text:0000000140004C58                 lea     r15, unk_14000B2C0
.text:0000000140004C5F                 jz      short loc_140004C8B
.text:0000000140004C61                 mov     rcx, cs:DeviceObject
.text:0000000140004C68                 cmp     [rcx+48h], r14w
.text:0000000140004C6D                 jz      short loc_140004C8B
.text:0000000140004C6F                 mov     rcx, [rcx+40h]
.text:0000000140004C73                 mov     r9d, 9Ah
.text:0000000140004C79                 mov     r8d, 3
.text:0000000140004C7F                 mov     [rsp+190h+ValueCaps], r15
.text:0000000140004C84                 mov     dl, 5
.text:0000000140004C86                 call    sub_1400016A8
.text:0000000140004C8B
.text:0000000140004C8B loc_140004C8B:                          ; CODE XREF: sub_140004958+307↑j
.text:0000000140004C8B                                         ; sub_140004958+315↑j
.text:0000000140004C8B                 mov     rax, cs:qword_14000D388
.text:0000000140004C92                 lea     r9, [rsp+190h+var_138]
.text:0000000140004C97                 mov     rcx, cs:qword_14000D390
.text:0000000140004C9E                 xor     r8d, r8d
.text:0000000140004CA1                 mov     rdx, r12
.text:0000000140004CA4                 mov     rax, [rax+538h]
.text:0000000140004CAB                 call    cs:__guard_dispatch_icall_fptr
.text:0000000140004CB1                 mov     ebx, eax
.text:0000000140004CB3                 test    eax, eax
.text:0000000140004CB5                 jns     short loc_140004CD4
.text:0000000140004CB7                 mov     [rsp+190h+var_138], r14
.text:0000000140004CBC                 cmp     cs:off_14000D008, rsi
.text:0000000140004CC3                 jz      loc_140004DC8
.text:0000000140004CC9                 mov     r9d, 9Bh
.text:0000000140004CCF                 jmp     loc_140004A59
.text:0000000140004CD4 ; ---------------------------------------------------------------------------
.text:0000000140004CD4
.text:0000000140004CD4 loc_140004CD4:                          ; CODE XREF: sub_140004958+35D↑j
.text:0000000140004CD4                 mov     ebx, 88h
.text:0000000140004CD9                 lea     rcx, [rsp+190h+var_130]
.text:0000000140004CDE                 mov     r8d, ebx
.text:0000000140004CE1                 xor     edx, edx
.text:0000000140004CE3                 call    sub_14000A4C0
.text:0000000140004CE8                 mov     rax, [rsp+190h+var_140]
.text:0000000140004CED                 lea     r8, [rsp+190h+var_130]
.text:0000000140004CF2                 mov     rdx, [rsp+190h+var_138]
.text:0000000140004CF7                 mov     rcx, cs:qword_14000D390
.text:0000000140004CFE                 mov     [rsp+190h+var_130], ebx
.text:0000000140004D02                 movups  xmm0, xmmword ptr [rax]
.text:0000000140004D05                 lea     rax, sub_140002830
.text:0000000140004D0C                 mov     [rsp+190h+var_12C], 2
.text:0000000140004D14                 mov     [rsp+190h+var_118], rax
.text:0000000140004D19                 mov     rax, cs:qword_14000D388
.text:0000000140004D20                 movdqu  [rbp+90h+var_100], xmm0
.text:0000000140004D25                 mov     [rbp+90h+var_F0], 80000000h
.text:0000000140004D2C                 mov     [rbp+90h+var_E0], 40h ; '@'
.text:0000000140004D33                 mov     [rbp+90h+var_EC], 7
.text:0000000140004D3A                 mov     rax, [rax+540h]
.text:0000000140004D41                 call    cs:__guard_dispatch_icall_fptr
.text:0000000140004D47                 mov     ebx, eax
.text:0000000140004D49                 test    eax, eax
.text:0000000140004D4B                 jns     short loc_140004D66
.text:0000000140004D4D                 mov     [rsp+190h+var_138], r14
.text:0000000140004D52                 cmp     cs:off_14000D008, rsi
.text:0000000140004D59                 jz      short loc_140004DC8
.text:0000000140004D5B                 mov     r9d, 9Ch
.text:0000000140004D61                 jmp     loc_140004A59
.text:0000000140004D66 ; ---------------------------------------------------------------------------
.text:0000000140004D66
.text:0000000140004D66 loc_140004D66:                          ; CODE XREF: sub_140004958+3F3↑j
.text:0000000140004D66                 lfence
.text:0000000140004D69                 cmp     cs:off_14000D008, rsi
.text:0000000140004D70                 jz      short loc_140004D95
.text:0000000140004D72                 mov     rcx, cs:DeviceObject
.text:0000000140004D79                 mov     r9d, 9Dh
.text:0000000140004D7F                 mov     r8d, 3
.text:0000000140004D85                 mov     [rsp+190h+ValueCaps], r15
.text:0000000140004D8A                 mov     dl, 4
.text:0000000140004D8C                 mov     rcx, [rcx+40h]
.text:0000000140004D90                 call    sub_1400016A8
.text:0000000140004D95
.text:0000000140004D95 loc_140004D95:                          ; CODE XREF: sub_140004958+418↑j
.text:0000000140004D95                 mov     rdx, [rsp+190h+var_138]
.text:0000000140004D9A                 lea     r8, [r13+1C8h]
.text:0000000140004DA1                 mov     rcx, r12
.text:0000000140004DA4                 call    sub_140004E78
.text:0000000140004DA9                 mov     ebx, eax
.text:0000000140004DAB                 test    eax, eax
.text:0000000140004DAD                 jns     short loc_140004DC3
.text:0000000140004DAF                 cmp     cs:off_14000D008, rsi
.text:0000000140004DB6                 jz      short loc_140004DC8
.text:0000000140004DB8                 mov     r9d, 9Eh
.text:0000000140004DBE                 jmp     loc_140004A59
.text:0000000140004DC3 ; ---------------------------------------------------------------------------
.text:0000000140004DC3
.text:0000000140004DC3 loc_140004DC3:                          ; CODE XREF: sub_140004958+455↑j
.text:0000000140004DC3                 mov     [rsp+190h+var_138], r14
.text:0000000140004DC8
.text:0000000140004DC8 loc_140004DC8:                          ; CODE XREF: sub_140004958+F5↑j
.text:0000000140004DC8                                         ; sub_140004958+125↑j ...
.text:0000000140004DC8                 xor     edi, edi
.text:0000000140004DCA                 test    ebx, ebx
.text:0000000140004DCC                 jns     short loc_140004E18
.text:0000000140004DCE                 mov     rdx, [rsp+190h+var_138]
.text:0000000140004DD3                 test    rdx, rdx
.text:0000000140004DD6                 jz      short loc_140004E18
.text:0000000140004DD8                 mov     rax, cs:qword_14000D388
.text:0000000140004DDF                 mov     rcx, cs:qword_14000D390
.text:0000000140004DE6                 mov     rax, [rax+550h]
.text:0000000140004DED                 call    cs:__guard_dispatch_icall_fptr
.text:0000000140004DF3                 mov     rax, cs:qword_14000D388
.text:0000000140004DFA                 mov     rdx, [rsp+190h+var_138]
.text:0000000140004DFF                 mov     rcx, cs:qword_14000D390
.text:0000000140004E06                 mov     rax, [rax+680h]
.text:0000000140004E0D                 call    cs:__guard_dispatch_icall_fptr
.text:0000000140004E13                 mov     [rsp+190h+var_138], rdi
.text:0000000140004E18
.text:0000000140004E18 loc_140004E18:                          ; CODE XREF: sub_140004958+474↑j
.text:0000000140004E18                                         ; sub_140004958+47E↑j
.text:0000000140004E18                 cmp     cs:off_14000D008, rsi
.text:0000000140004E1F                 jz      short loc_140004E4E
.text:0000000140004E21                 mov     rcx, cs:DeviceObject
.text:0000000140004E28                 cmp     [rcx+48h], di
.text:0000000140004E2C                 jz      short loc_140004E4E
.text:0000000140004E2E                 mov     rcx, [rcx+40h]
.text:0000000140004E32                 mov     r9d, 9Fh
.text:0000000140004E38                 mov     dword ptr [rsp+190h+ValueCapsLength], ebx
.text:0000000140004E3C                 mov     r8d, 3
.text:0000000140004E42                 mov     dl, 5
.text:0000000140004E44                 mov     [rsp+190h+ValueCaps], r15
.text:0000000140004E49                 call    sub_14000176C
.text:0000000140004E4E
.text:0000000140004E4E loc_140004E4E:                          ; CODE XREF: sub_140004958+4C7↑j
.text:0000000140004E4E                                         ; sub_140004958+4D4↑j
.text:0000000140004E4E                 mov     eax, ebx
.text:0000000140004E50                 mov     rcx, [rbp+90h+var_40]
.text:0000000140004E54                 xor     rcx, rsp        ; StackCookie
.text:0000000140004E57                 call    __security_check_cookie
.text:0000000140004E5C                 mov     rbx, [rsp+190h+arg_8]
.text:0000000140004E64                 add     rsp, 160h
.text:0000000140004E6B                 pop     r15
.text:0000000140004E6D                 pop     r14
.text:0000000140004E6F                 pop     r13
.text:0000000140004E71                 pop     r12
.text:0000000140004E73                 pop     rdi
.text:0000000140004E74                 pop     rsi
.text:0000000140004E75                 pop     rbp
.text:0000000140004E76                 retn
.text:0000000140004E76 ; } // starts at 140004958
.text:0000000140004E76 sub_140004958   endp
.text:0000000140004E76
.text:0000000140004E76 ; ---------------------------------------------------------------------------
.text:0000000140004E77 algn_140004E77:                         ; DATA XREF: .pdata:000000014000E108↓o
.text:0000000140004E77                 align 8
.text:0000000140004E78
.text:0000000140004E78 ; =============== S U B R O U T I N E =======================================
.text:0000000140004E78
.text:0000000140004E78 ; Attributes: bp-based frame fpd=57h
.text:0000000140004E78
.text:0000000140004E78 ; __int64 __fastcall sub_140004E78(__int64, unsigned __int64, __int64)
.text:0000000140004E78 sub_140004E78   proc near               ; CODE XREF: sub_1400046A4+1DD↑p
.text:0000000140004E78                                         ; sub_140004958+44C↑p
.text:0000000140004E78                                         ; DATA XREF: ...
.text:0000000140004E78
.text:0000000140004E78 var_100         = qword ptr -100h
.text:0000000140004E78 var_F8          = qword ptr -0F8h
.text:0000000140004E78 var_F0          = qword ptr -0F0h
.text:0000000140004E78 var_E0          = xmmword ptr -0E0h
.text:0000000140004E78 var_D0          = xmmword ptr -0D0h
.text:0000000140004E78 var_C0          = xmmword ptr -0C0h
.text:0000000140004E78 var_B0          = qword ptr -0B0h
.text:0000000140004E78 var_A0          = xmmword ptr -0A0h
.text:0000000140004E78 var_90          = xmmword ptr -90h
.text:0000000140004E78 var_80          = xmmword ptr -80h
.text:0000000140004E78 var_70          = xmmword ptr -70h
.text:0000000140004E78 var_60          = xmmword ptr -60h
.text:0000000140004E78 var_50          = xmmword ptr -50h
.text:0000000140004E78 var_40          = qword ptr -40h
.text:0000000140004E78 arg_18          = qword ptr  28h
.text:0000000140004E78
.text:0000000140004E78 ; __unwind { // __GSHandlerCheck
.text:0000000140004E78                 mov     [rsp-8+arg_18], rbx
.text:0000000140004E7D                 push    rbp
.text:0000000140004E7E                 push    rsi
.text:0000000140004E7F                 push    rdi
.text:0000000140004E80                 push    r12
.text:0000000140004E82                 push    r13
.text:0000000140004E84                 push    r14
.text:0000000140004E86                 push    r15
.text:0000000140004E88                 lea     rbp, [rsp-27h]
.text:0000000140004E8D                 sub     rsp, 0F0h
.text:0000000140004E94                 mov     rax, cs:__security_cookie
.text:0000000140004E9B                 xor     rax, rsp
.text:0000000140004E9E                 mov     [rbp+57h+var_40], rax
.text:0000000140004EA2                 mov     r14, rdx
.text:0000000140004EA5                 mov     rbx, r8
.text:0000000140004EA8                 xor     edx, edx
.text:0000000140004EAA                 mov     rsi, rcx
.text:0000000140004EAD                 lea     rcx, [rbp+57h+var_A0]
.text:0000000140004EB1                 lea     r8d, [rdx+60h]
.text:0000000140004EB5                 call    sub_14000A4C0
.text:0000000140004EBA                 xor     r12d, r12d
.text:0000000140004EBD                 lea     rax, off_14000D008
.text:0000000140004EC4                 cmp     cs:off_14000D008, rax
.text:0000000140004ECB                 lea     r15, unk_14000B2C0
.text:0000000140004ED2                 lea     r13d, [r12+3]
.text:0000000140004ED7                 jz      short loc_140004EFF
.text:0000000140004ED9                 mov     rcx, cs:DeviceObject
.text:0000000140004EE0                 cmp     [rcx+48h], r12w
.text:0000000140004EE5                 jz      short loc_140004EFF
.text:0000000140004EE7                 mov     rcx, [rcx+40h]
.text:0000000140004EEB                 lea     r9d, [r12+64h]
.text:0000000140004EF0                 mov     r8d, r13d
.text:0000000140004EF3                 mov     [rsp+120h+var_100], r15
.text:0000000140004EF8                 mov     dl, 5
.text:0000000140004EFA                 call    sub_1400016A8
.text:0000000140004EFF
.text:0000000140004EFF loc_140004EFF:                          ; CODE XREF: sub_140004E78+5F↑j
.text:0000000140004EFF                                         ; sub_140004E78+6D↑j
.text:0000000140004EFF                 lea     rdx, [rbp+57h+var_A0]
.text:0000000140004F03                 mov     rcx, r14
.text:0000000140004F06                 call    sub_1400038AC
.text:0000000140004F0B                 mov     edi, eax
.text:0000000140004F0D                 test    eax, eax
.text:0000000140004F0F                 jns     short loc_140004F60
.text:0000000140004F11                 xor     edx, edx
.text:0000000140004F13                 lea     rcx, [rbp+57h+var_A0]
.text:0000000140004F17                 lea     r8d, [rdx+60h]
.text:0000000140004F1B                 call    sub_14000A4C0
.text:0000000140004F20                 lea     r14, off_14000D008
.text:0000000140004F27                 cmp     cs:off_14000D008, r14
.text:0000000140004F2E                 jz      loc_140005242
.text:0000000140004F34                 lfence
.text:0000000140004F37                 mov     rcx, cs:DeviceObject
.text:0000000140004F3E                 mov     r9d, 65h ; 'e'
.text:0000000140004F44                 mov     dword ptr [rsp+120h+var_F8], edi
.text:0000000140004F48                 mov     r8d, r13d
.text:0000000140004F4B                 mov     dl, 2
.text:0000000140004F4D                 mov     [rsp+120h+var_100], r15
.text:0000000140004F52                 mov     rcx, [rcx+40h]
.text:0000000140004F56                 call    sub_14000176C
.text:0000000140004F5B                 jmp     loc_140005242
.text:0000000140004F60 ; ---------------------------------------------------------------------------
.text:0000000140004F60
.text:0000000140004F60 loc_140004F60:                          ; CODE XREF: sub_140004E78+97↑j
.text:0000000140004F60                 mov     rax, cs:qword_14000D388
.text:0000000140004F67                 mov     rdx, rsi
.text:0000000140004F6A                 mov     rcx, cs:qword_14000D390
.text:0000000140004F71                 mov     rax, [rax+9B0h]
.text:0000000140004F78                 call    cs:__guard_dispatch_icall_fptr
.text:0000000140004F7E                 cmp     [rbx], r12b
.text:0000000140004F81                 jz      short loc_140004FE5
.text:0000000140004F83                 mov     rax, cs:qword_14000D388
.text:0000000140004F8A                 mov     rdx, rsi
.text:0000000140004F8D                 mov     rcx, cs:qword_14000D390
.text:0000000140004F94                 mov     rax, [rax+9B8h]
.text:0000000140004F9B                 call    cs:__guard_dispatch_icall_fptr
.text:0000000140004FA1                 lea     r14, off_14000D008
.text:0000000140004FA8                 cmp     cs:off_14000D008, r14
.text:0000000140004FAF                 jz      loc_140005242
.text:0000000140004FB5                 mov     rcx, cs:DeviceObject
.text:0000000140004FBC                 cmp     [rcx+48h], r12w
.text:0000000140004FC1                 jz      loc_140005242
.text:0000000140004FC7                 mov     rcx, [rcx+40h]
.text:0000000140004FCB                 mov     r9d, 66h ; 'f'
.text:0000000140004FD1                 mov     r8d, r13d
.text:0000000140004FD4                 mov     [rsp+120h+var_100], r15
.text:0000000140004FD9                 mov     dl, 5
.text:0000000140004FDB                 call    sub_1400016A8
.text:0000000140004FE0                 jmp     loc_140005242
.text:0000000140004FE5 ; ---------------------------------------------------------------------------
.text:0000000140004FE5
.text:0000000140004FE5 loc_140004FE5:                          ; CODE XREF: sub_140004E78+109↑j
.text:0000000140004FE5                 lfence
.text:0000000140004FE8                 movaps  xmm0, [rbp+57h+var_A0]
.text:0000000140004FEC                 lea     r15, [rbx+90h]
.text:0000000140004FF3                 movaps  xmm1, [rbp+57h+var_90]
.text:0000000140004FF7                 lea     rdx, [rsp+120h+var_E0]
.text:0000000140004FFC                 movups  xmmword ptr [rbx+10h], xmm0
.text:0000000140005000                 xor     eax, eax
.text:0000000140005002                 mov     [rbx+8], r14
.text:0000000140005006                 movaps  xmm0, [rbp+57h+var_80]
.text:000000014000500A                 mov     r9, r15
.text:000000014000500D                 movups  xmmword ptr [rbx+20h], xmm1
.text:0000000140005011                 mov     r8, r14
.text:0000000140005014                 mov     [rbp+57h+var_B0], rax
.text:0000000140005018                 movaps  xmm1, [rbp+57h+var_70]
.text:000000014000501C                 mov     eax, 1
.text:0000000140005021                 movups  xmmword ptr [rbx+30h], xmm0
.text:0000000140005025                 movaps  xmm0, [rbp+57h+var_60]
.text:0000000140005029                 movups  xmmword ptr [rbx+40h], xmm1
.text:000000014000502D                 movaps  xmm1, [rbp+57h+var_50]
.text:0000000140005031                 movups  xmmword ptr [rbx+50h], xmm0
.text:0000000140005035                 xorps   xmm0, xmm0
.text:0000000140005038                 movups  [rbp+57h+var_D0], xmm0
.text:000000014000503C                 mov     dword ptr [rbp+57h+var_D0+8], eax
.text:000000014000503F                 movups  xmmword ptr [rbx+60h], xmm1
.text:0000000140005043                 mov     rcx, cs:qword_14000D390
.text:000000014000504A                 mov     dword ptr [rbp+57h+var_D0+0Ch], eax
.text:000000014000504D                 mov     rax, cs:qword_14000D388
.text:0000000140005054                 movups  [rsp+120h+var_E0], xmm0
.text:0000000140005059                 mov     dword ptr [rsp+120h+var_E0], 38h ; '8'
.text:0000000140005061                 movups  [rbp+57h+var_C0], xmm0
.text:0000000140005065                 mov     qword ptr [rbp+57h+var_C0], r14
.text:0000000140005069                 mov     rax, [rax+7B8h]
.text:0000000140005070                 call    cs:__guard_dispatch_icall_fptr
.text:0000000140005076                 mov     edi, eax
.text:0000000140005078                 test    eax, eax
.text:000000014000507A                 jns     short loc_1400050E4
.text:000000014000507C                 mov     rax, cs:qword_14000D388
.text:0000000140005083                 mov     rdx, rsi
.text:0000000140005086                 mov     rcx, cs:qword_14000D390
.text:000000014000508D                 mov     rax, [rax+9B8h]
.text:0000000140005094                 call    cs:__guard_dispatch_icall_fptr
.text:000000014000509A                 mov     [r15], r12
.text:000000014000509D                 lea     r14, off_14000D008
.text:00000001400050A4                 cmp     cs:off_14000D008, r14
.text:00000001400050AB                 lea     rsi, unk_14000B2C0
.text:00000001400050B2                 jz      loc_140005249
.text:00000001400050B8                 mov     r9d, 67h ; 'g'
.text:00000001400050BE
.text:00000001400050BE loc_1400050BE:                          ; CODE XREF: sub_140004E78+38B↓j
.text:00000001400050BE                 lfence
.text:00000001400050C1                 mov     rcx, cs:DeviceObject
.text:00000001400050C8                 mov     r8d, r13d
.text:00000001400050CB                 mov     dword ptr [rsp+120h+var_F8], edi
.text:00000001400050CF                 mov     dl, 2
.text:00000001400050D1                 mov     [rsp+120h+var_100], rsi
.text:00000001400050D6                 mov     rcx, [rcx+40h]
.text:00000001400050DA                 call    sub_14000176C
.text:00000001400050DF                 jmp     loc_140005249
.text:00000001400050E4 ; ---------------------------------------------------------------------------
.text:00000001400050E4
.text:00000001400050E4 loc_1400050E4:                          ; CODE XREF: sub_140004E78+202↑j
.text:00000001400050E4                 cmp     [rbx+34h], r12w
.text:00000001400050E9                 jnz     short loc_14000514A
.text:00000001400050EB                 mov     rax, cs:qword_14000D388
.text:00000001400050F2                 mov     rdx, rsi
.text:00000001400050F5                 mov     rcx, cs:qword_14000D390
.text:00000001400050FC                 mov     rax, [rax+9B8h]
.text:0000000140005103                 call    cs:__guard_dispatch_icall_fptr
.text:0000000140005109                 lea     r14, off_14000D008
.text:0000000140005110                 cmp     cs:off_14000D008, r14
.text:0000000140005117                 lea     rsi, unk_14000B2C0
.text:000000014000511E                 jz      short loc_140005140
.text:0000000140005120                 mov     rcx, cs:DeviceObject
.text:0000000140005127                 mov     r9d, 68h ; 'h'
.text:000000014000512D                 mov     r8d, r13d
.text:0000000140005130                 mov     [rsp+120h+var_100], rsi
.text:0000000140005135                 mov     dl, 2
.text:0000000140005137                 mov     rcx, [rcx+40h]
.text:000000014000513B                 call    sub_1400016A8
.text:0000000140005140
.text:0000000140005140 loc_140005140:                          ; CODE XREF: sub_140004E78+2A6↑j
.text:0000000140005140                 mov     edi, 0C0000023h
.text:0000000140005145                 jmp     loc_140005251
.text:000000014000514A ; ---------------------------------------------------------------------------
.text:000000014000514A
.text:000000014000514A loc_14000514A:                          ; CODE XREF: sub_140004E78+271↑j
.text:000000014000514A                 lfence
.text:000000014000514D                 movzx   ecx, word ptr [rbx+34h]
.text:0000000140005151                 lea     rdx, [rsp+120h+var_E0]
.text:0000000140005156                 xor     eax, eax
.text:0000000140005158                 mov     [rsp+120h+var_F0], r12
.text:000000014000515D                 xorps   xmm0, xmm0
.text:0000000140005160                 mov     [rbp+57h+var_B0], rax
.text:0000000140005164                 movups  [rbp+57h+var_D0], xmm0
.text:0000000140005168                 mov     r9d, 44464453h
.text:000000014000516E                 mov     r8d, 200h
.text:0000000140005174                 lea     r15d, [rax+1]
.text:0000000140005178                 mov     rax, cs:qword_14000D388
.text:000000014000517F                 movups  [rbp+57h+var_C0], xmm0
.text:0000000140005183                 mov     qword ptr [rbp+57h+var_C0], r14
.text:0000000140005187                 lea     r14, [rbx+98h]
.text:000000014000518E                 movups  [rsp+120h+var_E0], xmm0
.text:0000000140005193                 mov     dword ptr [rsp+120h+var_E0], 38h ; '8'
.text:000000014000519B                 mov     dword ptr [rbp+57h+var_D0+8], r15d
.text:000000014000519F                 mov     dword ptr [rbp+57h+var_D0+0Ch], r15d
.text:00000001400051A3                 mov     rax, [rax+600h]
.text:00000001400051AA                 mov     [rsp+120h+var_F8], r14
.text:00000001400051AF                 mov     [rsp+120h+var_100], rcx
.text:00000001400051B4                 mov     rcx, cs:qword_14000D390
.text:00000001400051BB                 call    cs:__guard_dispatch_icall_fptr
.text:00000001400051C1                 mov     edi, eax
.text:00000001400051C3                 test    eax, eax
.text:00000001400051C5                 jns     short loc_140005208
.text:00000001400051C7                 mov     rax, cs:qword_14000D388
.text:00000001400051CE                 mov     rdx, rsi
.text:00000001400051D1                 mov     rcx, cs:qword_14000D390
.text:00000001400051D8                 mov     rax, [rax+9B8h]
.text:00000001400051DF                 call    cs:__guard_dispatch_icall_fptr
.text:00000001400051E5                 mov     [r14], r12
.text:00000001400051E8                 lea     r14, off_14000D008
.text:00000001400051EF                 cmp     cs:off_14000D008, r14
.text:00000001400051F6                 lea     rsi, unk_14000B2C0
.text:00000001400051FD                 jz      short loc_140005249
.text:00000001400051FF                 lea     r9d, [r15+68h]
.text:0000000140005203                 jmp     loc_1400050BE
.text:0000000140005208 ; ---------------------------------------------------------------------------
.text:0000000140005208
.text:0000000140005208 loc_140005208:                          ; CODE XREF: sub_140004E78+34D↑j
.text:0000000140005208                 lfence
.text:000000014000520B                 lea     rcx, [rbx+70h]  ; Event
.text:000000014000520F                 mov     [rbx], r15b
.text:0000000140005212                 xor     r8d, r8d        ; Wait
.text:0000000140005215                 xor     edx, edx        ; Increment
.text:0000000140005217                 call    cs:KeSetEvent
.text:000000014000521D                 mov     rax, cs:qword_14000D388
.text:0000000140005224                 mov     rdx, rsi
.text:0000000140005227                 mov     rcx, cs:qword_14000D390
.text:000000014000522E                 mov     rax, [rax+9B8h]
.text:0000000140005235                 call    cs:__guard_dispatch_icall_fptr
.text:000000014000523B                 lea     r14, off_14000D008
.text:0000000140005242
.text:0000000140005242 loc_140005242:                          ; CODE XREF: sub_140004E78+B6↑j
.text:0000000140005242                                         ; sub_140004E78+E3↑j ...
.text:0000000140005242                 lea     rsi, unk_14000B2C0
.text:0000000140005249
.text:0000000140005249 loc_140005249:                          ; CODE XREF: sub_140004E78+23A↑j
.text:0000000140005249                                         ; sub_140004E78+267↑j ...
.text:0000000140005249                 test    edi, edi
.text:000000014000524B                 jns     loc_1400052F2
.text:0000000140005251
.text:0000000140005251 loc_140005251:                          ; CODE XREF: sub_140004E78+2CD↑j
.text:0000000140005251                 mov     [rbx], r12b
.text:0000000140005254                 mov     [rbx+8], r12
.text:0000000140005258                 cmp     [rbx+90h], r12
.text:000000014000525F                 jz      short loc_14000528D
.text:0000000140005261                 lfence
.text:0000000140005264                 mov     rax, cs:qword_14000D388
.text:000000014000526B                 mov     rdx, [rbx+90h]
.text:0000000140005272                 mov     rcx, cs:qword_14000D390
.text:0000000140005279                 mov     rax, [rax+680h]
.text:0000000140005280                 call    cs:__guard_dispatch_icall_fptr
.text:0000000140005286                 mov     [rbx+90h], r12
.text:000000014000528D
.text:000000014000528D loc_14000528D:                          ; CODE XREF: sub_140004E78+3E7↑j
.text:000000014000528D                 cmp     [rbx+98h], r12
.text:0000000140005294                 jz      short loc_1400052C2
.text:0000000140005296                 lfence
.text:0000000140005299                 mov     rax, cs:qword_14000D388
.text:00000001400052A0                 mov     rdx, [rbx+98h]
.text:00000001400052A7                 mov     rcx, cs:qword_14000D390
.text:00000001400052AE                 mov     rax, [rax+680h]
.text:00000001400052B5                 call    cs:__guard_dispatch_icall_fptr
.text:00000001400052BB                 mov     [rbx+98h], r12
.text:00000001400052C2
.text:00000001400052C2 loc_1400052C2:                          ; CODE XREF: sub_140004E78+41C↑j
.text:00000001400052C2                 cmp     [rbx+20h], r12
.text:00000001400052C6                 jz      short loc_1400052F2
.text:00000001400052C8                 lfence
.text:00000001400052CB                 mov     rax, cs:qword_14000D388
.text:00000001400052D2                 mov     rdx, [rbx+20h]
.text:00000001400052D6                 mov     rcx, cs:qword_14000D390
.text:00000001400052DD                 mov     rax, [rax+680h]
.text:00000001400052E4                 call    cs:__guard_dispatch_icall_fptr
.text:00000001400052EA                 mov     [rbx+20h], r12
.text:00000001400052EE                 mov     [rbx+28h], r12
.text:00000001400052F2
.text:00000001400052F2 loc_1400052F2:                          ; CODE XREF: sub_140004E78+3D3↑j
.text:00000001400052F2                                         ; sub_140004E78+44E↑j
.text:00000001400052F2                 cmp     cs:off_14000D008, r14
.text:00000001400052F9                 jz      short loc_140005326
.text:00000001400052FB                 mov     rcx, cs:DeviceObject
.text:0000000140005302                 cmp     [rcx+48h], r12w
.text:0000000140005307                 jz      short loc_140005326
.text:0000000140005309                 mov     rcx, [rcx+40h]
.text:000000014000530D                 mov     r9d, 6Ah ; 'j'
.text:0000000140005313                 mov     dword ptr [rsp+120h+var_F8], edi
.text:0000000140005317                 mov     r8d, r13d
.text:000000014000531A                 mov     dl, 5
.text:000000014000531C                 mov     [rsp+120h+var_100], rsi
.text:0000000140005321                 call    sub_14000176C
.text:0000000140005326
.text:0000000140005326 loc_140005326:                          ; CODE XREF: sub_140004E78+481↑j
.text:0000000140005326                                         ; sub_140004E78+48F↑j
.text:0000000140005326                 mov     eax, edi
.text:0000000140005328                 mov     rcx, [rbp+57h+var_40]
.text:000000014000532C                 xor     rcx, rsp        ; StackCookie
.text:000000014000532F                 call    __security_check_cookie
.text:0000000140005334                 mov     rbx, [rsp+120h+arg_18]
.text:000000014000533C                 add     rsp, 0F0h
.text:0000000140005343                 pop     r15
.text:0000000140005345                 pop     r14
.text:0000000140005347                 pop     r13
.text:0000000140005349                 pop     r12
.text:000000014000534B                 pop     rdi
.text:000000014000534C                 pop     rsi
.text:000000014000534D                 pop     rbp
.text:000000014000534E                 retn
.text:000000014000534E ; } // starts at 140004E78
.text:000000014000534E sub_140004E78   endp
.text:000000014000534E
.text:000000014000534E ; ---------------------------------------------------------------------------
.text:000000014000534F algn_14000534F:                         ; DATA XREF: .pdata:000000014000E114↓o
.text:000000014000534F                 align 10h
.text:0000000140005350
.text:0000000140005350 ; =============== S U B R O U T I N E =======================================
.text:0000000140005350
.text:0000000140005350
.text:0000000140005350 ; __int64 __fastcall sub_140005350(unsigned __int16 *, unsigned int)
.text:0000000140005350 sub_140005350   proc near               ; CODE XREF: sub_140004958+1FD↑p
.text:0000000140005350                                         ; sub_140004958+23B↑p ...
.text:0000000140005350
.text:0000000140005350 var_58          = qword ptr -58h
.text:0000000140005350 var_50          = qword ptr -50h
.text:0000000140005350 var_48          = dword ptr -48h
.text:0000000140005350 var_40          = dword ptr -40h
.text:0000000140005350 var_38          = qword ptr -38h
.text:0000000140005350 var_30          = qword ptr -30h
.text:0000000140005350 var_28          = byte ptr -28h
.text:0000000140005350
.text:0000000140005350 ; __unwind { // __GSHandlerCheck
.text:0000000140005350                 mov     r11, rsp
.text:0000000140005353                 mov     [r11+18h], rbx
.text:0000000140005357                 mov     [r11+20h], rbp
.text:000000014000535B                 push    rsi
.text:000000014000535C                 push    rdi
.text:000000014000535D                 push    r12
.text:000000014000535F                 push    r14
.text:0000000140005361                 push    r15
.text:0000000140005363                 sub     rsp, 50h
.text:0000000140005367                 mov     rax, cs:__security_cookie
.text:000000014000536E                 xor     rax, rsp
.text:0000000140005371                 mov     [rsp+78h+var_30], rax
.text:0000000140005376                 xor     ebp, ebp
.text:0000000140005378                 mov     esi, edx
.text:000000014000537A                 mov     [r11-38h], rbp
.text:000000014000537E                 mov     rdi, rcx
.text:0000000140005381                 lea     r14, off_14000D008
.text:0000000140005388                 cmp     cs:off_14000D008, r14
.text:000000014000538F                 lea     r12, unk_14000B2C0
.text:0000000140005396                 lea     r15d, [rbp+3]
.text:000000014000539A                 jz      short loc_1400053C1
.text:000000014000539C                 mov     rcx, cs:DeviceObject
.text:00000001400053A3                 cmp     [rcx+48h], bp
.text:00000001400053A7                 jz      short loc_1400053C1
.text:00000001400053A9                 mov     rcx, [rcx+40h]
.text:00000001400053AD                 mov     r9d, 0A8h
.text:00000001400053B3                 mov     r8d, r15d
.text:00000001400053B6                 mov     [r11-58h], r12
.text:00000001400053BA                 mov     dl, 5
.text:00000001400053BC                 call    sub_1400016A8
.text:00000001400053C1
.text:00000001400053C1 loc_1400053C1:                          ; CODE XREF: sub_140005350+4A↑j
.text:00000001400053C1                                         ; sub_140005350+57↑j
.text:00000001400053C1                 mov     rcx, cs:qword_14000D390
.text:00000001400053C8                 lea     r8, [rsp+78h+var_38]
.text:00000001400053CD                 mov     rax, cs:qword_14000D388
.text:00000001400053D4                 xor     r9d, r9d
.text:00000001400053D7                 mov     [rsp+78h+var_58], r8
.text:00000001400053DC                 mov     rdx, [rcx]
.text:00000001400053DF                 mov     rax, [rax+3B8h]
.text:00000001400053E6                 lea     r8d, [r9+2]
.text:00000001400053EA                 call    cs:__guard_dispatch_icall_fptr
.text:00000001400053F0                 mov     ebx, eax
.text:00000001400053F2                 test    eax, eax
.text:00000001400053F4                 jns     short loc_140005434
.text:00000001400053F6                 mov     [rsp+78h+var_38], rbp
.text:00000001400053FB                 cmp     cs:off_14000D008, r14
.text:0000000140005402                 jz      loc_14000553A
.text:0000000140005408                 lfence
.text:000000014000540B                 mov     rcx, cs:DeviceObject
.text:0000000140005412                 mov     r9d, 0A9h
.text:0000000140005418                 mov     dword ptr [rsp+78h+var_50], eax
.text:000000014000541C                 mov     r8d, r15d
.text:000000014000541F                 mov     dl, 2
.text:0000000140005421                 mov     [rsp+78h+var_58], r12
.text:0000000140005426                 mov     rcx, [rcx+40h]
.text:000000014000542A                 call    sub_14000176C
.text:000000014000542F                 jmp     loc_1400054DD
.text:0000000140005434 ; ---------------------------------------------------------------------------
.text:0000000140005434
.text:0000000140005434 loc_140005434:                          ; CODE XREF: sub_140005350+A4↑j
.text:0000000140005434                 mov     rax, cs:qword_14000D388
.text:000000014000543B                 mov     r9d, esi
.text:000000014000543E                 mov     rdx, [rsp+78h+var_38]
.text:0000000140005443                 mov     r8, rdi
.text:0000000140005446                 mov     rcx, cs:qword_14000D390
.text:000000014000544D                 mov     rax, [rax+7B0h]
.text:0000000140005454                 call    cs:__guard_dispatch_icall_fptr
.text:000000014000545A                 mov     ebx, eax
.text:000000014000545C                 test    eax, eax
.text:000000014000545E                 jns     short loc_14000549B
.text:0000000140005460                 cmp     cs:off_14000D008, r14
.text:0000000140005467                 jz      short loc_1400054DD
.text:0000000140005469                 lfence
.text:000000014000546C                 mov     rcx, cs:DeviceObject
.text:0000000140005473                 mov     r9d, 0AAh
.text:0000000140005479                 mov     [rsp+78h+var_40], eax
.text:000000014000547D                 mov     r8d, r15d
.text:0000000140005480                 mov     [rsp+78h+var_48], esi
.text:0000000140005484                 mov     dl, 2
.text:0000000140005486                 mov     [rsp+78h+var_50], rdi
.text:000000014000548B                 mov     rcx, [rcx+40h]
.text:000000014000548F                 mov     [rsp+78h+var_58], r12
.text:0000000140005494                 call    sub_140006018
.text:0000000140005499                 jmp     short loc_1400054DD
.text:000000014000549B ; ---------------------------------------------------------------------------
.text:000000014000549B
.text:000000014000549B loc_14000549B:                          ; CODE XREF: sub_140005350+10E↑j
.text:000000014000549B                 cmp     cs:off_14000D008, r14
.text:00000001400054A2                 jz      short loc_1400054DD
.text:00000001400054A4                 mov     rax, cs:DeviceObject
.text:00000001400054AB                 cmp     [rax+48h], bp
.text:00000001400054AF                 jz      short loc_1400054DD
.text:00000001400054B1                 lfence
.text:00000001400054B4                 mov     rcx, cs:DeviceObject
.text:00000001400054BB                 mov     r9d, 0ABh
.text:00000001400054C1                 mov     [rsp+78h+var_48], esi
.text:00000001400054C5                 mov     r8d, r15d
.text:00000001400054C8                 mov     [rsp+78h+var_50], rdi
.text:00000001400054CD                 mov     dl, 5
.text:00000001400054CF                 mov     [rsp+78h+var_58], r12
.text:00000001400054D4                 mov     rcx, [rcx+40h]
.text:00000001400054D8                 call    sub_140005E90
.text:00000001400054DD
.text:00000001400054DD loc_1400054DD:                          ; CODE XREF: sub_140005350+DF↑j
.text:00000001400054DD                                         ; sub_140005350+117↑j ...
.text:00000001400054DD                 mov     rdx, [rsp+78h+var_38]
.text:00000001400054E2                 test    rdx, rdx
.text:00000001400054E5                 jz      short loc_140005507
.text:00000001400054E7                 mov     rax, cs:qword_14000D388
.text:00000001400054EE                 mov     rcx, cs:qword_14000D390
.text:00000001400054F5                 mov     rax, [rax+738h]
.text:00000001400054FC                 call    cs:__guard_dispatch_icall_fptr
.text:0000000140005502                 mov     [rsp+78h+var_38], rbp
.text:0000000140005507
.text:0000000140005507 loc_140005507:                          ; CODE XREF: sub_140005350+195↑j
.text:0000000140005507                 cmp     cs:off_14000D008, r14
.text:000000014000550E                 jz      short loc_14000553A
.text:0000000140005510                 mov     rcx, cs:DeviceObject
.text:0000000140005517                 cmp     [rcx+48h], bp
.text:000000014000551B                 jz      short loc_14000553A
.text:000000014000551D                 mov     rcx, [rcx+40h]
.text:0000000140005521                 mov     r9d, 0ACh
.text:0000000140005527                 mov     dword ptr [rsp+78h+var_50], ebx
.text:000000014000552B                 mov     r8d, r15d
.text:000000014000552E                 mov     dl, 5
.text:0000000140005530                 mov     [rsp+78h+var_58], r12
.text:0000000140005535                 call    sub_14000176C
.text:000000014000553A
.text:000000014000553A loc_14000553A:                          ; CODE XREF: sub_140005350+B2↑j
.text:000000014000553A                                         ; sub_140005350+1BE↑j ...
.text:000000014000553A                 mov     eax, ebx
.text:000000014000553C                 mov     rcx, [rsp+78h+var_30]
.text:0000000140005541                 xor     rcx, rsp        ; StackCookie
.text:0000000140005544                 call    __security_check_cookie
.text:0000000140005549                 lea     r11, [rsp+78h+var_28]
.text:000000014000554E                 mov     rbx, [r11+40h]
.text:0000000140005552                 mov     rbp, [r11+48h]
.text:0000000140005556                 mov     rsp, r11
.text:0000000140005559                 pop     r15
.text:000000014000555B                 pop     r14
.text:000000014000555D                 pop     r12
.text:000000014000555F                 pop     rdi
.text:0000000140005560                 pop     rsi
.text:0000000140005561                 retn
.text:0000000140005561 ; } // starts at 140005350
.text:0000000140005561 sub_140005350   endp
.text:0000000140005561
.text:0000000140005561 ; ---------------------------------------------------------------------------
.text:0000000140005562 algn_140005562:                         ; DATA XREF: .pdata:000000014000E120↓o
.text:0000000140005562                 align 4
.text:0000000140005564
.text:0000000140005564 ; =============== S U B R O U T I N E =======================================
.text:0000000140005564
.text:0000000140005564
.text:0000000140005564 ; __int64 __fastcall sub_140005564(unsigned __int16 *, _DWORD *)
.text:0000000140005564 sub_140005564   proc near               ; CODE XREF: sub_1400057AC+8B↓p
.text:0000000140005564                                         ; sub_1400057AC+E4↓p ...
.text:0000000140005564
.text:0000000140005564 var_58          = qword ptr -58h
.text:0000000140005564 var_50          = qword ptr -50h
.text:0000000140005564 var_48          = dword ptr -48h
.text:0000000140005564 var_38          = qword ptr -38h
.text:0000000140005564 var_30          = qword ptr -30h
.text:0000000140005564 var_28          = byte ptr -28h
.text:0000000140005564
.text:0000000140005564 ; __unwind { // __GSHandlerCheck
.text:0000000140005564                 mov     r11, rsp
.text:0000000140005567                 mov     [r11+18h], rbx
.text:000000014000556B                 mov     [r11+20h], rbp
.text:000000014000556F                 push    rsi
.text:0000000140005570                 push    rdi
.text:0000000140005571                 push    r12
.text:0000000140005573                 push    r14
.text:0000000140005575                 push    r15
.text:0000000140005577                 sub     rsp, 50h
.text:000000014000557B                 mov     rax, cs:__security_cookie
.text:0000000140005582                 xor     rax, rsp
.text:0000000140005585                 mov     [rsp+78h+var_30], rax
.text:000000014000558A                 xor     ebp, ebp
.text:000000014000558C                 mov     rsi, rdx
.text:000000014000558F                 mov     [r11-38h], rbp
.text:0000000140005593                 mov     rdi, rcx
.text:0000000140005596                 lea     r14, off_14000D008
.text:000000014000559D                 cmp     cs:off_14000D008, r14
.text:00000001400055A4                 lea     r12, unk_14000B2C0
.text:00000001400055AB                 lea     r15d, [rbp+3]
.text:00000001400055AF                 jz      short loc_1400055D6
.text:00000001400055B1                 mov     rcx, cs:DeviceObject
.text:00000001400055B8                 cmp     [rcx+48h], bp
.text:00000001400055BC                 jz      short loc_1400055D6
.text:00000001400055BE                 mov     rcx, [rcx+40h]
.text:00000001400055C2                 mov     r9d, 0A2h
.text:00000001400055C8                 mov     r8d, r15d
.text:00000001400055CB                 mov     [r11-58h], r12
.text:00000001400055CF                 mov     dl, 5
.text:00000001400055D1                 call    sub_1400016A8
.text:00000001400055D6
.text:00000001400055D6 loc_1400055D6:                          ; CODE XREF: sub_140005564+4B↑j
.text:00000001400055D6                                         ; sub_140005564+58↑j
.text:00000001400055D6                 mov     rcx, cs:qword_14000D390
.text:00000001400055DD                 lea     r8, [rsp+78h+var_38]
.text:00000001400055E2                 mov     rax, cs:qword_14000D388
.text:00000001400055E9                 xor     r9d, r9d
.text:00000001400055EC                 mov     [rsp+78h+var_58], r8
.text:00000001400055F1                 mov     r8d, 20019h
.text:00000001400055F7                 mov     rdx, [rcx]
.text:00000001400055FA                 mov     rax, [rax+3B8h]
.text:0000000140005601                 call    cs:__guard_dispatch_icall_fptr
.text:0000000140005607                 mov     ebx, eax
.text:0000000140005609                 test    eax, eax
.text:000000014000560B                 jns     short loc_14000564B
.text:000000014000560D                 mov     [rsp+78h+var_38], rbp
.text:0000000140005612                 cmp     cs:off_14000D008, r14
.text:0000000140005619                 jz      loc_140005784
.text:000000014000561F                 lfence
.text:0000000140005622                 mov     rcx, cs:DeviceObject
.text:0000000140005629                 mov     r9d, 0A3h
.text:000000014000562F                 mov     dword ptr [rsp+78h+var_50], eax
.text:0000000140005633                 mov     r8d, r15d
.text:0000000140005636                 mov     dl, 2
.text:0000000140005638                 mov     [rsp+78h+var_58], r12
.text:000000014000563D                 mov     rcx, [rcx+40h]
.text:0000000140005641                 call    sub_14000176C
.text:0000000140005646                 jmp     loc_140005727
.text:000000014000564B ; ---------------------------------------------------------------------------
.text:000000014000564B
.text:000000014000564B loc_14000564B:                          ; CODE XREF: sub_140005564+A7↑j
.text:000000014000564B                 mov     rax, cs:qword_14000D388
.text:0000000140005652                 mov     r9, rsi
.text:0000000140005655                 mov     rdx, [rsp+78h+var_38]
.text:000000014000565A                 mov     r8, rdi
.text:000000014000565D                 mov     rcx, cs:qword_14000D390
.text:0000000140005664                 mov     rax, [rax+780h]
.text:000000014000566B                 call    cs:__guard_dispatch_icall_fptr
.text:0000000140005671                 mov     ebx, eax
.text:0000000140005673                 test    eax, eax
.text:0000000140005675                 jns     short loc_1400056E3
.text:0000000140005677                 mov     ecx, 0C0000034h
.text:000000014000567C                 cmp     eax, ecx
.text:000000014000567E                 jnz     short loc_1400056AC
.text:0000000140005680                 cmp     cs:off_14000D008, r14
.text:0000000140005687                 jz      loc_140005727
.text:000000014000568D                 mov     rax, cs:DeviceObject
.text:0000000140005694                 cmp     [rax+48h], bp
.text:0000000140005698                 jz      loc_140005727
.text:000000014000569E                 mov     r9d, 0A4h
.text:00000001400056A4                 mov     [rsp+78h+var_48], ecx
.text:00000001400056A8                 mov     dl, 5
.text:00000001400056AA                 jmp     short loc_1400056C1
.text:00000001400056AC ; ---------------------------------------------------------------------------
.text:00000001400056AC
.text:00000001400056AC loc_1400056AC:                          ; CODE XREF: sub_140005564+11A↑j
.text:00000001400056AC                 cmp     cs:off_14000D008, r14
.text:00000001400056B3                 jz      short loc_140005727
.text:00000001400056B5                 mov     r9d, 0A5h
.text:00000001400056BB                 mov     [rsp+78h+var_48], eax
.text:00000001400056BF                 mov     dl, 2
.text:00000001400056C1
.text:00000001400056C1 loc_1400056C1:                          ; CODE XREF: sub_140005564+146↑j
.text:00000001400056C1                 mov     [rsp+78h+var_50], rdi
.text:00000001400056C6                 mov     r8d, r15d
.text:00000001400056C9                 mov     [rsp+78h+var_58], r12
.text:00000001400056CE                 lfence
.text:00000001400056D1                 mov     rcx, cs:DeviceObject
.text:00000001400056D8                 mov     rcx, [rcx+40h]
.text:00000001400056DC                 call    sub_140005E90
.text:00000001400056E1                 jmp     short loc_140005727
.text:00000001400056E3 ; ---------------------------------------------------------------------------
.text:00000001400056E3
.text:00000001400056E3 loc_1400056E3:                          ; CODE XREF: sub_140005564+111↑j
.text:00000001400056E3                 cmp     cs:off_14000D008, r14
.text:00000001400056EA                 jz      short loc_140005727
.text:00000001400056EC                 mov     rax, cs:DeviceObject
.text:00000001400056F3                 cmp     [rax+48h], bp
.text:00000001400056F7                 jz      short loc_140005727
.text:00000001400056F9                 lfence
.text:00000001400056FC                 mov     rcx, cs:DeviceObject
.text:0000000140005703                 mov     r9d, 0A6h
.text:0000000140005709                 mov     eax, [rsi]
.text:000000014000570B                 mov     r8d, r15d
.text:000000014000570E                 mov     [rsp+78h+var_48], eax
.text:0000000140005712                 mov     dl, 5
.text:0000000140005714                 mov     [rsp+78h+var_50], rdi
.text:0000000140005719                 mov     rcx, [rcx+40h]
.text:000000014000571D                 mov     [rsp+78h+var_58], r12
.text:0000000140005722                 call    sub_140005E90
.text:0000000140005727
.text:0000000140005727 loc_140005727:                          ; CODE XREF: sub_140005564+E2↑j
.text:0000000140005727                                         ; sub_140005564+123↑j ...
.text:0000000140005727                 mov     rdx, [rsp+78h+var_38]
.text:000000014000572C                 test    rdx, rdx
.text:000000014000572F                 jz      short loc_140005751
.text:0000000140005731                 mov     rax, cs:qword_14000D388
.text:0000000140005738                 mov     rcx, cs:qword_14000D390
.text:000000014000573F                 mov     rax, [rax+738h]
.text:0000000140005746                 call    cs:__guard_dispatch_icall_fptr
.text:000000014000574C                 mov     [rsp+78h+var_38], rbp
.text:0000000140005751
.text:0000000140005751 loc_140005751:                          ; CODE XREF: sub_140005564+1CB↑j
.text:0000000140005751                 cmp     cs:off_14000D008, r14
.text:0000000140005758                 jz      short loc_140005784
.text:000000014000575A                 mov     rcx, cs:DeviceObject
.text:0000000140005761                 cmp     [rcx+48h], bp
.text:0000000140005765                 jz      short loc_140005784
.text:0000000140005767                 mov     rcx, [rcx+40h]
.text:000000014000576B                 mov     r9d, 0A7h
.text:0000000140005771                 mov     dword ptr [rsp+78h+var_50], ebx
.text:0000000140005775                 mov     r8d, r15d
.text:0000000140005778                 mov     dl, 5
.text:000000014000577A                 mov     [rsp+78h+var_58], r12
.text:000000014000577F                 call    sub_14000176C
.text:0000000140005784
.text:0000000140005784 loc_140005784:                          ; CODE XREF: sub_140005564+B5↑j
.text:0000000140005784                                         ; sub_140005564+1F4↑j ...
.text:0000000140005784                 mov     eax, ebx
.text:0000000140005786                 mov     rcx, [rsp+78h+var_30]
.text:000000014000578B                 xor     rcx, rsp        ; StackCookie
.text:000000014000578E                 call    __security_check_cookie
.text:0000000140005793                 lea     r11, [rsp+78h+var_28]
.text:0000000140005798                 mov     rbx, [r11+40h]
.text:000000014000579C                 mov     rbp, [r11+48h]
.text:00000001400057A0                 mov     rsp, r11
.text:00000001400057A3                 pop     r15
.text:00000001400057A5                 pop     r14
.text:00000001400057A7                 pop     r12
.text:00000001400057A9                 pop     rdi
.text:00000001400057AA                 pop     rsi
.text:00000001400057AB                 retn
.text:00000001400057AB ; } // starts at 140005564
.text:00000001400057AB sub_140005564   endp
.text:00000001400057AB
.text:00000001400057AC
.text:00000001400057AC ; =============== S U B R O U T I N E =======================================
.text:00000001400057AC
.text:00000001400057AC ; Attributes: bp-based frame
.text:00000001400057AC
.text:00000001400057AC ; __int64 __fastcall sub_1400057AC(_DWORD *, _DWORD *, _DWORD *, _DWORD *)
.text:00000001400057AC sub_1400057AC   proc near               ; CODE XREF: sub_140004314+ED↑p
.text:00000001400057AC                                         ; sub_140004314+23F↑p
.text:00000001400057AC                                         ; DATA XREF: ...
.text:00000001400057AC
.text:00000001400057AC var_38          = qword ptr -38h
.text:00000001400057AC var_30          = qword ptr -30h
.text:00000001400057AC var_28          = dword ptr -28h
.text:00000001400057AC var_24          = dword ptr -24h
.text:00000001400057AC var_20          = dword ptr -20h
.text:00000001400057AC var_1C          = dword ptr -1Ch
.text:00000001400057AC var_18          = qword ptr -18h
.text:00000001400057AC
.text:00000001400057AC ; __unwind { // __GSHandlerCheck
.text:00000001400057AC                 push    rbp
.text:00000001400057AE                 push    rbx
.text:00000001400057AF                 push    rsi
.text:00000001400057B0                 push    rdi
.text:00000001400057B1                 push    r12
.text:00000001400057B3                 push    r13
.text:00000001400057B5                 push    r14
.text:00000001400057B7                 push    r15
.text:00000001400057B9                 mov     rbp, rsp
.text:00000001400057BC                 sub     rsp, 58h
.text:00000001400057C0                 mov     rax, cs:__security_cookie
.text:00000001400057C7                 xor     rax, rsp
.text:00000001400057CA                 mov     [rbp+var_18], rax
.text:00000001400057CE                 xor     r12d, r12d
.text:00000001400057D1                 mov     r15, r9
.text:00000001400057D4                 mov     [rbp+var_28], r12d
.text:00000001400057D8                 mov     r14, r8
.text:00000001400057DB                 mov     [rbp+var_24], r12d
.text:00000001400057DF                 mov     rsi, rdx
.text:00000001400057E2                 mov     [rbp+var_20], r12d
.text:00000001400057E6                 mov     rdi, rcx
.text:00000001400057E9                 mov     [rbp+var_1C], r12d
.text:00000001400057ED                 lea     r13, off_14000D008
.text:00000001400057F4                 cmp     cs:off_14000D008, r13
.text:00000001400057FB                 lea     rax, unk_14000B2C0
.text:0000000140005802                 jz      short loc_14000582C
.text:0000000140005804                 mov     rcx, cs:DeviceObject
.text:000000014000580B                 cmp     [rcx+48h], r12w
.text:0000000140005810                 jz      short loc_14000582C
.text:0000000140005812                 mov     rcx, [rcx+40h]
.text:0000000140005816                 lea     r9d, [r12+59h]
.text:000000014000581B                 lea     r8d, [r12+3]
.text:0000000140005820                 mov     [rsp+58h+var_38], rax
.text:0000000140005825                 mov     dl, 5
.text:0000000140005827                 call    sub_1400016A8
.text:000000014000582C
.text:000000014000582C loc_14000582C:                          ; CODE XREF: sub_1400057AC+56↑j
.text:000000014000582C                                         ; sub_1400057AC+64↑j
.text:000000014000582C                 lea     rdx, [rbp+var_28]
.text:0000000140005830                 lea     rcx, word_14000B1F0
.text:0000000140005837                 call    sub_140005564
.text:000000014000583C                 mov     ebx, eax
.text:000000014000583E                 test    eax, eax
.text:0000000140005840                 jns     short loc_140005885
.text:0000000140005842                 cmp     cs:off_14000D008, r13
.text:0000000140005849                 jz      loc_14000595A
.text:000000014000584F                 mov     r9d, 5Ah ; 'Z'
.text:0000000140005855
.text:0000000140005855 loc_140005855:                          ; CODE XREF: sub_1400057AC+102↓j
.text:0000000140005855                                         ; sub_1400057AC+12D↓j ...
.text:0000000140005855                 lfence
.text:0000000140005858                 mov     rcx, cs:DeviceObject
.text:000000014000585F                 lea     rdi, unk_14000B2C0
.text:0000000140005866                 mov     dword ptr [rsp+58h+var_30], eax
.text:000000014000586A                 mov     r8d, 3
.text:0000000140005870                 mov     dl, 2
.text:0000000140005872                 mov     [rsp+58h+var_38], rdi
.text:0000000140005877                 mov     rcx, [rcx+40h]
.text:000000014000587B                 call    sub_14000176C
.text:0000000140005880                 jmp     loc_140005925
.text:0000000140005885 ; ---------------------------------------------------------------------------
.text:0000000140005885
.text:0000000140005885 loc_140005885:                          ; CODE XREF: sub_1400057AC+94↑j
.text:0000000140005885                 lea     rdx, [rbp+var_24]
.text:0000000140005889                 lea     rcx, word_14000B218
.text:0000000140005890                 call    sub_140005564
.text:0000000140005895                 mov     ebx, eax
.text:0000000140005897                 test    eax, eax
.text:0000000140005899                 jns     short loc_1400058B0
.text:000000014000589B                 cmp     cs:off_14000D008, r13
.text:00000001400058A2                 jz      loc_14000595A
.text:00000001400058A8                 mov     r9d, 5Bh ; '['
.text:00000001400058AE                 jmp     short loc_140005855
.text:00000001400058B0 ; ---------------------------------------------------------------------------
.text:00000001400058B0
.text:00000001400058B0 loc_1400058B0:                          ; CODE XREF: sub_1400057AC+ED↑j
.text:00000001400058B0                 lea     rdx, [rbp+var_20]
.text:00000001400058B4                 lea     rcx, word_14000B248
.text:00000001400058BB                 call    sub_140005564
.text:00000001400058C0                 mov     ebx, eax
.text:00000001400058C2                 test    eax, eax
.text:00000001400058C4                 jns     short loc_1400058DE
.text:00000001400058C6                 cmp     cs:off_14000D008, r13
.text:00000001400058CD                 jz      loc_14000595A
.text:00000001400058D3                 mov     r9d, 5Ch ; '\'
.text:00000001400058D9                 jmp     loc_140005855
.text:00000001400058DE ; ---------------------------------------------------------------------------
.text:00000001400058DE
.text:00000001400058DE loc_1400058DE:                          ; CODE XREF: sub_1400057AC+118↑j
.text:00000001400058DE                 lea     rdx, [rbp+var_1C]
.text:00000001400058E2                 lea     rcx, word_14000B270
.text:00000001400058E9                 call    sub_140005564
.text:00000001400058EE                 mov     ebx, eax
.text:00000001400058F0                 test    eax, eax
.text:00000001400058F2                 jns     short loc_140005908
.text:00000001400058F4                 cmp     cs:off_14000D008, r13
.text:00000001400058FB                 jz      short loc_14000595A
.text:00000001400058FD                 mov     r9d, 5Dh ; ']'
.text:0000000140005903                 jmp     loc_140005855
.text:0000000140005908 ; ---------------------------------------------------------------------------
.text:0000000140005908
.text:0000000140005908 loc_140005908:                          ; CODE XREF: sub_1400057AC+146↑j
.text:0000000140005908                 mov     eax, [rbp+var_28]
.text:000000014000590B                 mov     [rdi], eax
.text:000000014000590D                 lea     rdi, unk_14000B2C0
.text:0000000140005914                 mov     eax, [rbp+var_24]
.text:0000000140005917                 mov     [rsi], eax
.text:0000000140005919                 mov     eax, [rbp+var_20]
.text:000000014000591C                 mov     [r14], eax
.text:000000014000591F                 mov     eax, [rbp+var_1C]
.text:0000000140005922                 mov     [r15], eax
.text:0000000140005925
.text:0000000140005925 loc_140005925:                          ; CODE XREF: sub_1400057AC+D4↑j
.text:0000000140005925                 cmp     cs:off_14000D008, r13
.text:000000014000592C                 jz      short loc_14000595A
.text:000000014000592E                 mov     rcx, cs:DeviceObject
.text:0000000140005935                 cmp     [rcx+48h], r12w
.text:000000014000593A                 jz      short loc_14000595A
.text:000000014000593C                 mov     rcx, [rcx+40h]
.text:0000000140005940                 mov     r9d, 5Eh ; '^'
.text:0000000140005946                 mov     dword ptr [rsp+58h+var_30], ebx
.text:000000014000594A                 mov     dl, 5
.text:000000014000594C                 mov     [rsp+58h+var_38], rdi
.text:0000000140005951                 lea     r8d, [r9-5Bh]
.text:0000000140005955                 call    sub_14000176C
.text:000000014000595A
.text:000000014000595A loc_14000595A:                          ; CODE XREF: sub_1400057AC+9D↑j
.text:000000014000595A                                         ; sub_1400057AC+F6↑j ...
.text:000000014000595A                 mov     eax, ebx
.text:000000014000595C                 mov     rcx, [rbp+var_18]
.text:0000000140005960                 xor     rcx, rsp        ; StackCookie
.text:0000000140005963                 call    __security_check_cookie
.text:0000000140005968                 add     rsp, 58h
.text:000000014000596C                 pop     r15
.text:000000014000596E                 pop     r14
.text:0000000140005970                 pop     r13
.text:0000000140005972                 pop     r12
.text:0000000140005974                 pop     rdi
.text:0000000140005975                 pop     rsi
.text:0000000140005976                 pop     rbx
.text:0000000140005977                 pop     rbp
.text:0000000140005978                 retn
.text:0000000140005978 ; } // starts at 1400057AC
.text:0000000140005978 sub_1400057AC   endp
.text:0000000140005978
.text:0000000140005978 ; ---------------------------------------------------------------------------
.text:0000000140005979 algn_140005979:                         ; DATA XREF: .pdata:000000014000E138↓o
.text:0000000140005979                 align 4
.text:000000014000597C
.text:000000014000597C ; =============== S U B R O U T I N E =======================================
.text:000000014000597C
.text:000000014000597C
.text:000000014000597C ; __int64 __fastcall sub_14000597C(PVOID Context)
.text:000000014000597C sub_14000597C   proc near               ; CODE XREF: sub_140002C50+CD↑p
.text:000000014000597C                                         ; DATA XREF: .pdata:000000014000E144↓o
.text:000000014000597C
.text:000000014000597C CallbackRoutine = qword ptr -48h
.text:000000014000597C Context         = qword ptr -40h
.text:000000014000597C NotificationEntry= qword ptr -38h
.text:000000014000597C var_28          = qword ptr -28h
.text:000000014000597C var_20          = qword ptr -20h
.text:000000014000597C var_18          = byte ptr -18h
.text:000000014000597C
.text:000000014000597C ; __unwind { // __GSHandlerCheck
.text:000000014000597C                 mov     r11, rsp
.text:000000014000597F                 mov     [r11+10h], rbx
.text:0000000140005983                 mov     [r11+18h], rbp
.text:0000000140005987                 mov     [r11+20h], rsi
.text:000000014000598B                 push    rdi
.text:000000014000598C                 push    r12
.text:000000014000598E                 push    r15
.text:0000000140005990                 sub     rsp, 50h
.text:0000000140005994                 mov     rax, cs:__security_cookie
.text:000000014000599B                 xor     rax, rsp
.text:000000014000599E                 mov     [rsp+68h+var_20], rax
.text:00000001400059A3                 mov     rdi, rcx
.text:00000001400059A6                 lea     rbp, off_14000D008
.text:00000001400059AD                 xor     r12d, r12d
.text:00000001400059B0                 cmp     cs:off_14000D008, rbp
.text:00000001400059B7                 lea     r15, unk_14000B2C0
.text:00000001400059BE                 jz      short loc_1400059E7
.text:00000001400059C0                 mov     rcx, cs:DeviceObject
.text:00000001400059C7                 cmp     [rcx+48h], r12w
.text:00000001400059CC                 jz      short loc_1400059E7
.text:00000001400059CE                 mov     rcx, [rcx+40h]
.text:00000001400059D2                 lea     r9d, [r12+75h]
.text:00000001400059D7                 lea     r8d, [r12+3]
.text:00000001400059DC                 mov     [r11-48h], r15
.text:00000001400059E0                 mov     dl, 5
.text:00000001400059E2                 call    sub_1400016A8
.text:00000001400059E7
.text:00000001400059E7 loc_1400059E7:                          ; CODE XREF: sub_14000597C+42↑j
.text:00000001400059E7                                         ; sub_14000597C+50↑j
.text:00000001400059E7                 mov     rax, cs:qword_14000D388
.text:00000001400059EE                 mov     rdx, rdi
.text:00000001400059F1                 mov     r8, cs:off_14000D028
.text:00000001400059F8                 mov     rcx, cs:qword_14000D390
.text:00000001400059FF                 mov     rax, [rax+650h]
.text:0000000140005A06                 call    cs:__guard_dispatch_icall_fptr
.text:0000000140005A0C                 mov     rcx, cs:qword_14000D388
.text:0000000140005A13                 mov     rdx, rdi
.text:0000000140005A16                 mov     rsi, rax
.text:0000000140005A19                 mov     rax, [rcx+0F8h]
.text:0000000140005A20                 mov     rcx, cs:qword_14000D390
.text:0000000140005A27                 call    cs:__guard_dispatch_icall_fptr
.text:0000000140005A2D                 lea     rcx, [rsp+68h+var_28]
.text:0000000140005A32                 mov     edx, 1          ; EventCategoryFlags
.text:0000000140005A37                 mov     [rsp+68h+NotificationEntry], rcx ; NotificationEntry
.text:0000000140005A3C                 lea     r8, unk_14000B290 ; EventCategoryData
.text:0000000140005A43                 lea     rcx, CallbackRoutine
.text:0000000140005A4A                 mov     [rsp+68h+Context], rdi ; Context
.text:0000000140005A4F                 mov     r9, [rax+8]     ; DriverObject
.text:0000000140005A53                 mov     [rsp+68h+CallbackRoutine], rcx ; CallbackRoutine
.text:0000000140005A58                 lea     ecx, [rdx+1]    ; EventCategory
.text:0000000140005A5B                 call    cs:IoRegisterPlugPlayNotification
.text:0000000140005A61                 mov     ebx, eax
.text:0000000140005A63                 test    eax, eax
.text:0000000140005A65                 jns     short loc_140005A9E
.text:0000000140005A67                 cmp     cs:off_14000D008, rbp
.text:0000000140005A6E                 jz      loc_140005B15
.text:0000000140005A74                 lfence
.text:0000000140005A77                 mov     rcx, cs:DeviceObject
.text:0000000140005A7E                 mov     r9d, 76h ; 'v'
.text:0000000140005A84                 mov     dword ptr [rsp+68h+Context], eax
.text:0000000140005A88                 mov     dl, 2
.text:0000000140005A8A                 mov     [rsp+68h+CallbackRoutine], r15
.text:0000000140005A8F                 mov     rcx, [rcx+40h]
.text:0000000140005A93                 lea     r8d, [r9-73h]
.text:0000000140005A97                 call    sub_14000176C
.text:0000000140005A9C                 jmp     short loc_140005AE0
.text:0000000140005A9E ; ---------------------------------------------------------------------------
.text:0000000140005A9E
.text:0000000140005A9E loc_140005A9E:                          ; CODE XREF: sub_14000597C+E9↑j
.text:0000000140005A9E                 lfence
.text:0000000140005AA1                 mov     rax, cs:qword_14000D388
.text:0000000140005AA8                 lea     rcx, aRepositorydirS ; "REPOSITORYDIR\\sys\\Device.cpp"
.text:0000000140005AAF                 mov     [rsp+68h+CallbackRoutine], rcx
.text:0000000140005AB4                 mov     r9d, 5DDh
.text:0000000140005ABA                 mov     rcx, cs:qword_14000D390
.text:0000000140005AC1                 xor     r8d, r8d
.text:0000000140005AC4                 mov     rdx, rdi
.text:0000000140005AC7                 mov     rax, [rax+668h]
.text:0000000140005ACE                 call    cs:__guard_dispatch_icall_fptr
.text:0000000140005AD4                 mov     rax, [rsp+68h+var_28]
.text:0000000140005AD9                 mov     [rsi+120h], rax
.text:0000000140005AE0
.text:0000000140005AE0 loc_140005AE0:                          ; CODE XREF: sub_14000597C+120↑j
.text:0000000140005AE0                 cmp     cs:off_14000D008, rbp
.text:0000000140005AE7                 jz      short loc_140005B15
.text:0000000140005AE9                 mov     rcx, cs:DeviceObject
.text:0000000140005AF0                 cmp     [rcx+48h], r12w
.text:0000000140005AF5                 jz      short loc_140005B15
.text:0000000140005AF7                 mov     rcx, [rcx+40h]
.text:0000000140005AFB                 mov     r9d, 77h ; 'w'
.text:0000000140005B01                 mov     dword ptr [rsp+68h+Context], ebx
.text:0000000140005B05                 mov     dl, 5
.text:0000000140005B07                 mov     [rsp+68h+CallbackRoutine], r15
.text:0000000140005B0C                 lea     r8d, [r9-74h]
.text:0000000140005B10                 call    sub_14000176C
.text:0000000140005B15
.text:0000000140005B15 loc_140005B15:                          ; CODE XREF: sub_14000597C+F2↑j
.text:0000000140005B15                                         ; sub_14000597C+16B↑j ...
.text:0000000140005B15                 mov     eax, ebx
.text:0000000140005B17                 mov     rcx, [rsp+68h+var_20]
.text:0000000140005B1C                 xor     rcx, rsp        ; StackCookie
.text:0000000140005B1F                 call    __security_check_cookie
.text:0000000140005B24                 lea     r11, [rsp+68h+var_18]
.text:0000000140005B29                 mov     rbx, [r11+28h]
.text:0000000140005B2D                 mov     rbp, [r11+30h]
.text:0000000140005B31                 mov     rsi, [r11+38h]
.text:0000000140005B35                 mov     rsp, r11
.text:0000000140005B38                 pop     r15
.text:0000000140005B3A                 pop     r12
.text:0000000140005B3C                 pop     rdi
.text:0000000140005B3D                 retn
.text:0000000140005B3D ; } // starts at 14000597C
.text:0000000140005B3D sub_14000597C   endp
.text:0000000140005B3D
.text:0000000140005B3D ; ---------------------------------------------------------------------------
.text:0000000140005B3E algn_140005B3E:                         ; DATA XREF: .pdata:000000014000E144↓o
.text:0000000140005B3E                 align 20h
.text:0000000140005B40
.text:0000000140005B40 ; =============== S U B R O U T I N E =======================================
.text:0000000140005B40
.text:0000000140005B40
.text:0000000140005B40 ; __int64 sub_140005B40(__int64, unsigned __int8, unsigned int, unsigned __int16, __int64, ...)
.text:0000000140005B40 sub_140005B40   proc near               ; CODE XREF: CallbackRoutine+2CD↑p
.text:0000000140005B40                                         ; sub_140004958+1EE↑p ...
.text:0000000140005B40
.text:0000000140005B40 var_88          = qword ptr -88h
.text:0000000140005B40 var_80          = qword ptr -80h
.text:0000000140005B40 var_78          = qword ptr -78h
.text:0000000140005B40 var_70          = qword ptr -70h
.text:0000000140005B40 var_68          = qword ptr -68h
.text:0000000140005B40 var_60          = qword ptr -60h
.text:0000000140005B40 var_58          = qword ptr -58h
.text:0000000140005B40 var_50          = qword ptr -50h
.text:0000000140005B40 var_48          = qword ptr -48h
.text:0000000140005B40 var_40          = qword ptr -40h
.text:0000000140005B40 arg_20          = qword ptr  28h
.text:0000000140005B40 arg_28          = qword ptr  30h
.text:0000000140005B40 arg_30          = qword ptr  38h
.text:0000000140005B40 arg_38          = qword ptr  40h
.text:0000000140005B40 arg_40          = byte ptr  48h
.text:0000000140005B40
.text:0000000140005B40                 mov     r11, rsp
.text:0000000140005B43                 push    rbx
.text:0000000140005B44                 push    rbp
.text:0000000140005B45                 push    rsi
.text:0000000140005B46                 push    rdi
.text:0000000140005B47                 push    r14
.text:0000000140005B49                 push    r15
.text:0000000140005B4B                 sub     rsp, 78h
.text:0000000140005B4F                 mov     r10, cs:DeviceObject
.text:0000000140005B56                 mov     r14, rcx
.text:0000000140005B59                 mov     rsi, [rsp+0A8h+arg_20]
.text:0000000140005B61                 mov     r15d, 4
.text:0000000140005B67                 mov     ebp, r8d
.text:0000000140005B6A                 movzx   edi, r9w
.text:0000000140005B6E                 mov     r9d, ebp
.text:0000000140005B71                 shr     r9, 10h
.text:0000000140005B75                 movzx   ebx, dl
.text:0000000140005B78                 lea     r8d, [rbp-1]
.text:0000000140005B7C                 mov     ecx, r8d
.text:0000000140005B7F                 and     r8d, 1Fh
.text:0000000140005B83                 shr     rcx, 5
.text:0000000140005B87                 lea     rax, [r9+r9*4]
.text:0000000140005B8B                 and     ecx, 7FFh
.text:0000000140005B91                 lea     rdx, [rcx+rax*4]
.text:0000000140005B95                 mov     eax, [r10+rdx*4+2Ch]
.text:0000000140005B9A                 bt      eax, r8d
.text:0000000140005B9E                 jnb     short loc_140005C00
.text:0000000140005BA0                 lea     rcx, [r9+r9*4]
.text:0000000140005BA4                 add     rcx, rcx
.text:0000000140005BA7                 cmp     [r10+rcx*8+29h], bl
.text:0000000140005BAC                 jb      short loc_140005C00
.text:0000000140005BAE                 and     qword ptr [r11-48h], 0
.text:0000000140005BB3                 lea     rdx, [r11+48h]
.text:0000000140005BB7                 mov     rax, cs:qword_14000D0E8
.text:0000000140005BBE                 mov     r9d, edi
.text:0000000140005BC1                 mov     rcx, [r10+rcx*8+18h]
.text:0000000140005BC6                 mov     r8, rsi
.text:0000000140005BC9                 mov     [r11-50h], r15
.text:0000000140005BCD                 mov     [r11-58h], rdx
.text:0000000140005BD1                 lea     rdx, [r11+40h]
.text:0000000140005BD5                 mov     [r11-60h], r15
.text:0000000140005BD9                 mov     [r11-68h], rdx
.text:0000000140005BDD                 lea     rdx, [r11+38h]
.text:0000000140005BE1                 mov     [r11-70h], r15
.text:0000000140005BE5                 mov     [r11-78h], rdx
.text:0000000140005BE9                 lea     rdx, [r11+30h]
.text:0000000140005BED                 mov     [r11-80h], r15
.text:0000000140005BF1                 mov     [rsp+0A8h+var_88], rdx
.text:0000000140005BF6                 lea     edx, [r15+27h]
.text:0000000140005BFA                 call    cs:__guard_dispatch_icall_fptr
.text:0000000140005C00
.text:0000000140005C00 loc_140005C00:                          ; CODE XREF: sub_140005B40+5E↑j
.text:0000000140005C00                                         ; sub_140005B40+6C↑j
.text:0000000140005C00                 and     [rsp+0A8h+var_40], 0
.text:0000000140005C06                 lea     rax, [rsp+0A8h+arg_40]
.text:0000000140005C0E                 mov     [rsp+0A8h+var_48], r15
.text:0000000140005C13                 mov     r9, rsi
.text:0000000140005C16                 mov     [rsp+0A8h+var_50], rax
.text:0000000140005C1B                 mov     r8d, ebp
.text:0000000140005C1E                 mov     [rsp+0A8h+var_58], r15
.text:0000000140005C23                 lea     rax, [rsp+0A8h+arg_38]
.text:0000000140005C2B                 mov     [rsp+0A8h+var_60], rax
.text:0000000140005C30                 mov     edx, ebx
.text:0000000140005C32                 mov     [rsp+0A8h+var_68], r15
.text:0000000140005C37                 lea     rax, [rsp+0A8h+arg_30]
.text:0000000140005C3F                 mov     [rsp+0A8h+var_70], rax
.text:0000000140005C44                 mov     rcx, r14
.text:0000000140005C47                 lea     rax, [rsp+0A8h+arg_28]
.text:0000000140005C4F                 mov     [rsp+0A8h+var_78], r15
.text:0000000140005C54                 mov     [rsp+0A8h+var_80], rax
.text:0000000140005C59                 mov     word ptr [rsp+0A8h+var_88], di
.text:0000000140005C5E                 call    WppAutoLogTrace
.text:0000000140005C63                 add     rsp, 78h
.text:0000000140005C67                 pop     r15
.text:0000000140005C69                 pop     r14
.text:0000000140005C6B                 pop     rdi
.text:0000000140005C6C                 pop     rsi
.text:0000000140005C6D                 pop     rbp
.text:0000000140005C6E                 pop     rbx
.text:0000000140005C6F                 retn
.text:0000000140005C6F sub_140005B40   endp
.text:0000000140005C6F
.text:0000000140005C70
.text:0000000140005C70 ; =============== S U B R O U T I N E =======================================
.text:0000000140005C70
.text:0000000140005C70
.text:0000000140005C70 ; __int64 sub_140005C70(__int64, unsigned __int8, unsigned int, unsigned __int16, __int64, ...)
.text:0000000140005C70 sub_140005C70   proc near               ; CODE XREF: sub_140004314+16B↑p
.text:0000000140005C70                                         ; DATA XREF: .pdata:000000014000E150↓o ...
.text:0000000140005C70
.text:0000000140005C70 var_48          = word ptr -48h
.text:0000000140005C70 var_40          = qword ptr -40h
.text:0000000140005C70 var_38          = qword ptr -38h
.text:0000000140005C70 var_30          = qword ptr -30h
.text:0000000140005C70 arg_20          = qword ptr  28h
.text:0000000140005C70 arg_28          = byte ptr  30h
.text:0000000140005C70
.text:0000000140005C70                 mov     r11, rsp
.text:0000000140005C73                 push    rbx
.text:0000000140005C74                 push    rbp
.text:0000000140005C75                 push    rsi
.text:0000000140005C76                 push    rdi
.text:0000000140005C77                 push    r14
.text:0000000140005C79                 sub     rsp, 40h
.text:0000000140005C7D                 mov     r10, cs:DeviceObject
.text:0000000140005C84                 mov     r14, rcx
.text:0000000140005C87                 mov     rsi, [rsp+68h+arg_20]
.text:0000000140005C8F                 mov     ebp, r8d
.text:0000000140005C92                 movzx   edi, r9w
.text:0000000140005C96                 mov     r9d, ebp
.text:0000000140005C99                 shr     r9, 10h
.text:0000000140005C9D                 movzx   ebx, dl
.text:0000000140005CA0                 lea     r8d, [rbp-1]
.text:0000000140005CA4                 mov     ecx, r8d
.text:0000000140005CA7                 and     r8d, 1Fh
.text:0000000140005CAB                 shr     rcx, 5
.text:0000000140005CAF                 lea     rax, [r9+r9*4]
.text:0000000140005CB3                 and     ecx, 7FFh
.text:0000000140005CB9                 lea     rdx, [rcx+rax*4]
.text:0000000140005CBD                 mov     eax, [r10+rdx*4+2Ch]
.text:0000000140005CC2                 bt      eax, r8d
.text:0000000140005CC6                 jnb     short loc_140005D08
.text:0000000140005CC8                 lea     rcx, [r9+r9*4]
.text:0000000140005CCC                 add     rcx, rcx
.text:0000000140005CCF                 cmp     [r10+rcx*8+29h], bl
.text:0000000140005CD4                 jb      short loc_140005D08
.text:0000000140005CD6                 and     qword ptr [r11-38h], 0
.text:0000000140005CDB                 lea     rdx, [r11+30h]
.text:0000000140005CDF                 mov     rax, cs:qword_14000D0E8
.text:0000000140005CE6                 mov     r9d, edi
.text:0000000140005CE9                 mov     rcx, [r10+rcx*8+18h]
.text:0000000140005CEE                 mov     r8, rsi
.text:0000000140005CF1                 mov     qword ptr [r11-40h], 8
.text:0000000140005CF9                 mov     [r11-48h], rdx
.text:0000000140005CFD                 mov     edx, 2Bh ; '+'
.text:0000000140005D02                 call    cs:__guard_dispatch_icall_fptr
.text:0000000140005D08
.text:0000000140005D08 loc_140005D08:                          ; CODE XREF: sub_140005C70+56↑j
.text:0000000140005D08                                         ; sub_140005C70+64↑j
.text:0000000140005D08                 and     [rsp+68h+var_30], 0
.text:0000000140005D0E                 lea     rax, [rsp+68h+arg_28]
.text:0000000140005D16                 mov     [rsp+68h+var_38], 8
.text:0000000140005D1F                 mov     r9, rsi
.text:0000000140005D22                 mov     [rsp+68h+var_40], rax
.text:0000000140005D27                 mov     r8d, ebp
.text:0000000140005D2A                 mov     edx, ebx
.text:0000000140005D2C                 mov     [rsp+68h+var_48], di
.text:0000000140005D31                 mov     rcx, r14
.text:0000000140005D34                 call    WppAutoLogTrace
.text:0000000140005D39                 add     rsp, 40h
.text:0000000140005D3D                 pop     r14
.text:0000000140005D3F                 pop     rdi
.text:0000000140005D40                 pop     rsi
.text:0000000140005D41                 pop     rbp
.text:0000000140005D42                 pop     rbx
.text:0000000140005D43                 retn
.text:0000000140005D43 sub_140005C70   endp
.text:0000000140005D43
.text:0000000140005D44
.text:0000000140005D44 ; =============== S U B R O U T I N E =======================================
.text:0000000140005D44
.text:0000000140005D44
.text:0000000140005D44 ; __int64 __fastcall sub_140005D44(__int64, unsigned __int8, __int64, unsigned __int16, __int64, const wchar_t *)
.text:0000000140005D44 sub_140005D44   proc near               ; CODE XREF: CallbackRoutine+10D↑p
.text:0000000140005D44                                         ; DATA XREF: .pdata:000000014000E15C↓o ...
.text:0000000140005D44
.text:0000000140005D44 var_58          = qword ptr -58h
.text:0000000140005D44 var_50          = qword ptr -50h
.text:0000000140005D44 var_48          = qword ptr -48h
.text:0000000140005D44 var_40          = qword ptr -40h
.text:0000000140005D44 arg_0           = qword ptr  8
.text:0000000140005D44 arg_8           = qword ptr  10h
.text:0000000140005D44 arg_10          = dword ptr  18h
.text:0000000140005D44 arg_20          = qword ptr  28h
.text:0000000140005D44 arg_28          = qword ptr  30h
.text:0000000140005D44
.text:0000000140005D44                 mov     [rsp+arg_8], rbx
.text:0000000140005D49                 mov     [rsp+arg_10], r8d
.text:0000000140005D4E                 mov     [rsp+arg_0], rcx
.text:0000000140005D53                 push    rbp
.text:0000000140005D54                 push    rsi
.text:0000000140005D55                 push    rdi
.text:0000000140005D56                 push    r12
.text:0000000140005D58                 push    r13
.text:0000000140005D5A                 push    r14
.text:0000000140005D5C                 push    r15
.text:0000000140005D5E                 sub     rsp, 40h
.text:0000000140005D62                 mov     r15, cs:DeviceObject
.text:0000000140005D69                 lea     ebx, [r8-1]
.text:0000000140005D6D                 mov     r10d, ebx
.text:0000000140005D70                 mov     esi, r8d
.text:0000000140005D73                 shr     r10, 5
.text:0000000140005D77                 lea     r14, aNull      ; "NULL"
.text:0000000140005D7E                 and     ebx, 1Fh
.text:0000000140005D81                 shr     rsi, 10h
.text:0000000140005D85                 and     r10d, 7FFh
.text:0000000140005D8C                 movzx   r13d, r9w
.text:0000000140005D90                 or      rdi, 0FFFFFFFFFFFFFFFFh
.text:0000000140005D94                 movzx   r12d, dl
.text:0000000140005D98                 mov     edx, ebx
.text:0000000140005D9A                 xor     r9d, r9d
.text:0000000140005D9D                 mov     rbx, [rsp+78h+arg_28]
.text:0000000140005DA5                 lea     rax, [rsi+rsi*4]
.text:0000000140005DA9                 lea     r11, [r10+rax*4]
.text:0000000140005DAD                 mov     eax, [r15+r11*4+2Ch]
.text:0000000140005DB2                 lea     ebp, [rdi+0Bh]
.text:0000000140005DB5                 bt      eax, edx
.text:0000000140005DB8                 jnb     short loc_140005E35
.text:0000000140005DBA                 lea     r10, [rsi+rsi*4]
.text:0000000140005DBE                 add     r10, r10
.text:0000000140005DC1                 cmp     [r15+r10*8+29h], r12b
.text:0000000140005DC6                 jb      short loc_140005E35
.text:0000000140005DC8                 test    rbx, rbx
.text:0000000140005DCB                 jz      short loc_140005DE4
.text:0000000140005DCD                 mov     rax, rdi
.text:0000000140005DD0
.text:0000000140005DD0 loc_140005DD0:                          ; CODE XREF: sub_140005D44+94↓j
.text:0000000140005DD0                 inc     rax
.text:0000000140005DD3                 cmp     [rbx+rax*2], r9w
.text:0000000140005DD8                 jnz     short loc_140005DD0
.text:0000000140005DDA                 lea     rdx, ds:2[rax*2]
.text:0000000140005DE2                 jmp     short loc_140005DE7
.text:0000000140005DE4 ; ---------------------------------------------------------------------------
.text:0000000140005DE4
.text:0000000140005DE4 loc_140005DE4:                          ; CODE XREF: sub_140005D44+87↑j
.text:0000000140005DE4                 mov     rdx, rbp
.text:0000000140005DE7
.text:0000000140005DE7 loc_140005DE7:                          ; CODE XREF: sub_140005D44+9E↑j
.text:0000000140005DE7                 mov     rax, cs:qword_14000D0E8
.text:0000000140005DEE                 test    rbx, rbx
.text:0000000140005DF1                 mov     r8, [rsp+78h+arg_20]
.text:0000000140005DF9                 mov     rcx, r14
.text:0000000140005DFC                 mov     [rsp+78h+var_48], r9
.text:0000000140005E01                 cmovnz  rcx, rbx
.text:0000000140005E05                 mov     [rsp+78h+var_50], rdx
.text:0000000140005E0A                 mov     r9d, r13d
.text:0000000140005E0D                 mov     [rsp+78h+var_58], rcx
.text:0000000140005E12                 mov     edx, 2Bh ; '+'
.text:0000000140005E17                 mov     rcx, [r15+r10*8+18h]
.text:0000000140005E1C                 call    cs:__guard_dispatch_icall_fptr
.text:0000000140005E22                 mov     r8d, [rsp+78h+arg_10]
.text:0000000140005E2A                 xor     r9d, r9d
.text:0000000140005E2D                 mov     rcx, [rsp+78h+arg_0]
.text:0000000140005E35
.text:0000000140005E35 loc_140005E35:                          ; CODE XREF: sub_140005D44+74↑j
.text:0000000140005E35                                         ; sub_140005D44+82↑j
.text:0000000140005E35                 test    rbx, rbx
.text:0000000140005E38                 jz      short loc_140005E4F
.text:0000000140005E3A
.text:0000000140005E3A loc_140005E3A:                          ; CODE XREF: sub_140005D44+FE↓j
.text:0000000140005E3A                 inc     rdi
.text:0000000140005E3D                 cmp     [rbx+rdi*2], r9w
.text:0000000140005E42                 jnz     short loc_140005E3A
.text:0000000140005E44                 lea     rbp, ds:2[rdi*2]
.text:0000000140005E4C                 test    rbx, rbx
.text:0000000140005E4F
.text:0000000140005E4F loc_140005E4F:                          ; CODE XREF: sub_140005D44+F4↑j
.text:0000000140005E4F                 mov     [rsp+78h+var_40], r9
.text:0000000140005E54                 cmovnz  r14, rbx
.text:0000000140005E58                 mov     r9, [rsp+78h+arg_20]
.text:0000000140005E60                 mov     edx, r12d
.text:0000000140005E63                 mov     [rsp+78h+var_48], rbp
.text:0000000140005E68                 mov     [rsp+78h+var_50], r14
.text:0000000140005E6D                 mov     word ptr [rsp+78h+var_58], r13w
.text:0000000140005E73                 call    WppAutoLogTrace
.text:0000000140005E78                 mov     rbx, [rsp+78h+arg_8]
.text:0000000140005E80                 add     rsp, 40h
.text:0000000140005E84                 pop     r15
.text:0000000140005E86                 pop     r14
.text:0000000140005E88                 pop     r13
.text:0000000140005E8A                 pop     r12
.text:0000000140005E8C                 pop     rdi
.text:0000000140005E8D                 pop     rsi
.text:0000000140005E8E                 pop     rbp
.text:0000000140005E8F                 retn
.text:0000000140005E8F sub_140005D44   endp
.text:0000000140005E8F
.text:0000000140005E90
.text:0000000140005E90 ; =============== S U B R O U T I N E =======================================
.text:0000000140005E90
.text:0000000140005E90
.text:0000000140005E90 ; __int64 sub_140005E90(__int64, unsigned __int8, unsigned int, unsigned __int16, __int64, unsigned __int16 *, ...)
.text:0000000140005E90 sub_140005E90   proc near               ; CODE XREF: sub_140005350+188↑p
.text:0000000140005E90                                         ; sub_140005564+178↑p ...
.text:0000000140005E90
.text:0000000140005E90 var_98          = qword ptr -98h
.text:0000000140005E90 var_90          = qword ptr -90h
.text:0000000140005E90 var_88          = qword ptr -88h
.text:0000000140005E90 var_80          = qword ptr -80h
.text:0000000140005E90 var_78          = qword ptr -78h
.text:0000000140005E90 var_70          = qword ptr -70h
.text:0000000140005E90 var_68          = qword ptr -68h
.text:0000000140005E90 var_60          = qword ptr -60h
.text:0000000140005E90 var_58          = qword ptr -58h
.text:0000000140005E90 arg_20          = qword ptr  28h
.text:0000000140005E90 arg_28          = qword ptr  30h
.text:0000000140005E90 arg_30          = byte ptr  38h
.text:0000000140005E90
.text:0000000140005E90                 push    rbx
.text:0000000140005E92                 push    rbp
.text:0000000140005E93                 push    rsi
.text:0000000140005E94                 push    rdi
.text:0000000140005E95                 push    r12
.text:0000000140005E97                 push    r13
.text:0000000140005E99                 push    r14
.text:0000000140005E9B                 push    r15
.text:0000000140005E9D                 sub     rsp, 78h
.text:0000000140005EA1                 mov     r11, cs:DeviceObject
.text:0000000140005EA8                 lea     rsi, aNull      ; "NULL"
.text:0000000140005EAF                 mov     r12, [rsp+0B8h+arg_20]
.text:0000000140005EB7                 lea     rbp, qword_14000A890
.text:0000000140005EBE                 mov     rbx, [rsp+0B8h+arg_28]
.text:0000000140005EC6                 mov     r10, rcx
.text:0000000140005EC9                 mov     r13d, r8d
.text:0000000140005ECC                 mov     [rsp+0B8h+var_58], rcx
.text:0000000140005ED1                 movzx   r15d, r9w
.text:0000000140005ED5                 mov     r9d, r13d
.text:0000000140005ED8                 shr     r9, 10h
.text:0000000140005EDC                 lea     r8d, [r13-1]
.text:0000000140005EE0                 movzx   r14d, dl
.text:0000000140005EE4                 mov     ecx, r8d
.text:0000000140005EE7                 and     r8d, 1Fh
.text:0000000140005EEB                 shr     rcx, 5
.text:0000000140005EEF                 and     ecx, 7FFh
.text:0000000140005EF5                 lea     rax, [r9+r9*4]
.text:0000000140005EF9                 lea     rdx, [rcx+rax*4]
.text:0000000140005EFD                 mov     eax, [r11+rdx*4+2Ch]
.text:0000000140005F02                 xor     edx, edx
.text:0000000140005F04                 bt      eax, r8d
.text:0000000140005F08                 lea     edi, [rdx+8]
.text:0000000140005F0B                 jnb     loc_140005FA2
.text:0000000140005F11                 lea     r10, [r9+r9*4]
.text:0000000140005F15                 add     r10, r10
.text:0000000140005F18                 cmp     [r11+r10*8+29h], r14b
.text:0000000140005F1D                 jb      short loc_140005F9D
.text:0000000140005F1F                 test    rbx, rbx
.text:0000000140005F22                 jz      short loc_140005F2A
.text:0000000140005F24                 movzx   r8d, word ptr [rbx]
.text:0000000140005F28                 jmp     short loc_140005F2D
.text:0000000140005F2A ; ---------------------------------------------------------------------------
.text:0000000140005F2A
.text:0000000140005F2A loc_140005F2A:                          ; CODE XREF: sub_140005E90+92↑j
.text:0000000140005F2A                 mov     r8, rdi
.text:0000000140005F2D
.text:0000000140005F2D loc_140005F2D:                          ; CODE XREF: sub_140005E90+98↑j
.text:0000000140005F2D                 test    rbx, rbx
.text:0000000140005F30                 jz      short loc_140005F3D
.text:0000000140005F32                 cmp     [rbx], dx
.text:0000000140005F35                 jz      short loc_140005F3D
.text:0000000140005F37                 mov     rdx, [rbx+8]
.text:0000000140005F3B                 jmp     short loc_140005F40
.text:0000000140005F3D ; ---------------------------------------------------------------------------
.text:0000000140005F3D
.text:0000000140005F3D loc_140005F3D:                          ; CODE XREF: sub_140005E90+A0↑j
.text:0000000140005F3D                                         ; sub_140005E90+A5↑j
.text:0000000140005F3D                 mov     rdx, rsi
.text:0000000140005F40
.text:0000000140005F40 loc_140005F40:                          ; CODE XREF: sub_140005E90+AB↑j
.text:0000000140005F40                 mov     rax, cs:qword_14000D0E8
.text:0000000140005F47                 lea     r9, [rsp+0B8h+arg_30]
.text:0000000140005F4F                 test    rbx, rbx
.text:0000000140005F52                 mov     rcx, rbp
.text:0000000140005F55                 cmovnz  rcx, rbx
.text:0000000140005F59                 and     [rsp+0B8h+var_68], 0
.text:0000000140005F5F                 mov     [rsp+0B8h+var_70], 4
.text:0000000140005F68                 mov     [rsp+0B8h+var_78], r9
.text:0000000140005F6D                 mov     r9d, r15d
.text:0000000140005F70                 mov     [rsp+0B8h+var_80], r8
.text:0000000140005F75                 mov     r8, r12
.text:0000000140005F78                 mov     [rsp+0B8h+var_88], rdx
.text:0000000140005F7D                 mov     edx, 2Bh ; '+'
.text:0000000140005F82                 mov     [rsp+0B8h+var_90], 2
.text:0000000140005F8B                 mov     [rsp+0B8h+var_98], rcx
.text:0000000140005F90                 mov     rcx, [r11+r10*8+18h]
.text:0000000140005F95                 call    cs:__guard_dispatch_icall_fptr
.text:0000000140005F9B                 xor     edx, edx
.text:0000000140005F9D
.text:0000000140005F9D loc_140005F9D:                          ; CODE XREF: sub_140005E90+8D↑j
.text:0000000140005F9D                 mov     r10, [rsp+0B8h+var_58]
.text:0000000140005FA2
.text:0000000140005FA2 loc_140005FA2:                          ; CODE XREF: sub_140005E90+7B↑j
.text:0000000140005FA2                 test    rbx, rbx
.text:0000000140005FA5                 jz      short loc_140005FB6
.text:0000000140005FA7                 movzx   edi, word ptr [rbx]
.text:0000000140005FAA                 cmp     [rbx], dx
.text:0000000140005FAD                 jz      short loc_140005FB3
.text:0000000140005FAF                 mov     rsi, [rbx+8]
.text:0000000140005FB3
.text:0000000140005FB3 loc_140005FB3:                          ; CODE XREF: sub_140005E90+11D↑j
.text:0000000140005FB3                 test    rbx, rbx
.text:0000000140005FB6
.text:0000000140005FB6 loc_140005FB6:                          ; CODE XREF: sub_140005E90+115↑j
.text:0000000140005FB6                 mov     [rsp+0B8h+var_60], rdx
.text:0000000140005FBB                 lea     rax, [rsp+0B8h+arg_30]
.text:0000000140005FC3                 mov     [rsp+0B8h+var_68], 4
.text:0000000140005FCC                 cmovnz  rbp, rbx
.text:0000000140005FD0                 mov     [rsp+0B8h+var_70], rax
.text:0000000140005FD5                 mov     r9, r12
.text:0000000140005FD8                 mov     [rsp+0B8h+var_78], rdi
.text:0000000140005FDD                 mov     r8d, r13d
.text:0000000140005FE0                 mov     [rsp+0B8h+var_80], rsi
.text:0000000140005FE5                 mov     edx, r14d
.text:0000000140005FE8                 mov     [rsp+0B8h+var_88], 2
.text:0000000140005FF1                 mov     rcx, r10
.text:0000000140005FF4                 mov     [rsp+0B8h+var_90], rbp
.text:0000000140005FF9                 mov     word ptr [rsp+0B8h+var_98], r15w
.text:0000000140005FFF                 call    WppAutoLogTrace
.text:0000000140006004                 add     rsp, 78h
.text:0000000140006008                 pop     r15
.text:000000014000600A                 pop     r14
.text:000000014000600C                 pop     r13
.text:000000014000600E                 pop     r12
.text:0000000140006010                 pop     rdi
.text:0000000140006011                 pop     rsi
.text:0000000140006012                 pop     rbp
.text:0000000140006013                 pop     rbx
.text:0000000140006014                 retn
.text:0000000140006014 sub_140005E90   endp
.text:0000000140006014
.text:0000000140006014 ; ---------------------------------------------------------------------------
.text:0000000140006015 algn_140006015:                         ; DATA XREF: .pdata:000000014000E174↓o
.text:0000000140006015                 align 8
.text:0000000140006018
.text:0000000140006018 ; =============== S U B R O U T I N E =======================================
.text:0000000140006018
.text:0000000140006018
.text:0000000140006018 ; __int64 sub_140006018(__int64, unsigned __int8, unsigned int, unsigned __int16, __int64, unsigned __int16 *, ...)
.text:0000000140006018 sub_140006018   proc near               ; CODE XREF: sub_140005350+144↑p
.text:0000000140006018                                         ; DATA XREF: .pdata:000000014000E180↓o
.text:0000000140006018
.text:0000000140006018 var_A8          = qword ptr -0A8h
.text:0000000140006018 var_A0          = qword ptr -0A0h
.text:0000000140006018 var_98          = qword ptr -98h
.text:0000000140006018 var_90          = qword ptr -90h
.text:0000000140006018 var_88          = qword ptr -88h
.text:0000000140006018 var_80          = qword ptr -80h
.text:0000000140006018 var_78          = qword ptr -78h
.text:0000000140006018 var_70          = qword ptr -70h
.text:0000000140006018 var_68          = qword ptr -68h
.text:0000000140006018 var_60          = qword ptr -60h
.text:0000000140006018 var_58          = qword ptr -58h
.text:0000000140006018 arg_20          = qword ptr  28h
.text:0000000140006018 arg_28          = qword ptr  30h
.text:0000000140006018 arg_30          = qword ptr  38h
.text:0000000140006018 arg_38          = byte ptr  40h
.text:0000000140006018
.text:0000000140006018                 push    rbx
.text:000000014000601A                 push    rbp
.text:000000014000601B                 push    rsi
.text:000000014000601C                 push    rdi
.text:000000014000601D                 push    r12
.text:000000014000601F                 push    r13
.text:0000000140006021                 push    r14
.text:0000000140006023                 push    r15
.text:0000000140006025                 sub     rsp, 88h
.text:000000014000602C                 mov     r11, cs:DeviceObject
.text:0000000140006033                 lea     rsi, aNull      ; "NULL"
.text:000000014000603A                 mov     r12, [rsp+0C8h+arg_20]
.text:0000000140006042                 lea     rbp, qword_14000A890
.text:0000000140006049                 mov     rbx, [rsp+0C8h+arg_28]
.text:0000000140006051                 mov     r10, rcx
.text:0000000140006054                 mov     r13d, r8d
.text:0000000140006057                 mov     [rsp+0C8h+var_58], rcx
.text:000000014000605C                 movzx   r15d, r9w
.text:0000000140006060                 mov     r9d, r13d
.text:0000000140006063                 shr     r9, 10h
.text:0000000140006067                 lea     r8d, [r13-1]
.text:000000014000606B                 movzx   r14d, dl
.text:000000014000606F                 mov     ecx, r8d
.text:0000000140006072                 and     r8d, 1Fh
.text:0000000140006076                 shr     rcx, 5
.text:000000014000607A                 and     ecx, 7FFh
.text:0000000140006080                 lea     rax, [r9+r9*4]
.text:0000000140006084                 lea     rdx, [rcx+rax*4]
.text:0000000140006088                 mov     eax, [r11+rdx*4+2Ch]
.text:000000014000608D                 xor     edx, edx
.text:000000014000608F                 bt      eax, r8d
.text:0000000140006093                 lea     edi, [rdx+8]
.text:0000000140006096                 jnb     loc_140006147
.text:000000014000609C                 lea     r10, [r9+r9*4]
.text:00000001400060A0                 add     r10, r10
.text:00000001400060A3                 cmp     [r11+r10*8+29h], r14b
.text:00000001400060A8                 jb      loc_140006142
.text:00000001400060AE                 test    rbx, rbx
.text:00000001400060B1                 jz      short loc_1400060B9
.text:00000001400060B3                 movzx   r8d, word ptr [rbx]
.text:00000001400060B7                 jmp     short loc_1400060BC
.text:00000001400060B9 ; ---------------------------------------------------------------------------
.text:00000001400060B9
.text:00000001400060B9 loc_1400060B9:                          ; CODE XREF: sub_140006018+99↑j
.text:00000001400060B9                 mov     r8, rdi
.text:00000001400060BC
.text:00000001400060BC loc_1400060BC:                          ; CODE XREF: sub_140006018+9F↑j
.text:00000001400060BC                 test    rbx, rbx
.text:00000001400060BF                 jz      short loc_1400060CC
.text:00000001400060C1                 cmp     [rbx], dx
.text:00000001400060C4                 jz      short loc_1400060CC
.text:00000001400060C6                 mov     rdx, [rbx+8]
.text:00000001400060CA                 jmp     short loc_1400060CF
.text:00000001400060CC ; ---------------------------------------------------------------------------
.text:00000001400060CC
.text:00000001400060CC loc_1400060CC:                          ; CODE XREF: sub_140006018+A7↑j
.text:00000001400060CC                                         ; sub_140006018+AC↑j
.text:00000001400060CC                 mov     rdx, rsi
.text:00000001400060CF
.text:00000001400060CF loc_1400060CF:                          ; CODE XREF: sub_140006018+B2↑j
.text:00000001400060CF                 mov     rax, cs:qword_14000D0E8
.text:00000001400060D6                 lea     r9, [rsp+0C8h+arg_38]
.text:00000001400060DE                 test    rbx, rbx
.text:00000001400060E1                 mov     rcx, rbp
.text:00000001400060E4                 cmovnz  rcx, rbx
.text:00000001400060E8                 and     [rsp+0C8h+var_68], 0
.text:00000001400060EE                 mov     [rsp+0C8h+var_70], 4
.text:00000001400060F7                 mov     [rsp+0C8h+var_78], r9
.text:00000001400060FC                 lea     r9, [rsp+0C8h+arg_30]
.text:0000000140006104                 mov     [rsp+0C8h+var_80], 4
.text:000000014000610D                 mov     [rsp+0C8h+var_88], r9
.text:0000000140006112                 mov     r9d, r15d
.text:0000000140006115                 mov     [rsp+0C8h+var_90], r8
.text:000000014000611A                 mov     r8, r12
.text:000000014000611D                 mov     [rsp+0C8h+var_98], rdx
.text:0000000140006122                 mov     edx, 2Bh ; '+'
.text:0000000140006127                 mov     [rsp+0C8h+var_A0], 2
.text:0000000140006130                 mov     [rsp+0C8h+var_A8], rcx
.text:0000000140006135                 mov     rcx, [r11+r10*8+18h]
.text:000000014000613A                 call    cs:__guard_dispatch_icall_fptr
.text:0000000140006140                 xor     edx, edx
.text:0000000140006142
.text:0000000140006142 loc_140006142:                          ; CODE XREF: sub_140006018+90↑j
.text:0000000140006142                 mov     r10, [rsp+0C8h+var_58]
.text:0000000140006147
.text:0000000140006147 loc_140006147:                          ; CODE XREF: sub_140006018+7E↑j
.text:0000000140006147                 test    rbx, rbx
.text:000000014000614A                 jz      short loc_14000615B
.text:000000014000614C                 movzx   edi, word ptr [rbx]
.text:000000014000614F                 cmp     [rbx], dx
.text:0000000140006152                 jz      short loc_140006158
.text:0000000140006154                 mov     rsi, [rbx+8]
.text:0000000140006158
.text:0000000140006158 loc_140006158:                          ; CODE XREF: sub_140006018+13A↑j
.text:0000000140006158                 test    rbx, rbx
.text:000000014000615B
.text:000000014000615B loc_14000615B:                          ; CODE XREF: sub_140006018+132↑j
.text:000000014000615B                 mov     [rsp+0C8h+var_60], rdx
.text:0000000140006160                 lea     rax, [rsp+0C8h+arg_38]
.text:0000000140006168                 mov     [rsp+0C8h+var_68], 4
.text:0000000140006171                 cmovnz  rbp, rbx
.text:0000000140006175                 mov     [rsp+0C8h+var_70], rax
.text:000000014000617A                 mov     r9, r12
.text:000000014000617D                 mov     [rsp+0C8h+var_78], 4
.text:0000000140006186                 lea     rax, [rsp+0C8h+arg_30]
.text:000000014000618E                 mov     [rsp+0C8h+var_80], rax
.text:0000000140006193                 mov     r8d, r13d
.text:0000000140006196                 mov     [rsp+0C8h+var_88], rdi
.text:000000014000619B                 mov     edx, r14d
.text:000000014000619E                 mov     [rsp+0C8h+var_90], rsi
.text:00000001400061A3                 mov     rcx, r10
.text:00000001400061A6                 mov     [rsp+0C8h+var_98], 2
.text:00000001400061AF                 mov     [rsp+0C8h+var_A0], rbp
.text:00000001400061B4                 mov     word ptr [rsp+0C8h+var_A8], r15w
.text:00000001400061BA                 call    WppAutoLogTrace
.text:00000001400061BF                 add     rsp, 88h
.text:00000001400061C6                 pop     r15
.text:00000001400061C8                 pop     r14
.text:00000001400061CA                 pop     r13
.text:00000001400061CC                 pop     r12
.text:00000001400061CE                 pop     rdi
.text:00000001400061CF                 pop     rsi
.text:00000001400061D0                 pop     rbp
.text:00000001400061D1                 pop     rbx
.text:00000001400061D2                 retn
.text:00000001400061D2 sub_140006018   endp
.text:00000001400061D2
.text:00000001400061D2 ; ---------------------------------------------------------------------------
.text:00000001400061D3 algn_1400061D3:                         ; DATA XREF: .pdata:000000014000E180↓o
.text:00000001400061D3                 align 4
.text:00000001400061D4
.text:00000001400061D4 ; =============== S U B R O U T I N E =======================================
.text:00000001400061D4
.text:00000001400061D4
.text:00000001400061D4 ; __int64 __fastcall sub_1400061D4(__int64, unsigned __int8, unsigned int, unsigned __int16, __int64, __int64)
.text:00000001400061D4 sub_1400061D4   proc near               ; CODE XREF: CallbackRoutine+38C↑p
.text:00000001400061D4                                         ; DATA XREF: .pdata:000000014000E18C↓o
.text:00000001400061D4
.text:00000001400061D4 var_38          = qword ptr -38h
.text:00000001400061D4 var_30          = qword ptr -30h
.text:00000001400061D4 var_28          = qword ptr -28h
.text:00000001400061D4 var_20          = qword ptr -20h
.text:00000001400061D4 arg_0           = qword ptr  8
.text:00000001400061D4 arg_8           = qword ptr  10h
.text:00000001400061D4 arg_10          = qword ptr  18h
.text:00000001400061D4 arg_20          = qword ptr  28h
.text:00000001400061D4 arg_28          = qword ptr  30h
.text:00000001400061D4
.text:00000001400061D4                 mov     [rsp+arg_0], rbx
.text:00000001400061D9                 mov     [rsp+arg_8], rbp
.text:00000001400061DE                 mov     [rsp+arg_10], rsi
.text:00000001400061E3                 push    rdi
.text:00000001400061E4                 push    r14
.text:00000001400061E6                 push    r15
.text:00000001400061E8                 sub     rsp, 40h
.text:00000001400061EC                 mov     r14d, r8d
.text:00000001400061EF                 mov     r15, rcx
.text:00000001400061F2                 mov     edi, r8d
.text:00000001400061F5                 shr     rdi, 10h
.text:00000001400061F9                 movzx   esi, dl
.text:00000001400061FC                 lea     ebx, [r14-1]
.text:0000000140006200                 movzx   ebp, r9w
.text:0000000140006204                 mov     r10d, ebx
.text:0000000140006207                 and     ebx, 1Fh
.text:000000014000620A                 shr     r10, 5
.text:000000014000620E                 lea     rax, [rdi+rdi*4]
.text:0000000140006212                 and     r10d, 7FFh
.text:0000000140006219                 mov     edx, ebx
.text:000000014000621B                 mov     rbx, [rsp+58h+arg_28]
.text:0000000140006223                 lea     r11, [r10+rax*4]
.text:0000000140006227                 mov     r10, cs:DeviceObject
.text:000000014000622E                 mov     eax, [r10+r11*4+2Ch]
.text:0000000140006233                 bt      eax, edx
.text:0000000140006236                 jnb     short loc_14000627C
.text:0000000140006238                 lea     rcx, [rdi+rdi*4]
.text:000000014000623C                 add     rcx, rcx
.text:000000014000623F                 cmp     [r10+rcx*8+29h], sil
.text:0000000140006244                 jb      short loc_14000627C
.text:0000000140006246                 and     [rsp+58h+var_28], 0
.text:000000014000624C                 mov     r9d, ebp
.text:000000014000624F                 mov     rax, cs:qword_14000D0E8
.text:0000000140006256                 mov     edx, 2Bh ; '+'
.text:000000014000625B                 mov     r8, [rsp+58h+arg_20]
.text:0000000140006263                 mov     rcx, [r10+rcx*8+18h]
.text:0000000140006268                 mov     [rsp+58h+var_30], 10h
.text:0000000140006271                 mov     [rsp+58h+var_38], rbx
.text:0000000140006276                 call    cs:__guard_dispatch_icall_fptr
.text:000000014000627C
.text:000000014000627C loc_14000627C:                          ; CODE XREF: sub_1400061D4+62↑j
.text:000000014000627C                                         ; sub_1400061D4+70↑j
.text:000000014000627C                 and     [rsp+58h+var_20], 0
.text:0000000140006282                 mov     r8d, r14d
.text:0000000140006285                 mov     r9, [rsp+58h+arg_20]
.text:000000014000628D                 mov     edx, esi
.text:000000014000628F                 mov     [rsp+58h+var_28], 10h
.text:0000000140006298                 mov     rcx, r15
.text:000000014000629B                 mov     [rsp+58h+var_30], rbx
.text:00000001400062A0                 mov     word ptr [rsp+58h+var_38], bp
.text:00000001400062A5                 call    WppAutoLogTrace
.text:00000001400062AA                 mov     rbx, [rsp+58h+arg_0]
.text:00000001400062AF                 mov     rbp, [rsp+58h+arg_8]
.text:00000001400062B4                 mov     rsi, [rsp+58h+arg_10]
.text:00000001400062B9                 add     rsp, 40h
.text:00000001400062BD                 pop     r15
.text:00000001400062BF                 pop     r14
.text:00000001400062C1                 pop     rdi
.text:00000001400062C2                 retn
.text:00000001400062C2 sub_1400061D4   endp
.text:00000001400062C2
.text:00000001400062C2 ; ---------------------------------------------------------------------------
.text:00000001400062C3 algn_1400062C3:                         ; DATA XREF: .pdata:000000014000E18C↓o
.text:00000001400062C3                 align 4
.text:00000001400062C4
.text:00000001400062C4 ; =============== S U B R O U T I N E =======================================
.text:00000001400062C4
.text:00000001400062C4
.text:00000001400062C4 ; __int64 __fastcall sub_1400062C4(__int64, unsigned __int8, unsigned int, unsigned __int16, __int64, __int64, __int64)
.text:00000001400062C4 sub_1400062C4   proc near               ; CODE XREF: sub_140002950+D2↑p
.text:00000001400062C4                                         ; sub_140002FE0+100↑p
.text:00000001400062C4                                         ; DATA XREF: ...
.text:00000001400062C4
.text:00000001400062C4 var_88          = qword ptr -88h
.text:00000001400062C4 var_80          = qword ptr -80h
.text:00000001400062C4 var_78          = qword ptr -78h
.text:00000001400062C4 var_70          = qword ptr -70h
.text:00000001400062C4 var_68          = qword ptr -68h
.text:00000001400062C4 var_60          = qword ptr -60h
.text:00000001400062C4 var_58          = qword ptr -58h
.text:00000001400062C4 var_50          = qword ptr -50h
.text:00000001400062C4 var_48          = qword ptr -48h
.text:00000001400062C4 arg_20          = qword ptr  28h
.text:00000001400062C4 arg_28          = qword ptr  30h
.text:00000001400062C4 arg_30          = qword ptr  38h
.text:00000001400062C4
.text:00000001400062C4 ; __unwind { // __GSHandlerCheck
.text:00000001400062C4                 mov     r11, rsp
.text:00000001400062C7                 push    rbx
.text:00000001400062C8                 push    rbp
.text:00000001400062C9                 push    rsi
.text:00000001400062CA                 push    rdi
.text:00000001400062CB                 push    r14
.text:00000001400062CD                 push    r15
.text:00000001400062CF                 sub     rsp, 78h
.text:00000001400062D3                 mov     rax, cs:__security_cookie
.text:00000001400062DA                 xor     rax, rsp
.text:00000001400062DD                 mov     [rsp+0A8h+var_48], rax
.text:00000001400062E2                 mov     rax, [rsp+0A8h+arg_28]
.text:00000001400062EA                 mov     r14, rcx
.text:00000001400062ED                 mov     rsi, [rsp+0A8h+arg_20]
.text:00000001400062F5                 mov     r15d, 8
.text:00000001400062FB                 mov     [r11-50h], rax
.text:00000001400062FF                 mov     rax, [rsp+0A8h+arg_30]
.text:0000000140006307                 mov     ebp, r8d
.text:000000014000630A                 mov     [r11-58h], rax
.text:000000014000630E                 mov     r10, cs:DeviceObject
.text:0000000140006315                 movzx   edi, r9w
.text:0000000140006319                 mov     r9d, ebp
.text:000000014000631C                 lea     r8d, [rbp-1]
.text:0000000140006320                 shr     r9, 10h
.text:0000000140006324                 mov     ecx, r8d
.text:0000000140006327                 movzx   ebx, dl
.text:000000014000632A                 shr     rcx, 5
.text:000000014000632E                 and     r8d, 1Fh
.text:0000000140006332                 and     ecx, 7FFh
.text:0000000140006338                 lea     rax, [r9+r9*4]
.text:000000014000633C                 lea     rdx, [rcx+rax*4]
.text:0000000140006340                 mov     eax, [r10+rdx*4+2Ch]
.text:0000000140006345                 bt      eax, r8d
.text:0000000140006349                 jnb     short loc_140006393
.text:000000014000634B                 lea     rcx, [r9+r9*4]
.text:000000014000634F                 add     rcx, rcx
.text:0000000140006352                 cmp     [r10+rcx*8+29h], bl
.text:0000000140006357                 jb      short loc_140006393
.text:0000000140006359                 and     qword ptr [r11-68h], 0
.text:000000014000635E                 lea     rdx, [r11-58h]
.text:0000000140006362                 mov     rax, cs:qword_14000D0E8
.text:0000000140006369                 mov     r9d, edi
.text:000000014000636C                 mov     rcx, [r10+rcx*8+18h]
.text:0000000140006371                 mov     r8, rsi
.text:0000000140006374                 mov     [r11-70h], r15
.text:0000000140006378                 mov     [r11-78h], rdx
.text:000000014000637C                 lea     rdx, [r11-50h]
.text:0000000140006380                 mov     [r11-80h], r15
.text:0000000140006384                 mov     [rsp+0A8h+var_88], rdx
.text:0000000140006389                 lea     edx, [r15+23h]
.text:000000014000638D                 call    cs:__guard_dispatch_icall_fptr
.text:0000000140006393
.text:0000000140006393 loc_140006393:                          ; CODE XREF: sub_1400062C4+85↑j
.text:0000000140006393                                         ; sub_1400062C4+93↑j
.text:0000000140006393                 and     [rsp+0A8h+var_60], 0
.text:0000000140006399                 lea     rax, [rsp+0A8h+var_58]
.text:000000014000639E                 mov     [rsp+0A8h+var_68], r15
.text:00000001400063A3                 mov     r9, rsi
.text:00000001400063A6                 mov     [rsp+0A8h+var_70], rax
.text:00000001400063AB                 mov     r8d, ebp
.text:00000001400063AE                 lea     rax, [rsp+0A8h+var_50]
.text:00000001400063B3                 mov     [rsp+0A8h+var_78], r15
.text:00000001400063B8                 mov     [rsp+0A8h+var_80], rax
.text:00000001400063BD                 mov     edx, ebx
.text:00000001400063BF                 mov     rcx, r14
.text:00000001400063C2                 mov     word ptr [rsp+0A8h+var_88], di
.text:00000001400063C7                 call    WppAutoLogTrace
.text:00000001400063CC                 mov     rcx, [rsp+0A8h+var_48]
.text:00000001400063D1                 xor     rcx, rsp        ; StackCookie
.text:00000001400063D4                 call    __security_check_cookie
.text:00000001400063D9                 add     rsp, 78h
.text:00000001400063DD                 pop     r15
.text:00000001400063DF                 pop     r14
.text:00000001400063E1                 pop     rdi
.text:00000001400063E2                 pop     rsi
.text:00000001400063E3                 pop     rbp
.text:00000001400063E4                 pop     rbx
.text:00000001400063E5                 retn
.text:00000001400063E5 ; } // starts at 1400062C4
.text:00000001400063E5 sub_1400062C4   endp
.text:00000001400063E5
.text:00000001400063E5 ; ---------------------------------------------------------------------------
.text:00000001400063E6 algn_1400063E6:                         ; DATA XREF: .pdata:000000014000E198↓o
.text:00000001400063E6                 align 10h
.text:00000001400063F0
.text:00000001400063F0 ; =============== S U B R O U T I N E =======================================
.text:00000001400063F0
.text:00000001400063F0
.text:00000001400063F0 ; __int64 __fastcall sub_1400063F0(__int64, unsigned __int8, __int64 *, __int64)
.text:00000001400063F0 sub_1400063F0   proc near               ; DATA XREF: .rdata:000000014000B15C↓o
.text:00000001400063F0                                         ; sub_14000F240+4E↓o
.text:00000001400063F0                 cmp     dl, 1
.text:00000001400063F3                 ja      short locret_140006432
.text:00000001400063F5                 xor     eax, eax
.text:00000001400063F7                 test    dl, dl
.text:00000001400063F9                 jz      short loc_140006426
.text:00000001400063FB                 mov     eax, [r8+4]
.text:00000001400063FF                 mov     [r9+2Ch], eax
.text:0000000140006403                 mov     al, [r8+2]
.text:0000000140006407                 mov     [r9+29h], al
.text:000000014000640B                 mov     rdx, [r8]
.text:000000014000640E                 mov     [r9+18h], rdx
.text:0000000140006412                 mov     r9b, [r8+2]
.text:0000000140006416                 mov     r8d, [r8+4]
.text:000000014000641A                 mov     rcx, cs:DeviceObject
.text:0000000140006421                 jmp     imp_WppRecorderReplay
.text:0000000140006426 ; ---------------------------------------------------------------------------
.text:0000000140006426
.text:0000000140006426 loc_140006426:                          ; CODE XREF: sub_1400063F0+9↑j
.text:0000000140006426                 mov     [r9+29h], al
.text:000000014000642A                 mov     [r9+2Ch], eax
.text:000000014000642E                 mov     [r9+18h], rax
.text:0000000140006432
.text:0000000140006432 locret_140006432:                       ; CODE XREF: sub_1400063F0+3↑j
.text:0000000140006432                 retn
.text:0000000140006432 sub_1400063F0   endp
.text:0000000140006432
.text:0000000140006432 ; ---------------------------------------------------------------------------
.text:0000000140006433                 align 4
.text:0000000140006434
.text:0000000140006434 ; =============== S U B R O U T I N E =======================================
.text:0000000140006434
.text:0000000140006434
.text:0000000140006434 ; __int64 __fastcall sub_140006434(__int64)
.text:0000000140006434 sub_140006434   proc near               ; CODE XREF: sub_140001EE4+204↑p
.text:0000000140006434                                         ; DATA XREF: .pdata:000000014000E1A4↓o
.text:0000000140006434
.text:0000000140006434 var_98          = qword ptr -98h
.text:0000000140006434 var_90          = qword ptr -90h
.text:0000000140006434 var_88          = byte ptr -88h
.text:0000000140006434 var_78          = dword ptr -78h
.text:0000000140006434 var_74          = dword ptr -74h
.text:0000000140006434 var_70          = dword ptr -70h
.text:0000000140006434 var_6B          = byte ptr -6Bh
.text:0000000140006434 var_60          = qword ptr -60h
.text:0000000140006434 var_50          = qword ptr -50h
.text:0000000140006434 var_28          = dword ptr -28h
.text:0000000140006434 var_18          = qword ptr -18h
.text:0000000140006434 var_8           = byte ptr -8
.text:0000000140006434 arg_8           = qword ptr  10h
.text:0000000140006434 arg_10          = qword ptr  18h
.text:0000000140006434 arg_18          = qword ptr  20h
.text:0000000140006434
.text:0000000140006434 ; __unwind { // __GSHandlerCheck
.text:0000000140006434                 mov     [rsp+arg_8], rbx
.text:0000000140006439                 mov     [rsp+arg_10], rbp
.text:000000014000643E                 mov     [rsp+arg_18], r14
.text:0000000140006443                 push    r15
.text:0000000140006445                 sub     rsp, 0B0h
.text:000000014000644C                 mov     rax, cs:__security_cookie
.text:0000000140006453                 xor     rax, rsp
.text:0000000140006456                 mov     [rsp+0B8h+var_18], rax
.text:000000014000645E                 mov     rbx, rcx
.text:0000000140006461                 lea     rbp, off_14000D008
.text:0000000140006468                 xor     r15d, r15d
.text:000000014000646B                 cmp     cs:off_14000D008, rbp
.text:0000000140006472                 lea     r14, unk_14000B2E0
.text:0000000140006479                 jz      short loc_1400064A2
.text:000000014000647B                 mov     rcx, cs:DeviceObject
.text:0000000140006482                 cmp     [rcx+48h], r15w
.text:0000000140006487                 jz      short loc_1400064A2
.text:0000000140006489                 mov     rcx, [rcx+40h]
.text:000000014000648D                 lea     r8d, [r15+5]
.text:0000000140006491                 mov     dl, r8b
.text:0000000140006494                 mov     [rsp+0B8h+var_98], r14
.text:0000000140006499                 lea     r9d, [r15+0Ah]
.text:000000014000649D                 call    sub_1400016A8
.text:00000001400064A2
.text:00000001400064A2 loc_1400064A2:                          ; CODE XREF: sub_140006434+45↑j
.text:00000001400064A2                                         ; sub_140006434+53↑j
.text:00000001400064A2                 mov     rax, cs:qword_14000D388
.text:00000001400064A9                 mov     rdx, rbx
.text:00000001400064AC                 mov     r8, cs:off_14000D028
.text:00000001400064B3                 mov     rcx, cs:qword_14000D390
.text:00000001400064BA                 mov     rax, [rax+650h]
.text:00000001400064C1                 call    cs:__guard_dispatch_icall_fptr
.text:00000001400064C7                 xor     edx, edx
.text:00000001400064C9                 lea     rcx, [rsp+0B8h+var_78]
.text:00000001400064CE                 lea     r8d, [rdx+60h]
.text:00000001400064D2                 call    sub_14000A4C0
.text:00000001400064D7                 or      [rsp+0B8h+var_28], 0FFFFFFFFh
.text:00000001400064DF                 lea     rax, sub_140007B20
.text:00000001400064E6                 mov     [rsp+0B8h+var_60], rax
.text:00000001400064EB                 lea     rcx, [rsp+0B8h+var_88]
.text:00000001400064F0                 lea     rax, sub_140007610
.text:00000001400064F7                 mov     [rsp+0B8h+var_78], 60h ; '`'
.text:00000001400064FF                 mov     [rsp+0B8h+var_50], rax
.text:0000000140006504                 lea     r8, [rsp+0B8h+var_78]
.text:0000000140006509                 mov     rax, cs:qword_14000D388
.text:0000000140006510                 xor     r9d, r9d
.text:0000000140006513                 mov     [rsp+0B8h+var_70], 2
.text:000000014000651B                 mov     rdx, rbx
.text:000000014000651E                 mov     [rsp+0B8h+var_6B], 1
.text:0000000140006523                 mov     [rsp+0B8h+var_74], 2
.text:000000014000652B                 mov     rax, [rax+4C0h]
.text:0000000140006532                 mov     [rsp+0B8h+var_98], rcx
.text:0000000140006537                 mov     rcx, cs:qword_14000D390
.text:000000014000653E                 call    cs:__guard_dispatch_icall_fptr
.text:0000000140006544                 mov     ebx, eax
.text:0000000140006546                 test    eax, eax
.text:0000000140006548                 jns     short loc_14000657B
.text:000000014000654A                 cmp     cs:off_14000D008, rbp
.text:0000000140006551                 jz      short loc_1400065B1
.text:0000000140006553                 lfence
.text:0000000140006556                 mov     rcx, cs:DeviceObject
.text:000000014000655D                 mov     r9d, 0Bh
.text:0000000140006563                 mov     dword ptr [rsp+0B8h+var_90], eax
.text:0000000140006567                 mov     dl, 2
.text:0000000140006569                 mov     [rsp+0B8h+var_98], r14
.text:000000014000656E                 mov     rcx, [rcx+40h]
.text:0000000140006572                 lea     r8d, [r9-6]
.text:0000000140006576                 call    sub_14000176C
.text:000000014000657B
.text:000000014000657B loc_14000657B:                          ; CODE XREF: sub_140006434+114↑j
.text:000000014000657B                 cmp     cs:off_14000D008, rbp
.text:0000000140006582                 jz      short loc_1400065B1
.text:0000000140006584                 mov     rcx, cs:DeviceObject
.text:000000014000658B                 cmp     [rcx+48h], r15w
.text:0000000140006590                 jz      short loc_1400065B1
.text:0000000140006592                 mov     rcx, [rcx+40h]
.text:0000000140006596                 mov     r9d, 0Ch
.text:000000014000659C                 mov     dword ptr [rsp+0B8h+var_90], ebx
.text:00000001400065A0                 mov     [rsp+0B8h+var_98], r14
.text:00000001400065A5                 lea     r8d, [r9-7]
.text:00000001400065A9                 mov     dl, r8b
.text:00000001400065AC                 call    sub_14000176C
.text:00000001400065B1
.text:00000001400065B1 loc_1400065B1:                          ; CODE XREF: sub_140006434+11D↑j
.text:00000001400065B1                                         ; sub_140006434+14E↑j ...
.text:00000001400065B1                 mov     eax, ebx
.text:00000001400065B3                 mov     rcx, [rsp+0B8h+var_18]
.text:00000001400065BB                 xor     rcx, rsp        ; StackCookie
.text:00000001400065BE                 call    __security_check_cookie
.text:00000001400065C3                 lea     r11, [rsp+0B8h+var_8]
.text:00000001400065CB                 mov     rbx, [r11+18h]
.text:00000001400065CF                 mov     rbp, [r11+20h]
.text:00000001400065D3                 mov     r14, [r11+28h]
.text:00000001400065D7                 mov     rsp, r11
.text:00000001400065DA                 pop     r15
.text:00000001400065DC                 retn
.text:00000001400065DC ; } // starts at 140006434
.text:00000001400065DC sub_140006434   endp
.text:00000001400065DC
.text:00000001400065DC ; ---------------------------------------------------------------------------
.text:00000001400065DD algn_1400065DD:                         ; DATA XREF: .pdata:000000014000E1A4↓o
.text:00000001400065DD                 align 20h
.text:00000001400065E0
.text:00000001400065E0 ; =============== S U B R O U T I N E =======================================
.text:00000001400065E0
.text:00000001400065E0 ; Attributes: bp-based frame fpd=57h
.text:00000001400065E0
.text:00000001400065E0 ; int __fastcall sub_1400065E0(__int64, __int64, _QWORD *)
.text:00000001400065E0 sub_1400065E0   proc near               ; DATA XREF: StartRoutine+25C↓o
.text:00000001400065E0                                         ; .rdata:000000014000B160↓o ...
.text:00000001400065E0
.text:00000001400065E0 UsageValue      = qword ptr -0C0h
.text:00000001400065E0 PreparsedData   = qword ptr -0B8h
.text:00000001400065E0 Report          = qword ptr -0B0h
.text:00000001400065E0 ReportLength    = qword ptr -0A8h
.text:00000001400065E0 var_A0          = qword ptr -0A0h
.text:00000001400065E0 var_98          = qword ptr -98h
.text:00000001400065E0 var_90          = xmmword ptr -90h
.text:00000001400065E0 var_80          = xmmword ptr -80h
.text:00000001400065E0 var_70          = xmmword ptr -70h
.text:00000001400065E0 var_60          = qword ptr -60h
.text:00000001400065E0 UsageLength     = dword ptr -58h
.text:00000001400065E0 var_54          = dword ptr -54h
.text:00000001400065E0 UsageList       = word ptr -50h
.text:00000001400065E0 var_48          = word ptr -48h
.text:00000001400065E0 var_40          = qword ptr -40h
.text:00000001400065E0 arg_18          = qword ptr  28h
.text:00000001400065E0
.text:00000001400065E0 ; __unwind { // __GSHandlerCheck
.text:00000001400065E0                 mov     [rsp-8+arg_18], rbx
.text:00000001400065E5                 push    rbp
.text:00000001400065E6                 push    rsi
.text:00000001400065E7                 push    rdi
.text:00000001400065E8                 push    r12
.text:00000001400065EA                 push    r13
.text:00000001400065EC                 push    r14
.text:00000001400065EE                 push    r15
.text:00000001400065F0                 lea     rbp, [rsp-27h]
.text:00000001400065F5                 sub     rsp, 0B0h
.text:00000001400065FC                 mov     rax, cs:__security_cookie
.text:0000000140006603                 xor     rax, rsp
.text:0000000140006606                 mov     [rbp+57h+var_40], rax
.text:000000014000660A                 xor     r15d, r15d
.text:000000014000660D                 mov     rsi, r8
.text:0000000140006610                 xor     eax, eax
.text:0000000140006612                 mov     [rbp+57h+var_98], r15
.text:0000000140006616                 mov     qword ptr [rbp+57h+UsageList], rax
.text:000000014000661A                 mov     rdi, rdx
.text:000000014000661D                 mov     [rbp+57h+var_48], ax
.text:0000000140006621                 mov     rbx, rcx
.text:0000000140006624                 mov     [rbp+57h+var_A0], r15
.text:0000000140006628                 lea     rax, off_14000D008
.text:000000014000662F                 cmp     cs:off_14000D008, rax
.text:0000000140006636                 lea     rdx, unk_14000B2E0
.text:000000014000663D                 lea     r14d, [r15+5]
.text:0000000140006641                 jz      short loc_140006669
.text:0000000140006643                 mov     rcx, cs:DeviceObject
.text:000000014000664A                 cmp     [rcx+48h], r15w
.text:000000014000664F                 jz      short loc_140006669
.text:0000000140006651                 mov     rcx, [rcx+40h]
.text:0000000140006655                 lea     r9d, [r15+47h]
.text:0000000140006659                 mov     [rsp+0E0h+UsageValue], rdx
.text:000000014000665E                 mov     r8d, r14d
.text:0000000140006661                 mov     dl, r14b
.text:0000000140006664                 call    sub_1400016A8
.text:0000000140006669
.text:0000000140006669 loc_140006669:                          ; CODE XREF: sub_1400065E0+61↑j
.text:0000000140006669                                         ; sub_1400065E0+6F↑j
.text:0000000140006669                 mov     rax, cs:qword_14000D388
.text:0000000140006670                 mov     rdx, rdi
.text:0000000140006673                 mov     rcx, cs:qword_14000D390
.text:000000014000667A                 mov     rax, [rax+570h]
.text:0000000140006681                 call    cs:__guard_dispatch_icall_fptr
.text:0000000140006687                 mov     rcx, cs:qword_14000D388
.text:000000014000668E                 mov     r13, rax
.text:0000000140006691                 mov     r8, cs:off_14000D028
.text:0000000140006698                 mov     rdx, r13
.text:000000014000669B                 mov     rax, [rcx+650h]
.text:00000001400066A2                 mov     rcx, cs:qword_14000D390
.text:00000001400066A9                 call    cs:__guard_dispatch_icall_fptr
.text:00000001400066AF                 mov     rdi, rax
.text:00000001400066B2                 mov     r12, [rax+150h]
.text:00000001400066B9                 or      eax, 0FFFFFFFFh
.text:00000001400066BC                 lock xadd [rdi+1B0h], eax
.text:00000001400066C4                 dec     eax
.text:00000001400066C6                 lea     rcx, off_14000D008
.text:00000001400066CD                 cmp     cs:off_14000D008, rcx
.text:00000001400066D4                 jz      short loc_140006709
.text:00000001400066D6                 mov     rcx, cs:DeviceObject
.text:00000001400066DD                 cmp     [rcx+48h], r15w
.text:00000001400066E2                 jz      short loc_140006709
.text:00000001400066E4                 mov     rcx, [rcx+40h]
.text:00000001400066E8                 mov     r9d, 48h ; 'H'
.text:00000001400066EE                 mov     dword ptr [rsp+0E0h+PreparsedData], eax
.text:00000001400066F2                 mov     r8d, r14d
.text:00000001400066F5                 lea     rax, unk_14000B2E0
.text:00000001400066FC                 mov     dl, r14b
.text:00000001400066FF                 mov     [rsp+0E0h+UsageValue], rax
.text:0000000140006704                 call    sub_14000176C
.text:0000000140006709
.text:0000000140006709 loc_140006709:                          ; CODE XREF: sub_1400065E0+F4↑j
.text:0000000140006709                                         ; sub_1400065E0+102↑j
.text:0000000140006709                 mov     rax, cs:qword_14000D388
.text:0000000140006710                 mov     rdx, rbx
.text:0000000140006713                 mov     rcx, cs:qword_14000D390
.text:000000014000671A                 mov     rax, [rax+7F0h]
.text:0000000140006721                 call    cs:__guard_dispatch_icall_fptr
.text:0000000140006727                 mov     ebx, eax
.text:0000000140006729                 test    eax, eax
.text:000000014000672B                 jns     short loc_140006787
.text:000000014000672D                 lea     rsi, off_14000D008
.text:0000000140006734                 cmp     cs:off_14000D008, rsi
.text:000000014000673B                 lea     r12, unk_14000B2E0
.text:0000000140006742                 jz      loc_140006CD4
.text:0000000140006748                 mov     rcx, cs:DeviceObject
.text:000000014000674F                 cmp     [rcx+48h], r15w
.text:0000000140006754                 jz      loc_140006CD4
.text:000000014000675A                 mov     r9d, 49h ; 'I'
.text:0000000140006760                 mov     dword ptr [rsp+0E0h+PreparsedData], eax
.text:0000000140006764                 mov     dl, r14b
.text:0000000140006767
.text:0000000140006767 loc_140006767:                          ; CODE XREF: sub_1400065E0+2A7↓j
.text:0000000140006767                 lfence
.text:000000014000676A                 mov     rcx, cs:DeviceObject
.text:0000000140006771                 mov     r8d, r14d
.text:0000000140006774                 mov     [rsp+0E0h+UsageValue], r12
.text:0000000140006779                 mov     rcx, [rcx+40h]
.text:000000014000677D                 call    sub_14000176C
.text:0000000140006782                 jmp     loc_140006CD4
.text:0000000140006787 ; ---------------------------------------------------------------------------
.text:0000000140006787
.text:0000000140006787 loc_140006787:                          ; CODE XREF: sub_1400065E0+14B↑j
.text:0000000140006787                 mov     r15, [rsi+18h]
.text:000000014000678B                 mov     r14, [rsi+20h]
.text:000000014000678F                 lea     rax, off_14000D008
.text:0000000140006796                 cmp     cs:off_14000D008, rax
.text:000000014000679D                 jz      short loc_1400067DE
.text:000000014000679F                 mov     rcx, cs:DeviceObject
.text:00000001400067A6                 xor     eax, eax
.text:00000001400067A8                 cmp     [rcx+48h], ax
.text:00000001400067AC                 jz      short loc_1400067DE
.text:00000001400067AE                 mov     rcx, [rcx+40h]
.text:00000001400067B2                 lea     r9d, [rax+4Ah]
.text:00000001400067B6                 mov     rax, [rsi+28h]
.text:00000001400067BA                 mov     [rsp+0E0h+Report], rax
.text:00000001400067BF                 lea     rax, unk_14000B2E0
.text:00000001400067C6                 mov     [rsp+0E0h+PreparsedData], r14
.text:00000001400067CB                 mov     [rsp+0E0h+UsageValue], rax
.text:00000001400067D0                 lea     eax, [r9-45h]
.text:00000001400067D4                 mov     r8d, eax
.text:00000001400067D7                 mov     dl, al
.text:00000001400067D9                 call    sub_14000984C
.text:00000001400067DE
.text:00000001400067DE loc_1400067DE:                          ; CODE XREF: sub_1400065E0+1BD↑j
.text:00000001400067DE                                         ; sub_1400065E0+1CC↑j
.text:00000001400067DE                 xor     eax, eax
.text:00000001400067E0                 lea     rcx, [rbp+57h+var_A0]
.text:00000001400067E4                 mov     [rsp+0E0h+Report], rcx
.text:00000001400067E9                 lea     rdx, [rbp+57h+var_90]
.text:00000001400067ED                 xorps   xmm0, xmm0
.text:00000001400067F0                 mov     [rbp+57h+var_60], rax
.text:00000001400067F4                 movups  [rbp+57h+var_80], xmm0
.text:00000001400067F8                 lea     esi, [rax+1]
.text:00000001400067FB                 mov     r9d, 44464453h
.text:0000000140006801                 mov     rax, cs:qword_14000D388
.text:0000000140006808                 lea     rcx, [rbp+57h+var_98]
.text:000000014000680C                 movups  [rbp+57h+var_90], xmm0
.text:0000000140006810                 mov     [rsp+0E0h+PreparsedData], rcx
.text:0000000140006815                 mov     r8d, 200h
.text:000000014000681B                 mov     rcx, cs:qword_14000D390
.text:0000000140006822                 movups  [rbp+57h+var_70], xmm0
.text:0000000140006826                 mov     dword ptr [rbp+57h+var_90], 38h ; '8'
.text:000000014000682D                 mov     dword ptr [rbp+57h+var_80+8], esi
.text:0000000140006830                 mov     dword ptr [rbp+57h+var_80+0Ch], esi
.text:0000000140006833                 mov     qword ptr [rbp+57h+var_70], r13
.text:0000000140006837                 mov     rax, [rax+600h]
.text:000000014000683E                 mov     [rsp+0E0h+UsageValue], 8
.text:0000000140006847                 call    cs:__guard_dispatch_icall_fptr
.text:000000014000684D                 mov     ebx, eax
.text:000000014000684F                 test    eax, eax
.text:0000000140006851                 jns     short loc_14000688C
.text:0000000140006853                 xor     r15d, r15d
.text:0000000140006856                 mov     [rbp+57h+var_98], r15
.text:000000014000685A                 mov     [rbp+57h+var_A0], r15
.text:000000014000685E                 lea     rsi, off_14000D008
.text:0000000140006865                 cmp     cs:off_14000D008, rsi
.text:000000014000686C                 jz      loc_140006D35
.text:0000000140006872                 lea     r9d, [r15+4Bh]
.text:0000000140006876                 lea     r12, unk_14000B2E0
.text:000000014000687D                 lea     r14d, [r15+5]
.text:0000000140006881
.text:0000000140006881 loc_140006881:                          ; CODE XREF: sub_1400065E0+66F↓j
.text:0000000140006881                 mov     dword ptr [rsp+0E0h+PreparsedData], ebx
.text:0000000140006885
.text:0000000140006885 loc_140006885:                          ; CODE XREF: sub_1400065E0+33B↓j
.text:0000000140006885                 mov     dl, 2
.text:0000000140006887                 jmp     loc_140006767
.text:000000014000688C ; ---------------------------------------------------------------------------
.text:000000014000688C
.text:000000014000688C loc_14000688C:                          ; CODE XREF: sub_1400065E0+271↑j
.text:000000014000688C                 mov     rax, [rbp+57h+var_A0]
.text:0000000140006890                 xor     ecx, ecx
.text:0000000140006892                 xor     r8d, r8d
.text:0000000140006895                 mov     rdx, r15
.text:0000000140006898                 mov     [rax], rcx
.text:000000014000689B                 mov     rax, [rbp+57h+var_A0]
.text:000000014000689F                 mov     [rax], esi
.text:00000001400068A1                 mov     rax, cs:qword_14000D388
.text:00000001400068A8                 mov     rcx, cs:qword_14000D390
.text:00000001400068AF                 mov     rax, [rax+610h]
.text:00000001400068B6                 call    cs:__guard_dispatch_icall_fptr
.text:00000001400068BC                 mov     dword ptr [rsp+0E0h+ReportLength], r14d ; ReportLength
.text:00000001400068C1                 mov     r9d, 37h ; '7'  ; Usage
.text:00000001400068C7                 mov     [rsp+0E0h+Report], rax ; Report
.text:00000001400068CC                 mov     rsi, rax
.text:00000001400068CF                 lea     rax, [rbp+57h+var_54]
.text:00000001400068D3                 mov     [rsp+0E0h+PreparsedData], r12 ; PreparsedData
.text:00000001400068D8                 xor     r8d, r8d        ; LinkCollection
.text:00000001400068DB                 mov     [rsp+0E0h+UsageValue], rax ; UsageValue
.text:00000001400068E0                 lea     edx, [r9-36h]   ; UsagePage
.text:00000001400068E4                 xor     ecx, ecx        ; ReportType
.text:00000001400068E6                 call    HidP_GetUsageValue
.text:00000001400068EB                 xor     r15d, r15d
.text:00000001400068EE                 mov     ebx, eax
.text:00000001400068F0                 test    eax, eax
.text:00000001400068F2                 jns     short loc_140006920
.text:00000001400068F4                 lea     rsi, off_14000D008
.text:00000001400068FB                 cmp     cs:off_14000D008, rsi
.text:0000000140006902                 lea     r12, unk_14000B2E0
.text:0000000140006909                 lea     r14d, [r15+5]
.text:000000014000690D                 jz      loc_140006CD4
.text:0000000140006913                 lea     r9d, [r15+4Ch]
.text:0000000140006917
.text:0000000140006917 loc_140006917:                          ; CODE XREF: sub_1400065E0+421↓j
.text:0000000140006917                                         ; sub_1400065E0+4FC↓j
.text:0000000140006917                 mov     dword ptr [rsp+0E0h+PreparsedData], eax
.text:000000014000691B                 jmp     loc_140006885
.text:0000000140006920 ; ---------------------------------------------------------------------------
.text:0000000140006920
.text:0000000140006920 loc_140006920:                          ; CODE XREF: sub_1400065E0+312↑j
.text:0000000140006920                 mov     rax, [rbp+57h+var_A0]
.text:0000000140006924                 mov     r13d, 5
.text:000000014000692A                 movzx   ecx, word ptr [rbp+57h+var_54]
.text:000000014000692E                 mov     [rax+6], cx
.text:0000000140006932                 movzx   eax, word ptr [rdi+186h]
.text:0000000140006939                 cmp     r13w, ax
.text:000000014000693D                 jnb     short loc_14000698A
.text:000000014000693F                 lea     rsi, off_14000D008
.text:0000000140006946                 mov     r14d, r13d
.text:0000000140006949                 cmp     cs:off_14000D008, rsi
.text:0000000140006950                 lea     r12, unk_14000B2E0
.text:0000000140006957                 jz      short loc_140006980
.text:0000000140006959                 lea     r9d, [r13+48h]
.text:000000014000695D
.text:000000014000695D loc_14000695D:                          ; CODE XREF: sub_1400065E0+480↓j
.text:000000014000695D                 mov     rcx, cs:DeviceObject
.text:0000000140006964                 mov     r8d, r14d
.text:0000000140006967                 mov     dword ptr [rsp+0E0h+Report], eax
.text:000000014000696B                 mov     dl, 2
.text:000000014000696D                 mov     dword ptr [rsp+0E0h+PreparsedData], r14d
.text:0000000140006972                 mov     [rsp+0E0h+UsageValue], r12
.text:0000000140006977                 mov     rcx, [rcx+40h]
.text:000000014000697B                 call    sub_140009380
.text:0000000140006980
.text:0000000140006980 loc_140006980:                          ; CODE XREF: sub_1400065E0+377↑j
.text:0000000140006980                                         ; sub_1400065E0+474↓j
.text:0000000140006980                 mov     ebx, 0C0000023h
.text:0000000140006985                 jmp     loc_140006CD4
.text:000000014000698A ; ---------------------------------------------------------------------------
.text:000000014000698A
.text:000000014000698A loc_14000698A:                          ; CODE XREF: sub_1400065E0+35D↑j
.text:000000014000698A                 lfence
.text:000000014000698D                 movzx   r8d, word ptr [rdi+186h]
.text:0000000140006995                 lea     rcx, [rbp+57h+UsageList]
.text:0000000140006999                 add     r8, r8
.text:000000014000699C                 xor     edx, edx
.text:000000014000699E                 call    sub_14000A4C0
.text:00000001400069A3                 movzx   eax, word ptr [rdi+186h]
.text:00000001400069AA                 lea     r9, [rbp+57h+UsageList] ; UsageList
.text:00000001400069AE                 mov     dword ptr [rsp+0E0h+ReportLength], r14d ; ReportLength
.text:00000001400069B3                 xor     r8d, r8d        ; LinkCollection
.text:00000001400069B6                 mov     [rbp+57h+UsageLength], eax
.text:00000001400069B9                 xor     ecx, ecx        ; ReportType
.text:00000001400069BB                 mov     [rsp+0E0h+Report], rsi ; Report
.text:00000001400069C0                 lea     rax, [rbp+57h+UsageLength]
.text:00000001400069C4                 mov     [rsp+0E0h+PreparsedData], r12 ; PreparsedData
.text:00000001400069C9                 lea     edx, [r8+9]     ; UsagePage
.text:00000001400069CD                 mov     [rsp+0E0h+UsageValue], rax ; UsageLength
.text:00000001400069D2                 call    HidP_GetUsages
.text:00000001400069D7                 mov     ebx, eax
.text:00000001400069D9                 test    eax, eax
.text:00000001400069DB                 jns     short loc_140006A06
.text:00000001400069DD                 lea     rsi, off_14000D008
.text:00000001400069E4                 mov     r14d, r13d
.text:00000001400069E7                 cmp     cs:off_14000D008, rsi
.text:00000001400069EE                 lea     r12, unk_14000B2E0
.text:00000001400069F5                 jz      loc_140006CD4
.text:00000001400069FB                 mov     r9d, 4Eh ; 'N'
.text:0000000140006A01                 jmp     loc_140006917
.text:0000000140006A06 ; ---------------------------------------------------------------------------
.text:0000000140006A06
.text:0000000140006A06 loc_140006A06:                          ; CODE XREF: sub_1400065E0+3FB↑j
.text:0000000140006A06                 mov     r8d, [rbp+57h+UsageLength]
.text:0000000140006A0A                 mov     edx, r15d
.text:0000000140006A0D                 test    r8d, r8d
.text:0000000140006A10                 jz      short loc_140006A2F
.text:0000000140006A12
.text:0000000140006A12 loc_140006A12:                          ; CODE XREF: sub_1400065E0+44D↓j
.text:0000000140006A12                 mov     eax, edx
.text:0000000140006A14                 cmp     [rbp+rax*2+57h+UsageList], 1
.text:0000000140006A1A                 jnz     short loc_140006A28
.text:0000000140006A1C                 mov     rax, [rbp+57h+var_A0]
.text:0000000140006A20                 mov     byte ptr [rax+4], 1
.text:0000000140006A24                 mov     r8d, [rbp+57h+UsageLength]
.text:0000000140006A28
.text:0000000140006A28 loc_140006A28:                          ; CODE XREF: sub_1400065E0+43A↑j
.text:0000000140006A28                 inc     edx
.text:0000000140006A2A                 cmp     edx, r8d
.text:0000000140006A2D                 jb      short loc_140006A12
.text:0000000140006A2F
.text:0000000140006A2F loc_140006A2F:                          ; CODE XREF: sub_1400065E0+430↑j
.text:0000000140006A2F                 movzx   eax, word ptr [rdi+186h]
.text:0000000140006A36                 cmp     r13w, ax
.text:0000000140006A3A                 jnb     short loc_140006A65
.text:0000000140006A3C                 lea     rsi, off_14000D008
.text:0000000140006A43                 mov     r14d, r13d
.text:0000000140006A46                 cmp     cs:off_14000D008, rsi
.text:0000000140006A4D                 lea     r12, unk_14000B2E0
.text:0000000140006A54                 jz      loc_140006980
.text:0000000140006A5A                 mov     r9d, 4Fh ; 'O'
.text:0000000140006A60                 jmp     loc_14000695D
.text:0000000140006A65 ; ---------------------------------------------------------------------------
.text:0000000140006A65
.text:0000000140006A65 loc_140006A65:                          ; CODE XREF: sub_1400065E0+45A↑j
.text:0000000140006A65                 lfence
.text:0000000140006A68                 movzx   r8d, word ptr [rdi+186h]
.text:0000000140006A70                 lea     rcx, [rbp+57h+UsageList]
.text:0000000140006A74                 add     r8, r8
.text:0000000140006A77                 xor     edx, edx
.text:0000000140006A79                 call    sub_14000A4C0
.text:0000000140006A7E                 movzx   eax, word ptr [rdi+186h]
.text:0000000140006A85                 lea     r9, [rbp+57h+UsageList] ; UsageList
.text:0000000140006A89                 mov     dword ptr [rsp+0E0h+ReportLength], r14d ; ReportLength
.text:0000000140006A8E                 xor     r8d, r8d        ; LinkCollection
.text:0000000140006A91                 mov     [rbp+57h+UsageLength], eax
.text:0000000140006A94                 xor     ecx, ecx        ; ReportType
.text:0000000140006A96                 mov     [rsp+0E0h+Report], rsi ; Report
.text:0000000140006A9B                 lea     rax, [rbp+57h+UsageLength]
.text:0000000140006A9F                 mov     [rsp+0E0h+PreparsedData], r12 ; PreparsedData
.text:0000000140006AA4                 lea     edx, [r8+0Dh]   ; UsagePage
.text:0000000140006AA8                 mov     [rsp+0E0h+UsageValue], rax ; UsageLength
.text:0000000140006AAD                 call    HidP_GetUsages
.text:0000000140006AB2                 mov     ebx, eax
.text:0000000140006AB4                 test    eax, eax
.text:0000000140006AB6                 jns     short loc_140006AE1
.text:0000000140006AB8                 lea     rsi, off_14000D008
.text:0000000140006ABF                 mov     r14d, r13d
.text:0000000140006AC2                 cmp     cs:off_14000D008, rsi
.text:0000000140006AC9                 lea     r12, unk_14000B2E0
.text:0000000140006AD0                 jz      loc_140006CD4
.text:0000000140006AD6                 mov     r9d, 50h ; 'P'
.text:0000000140006ADC                 jmp     loc_140006917
.text:0000000140006AE1 ; ---------------------------------------------------------------------------
.text:0000000140006AE1
.text:0000000140006AE1 loc_140006AE1:                          ; CODE XREF: sub_1400065E0+4D6↑j
.text:0000000140006AE1                 mov     edx, [rbp+57h+UsageLength]
.text:0000000140006AE4                 mov     ecx, r15d
.text:0000000140006AE7                 test    edx, edx
.text:0000000140006AE9                 jz      short loc_140006B06
.text:0000000140006AEB
.text:0000000140006AEB loc_140006AEB:                          ; CODE XREF: sub_1400065E0+524↓j
.text:0000000140006AEB                 mov     eax, ecx
.text:0000000140006AED                 cmp     [rbp+rax*2+57h+UsageList], 33h ; '3'
.text:0000000140006AF3                 jnz     short loc_140006B00
.text:0000000140006AF5                 mov     rax, [rbp+57h+var_A0]
.text:0000000140006AF9                 mov     byte ptr [rax+5], 1
.text:0000000140006AFD                 mov     edx, [rbp+57h+UsageLength]
.text:0000000140006B00
.text:0000000140006B00 loc_140006B00:                          ; CODE XREF: sub_1400065E0+513↑j
.text:0000000140006B00                 inc     ecx
.text:0000000140006B02                 cmp     ecx, edx
.text:0000000140006B04                 jb      short loc_140006AEB
.text:0000000140006B06
.text:0000000140006B06 loc_140006B06:                          ; CODE XREF: sub_1400065E0+509↑j
.text:0000000140006B06                 lea     rsi, off_14000D008
.text:0000000140006B0D                 mov     r14d, r13d
.text:0000000140006B10                 cmp     cs:off_14000D008, rsi
.text:0000000140006B17                 lea     r12, unk_14000B2E0
.text:0000000140006B1E                 jz      short loc_140006B68
.text:0000000140006B20                 mov     rcx, cs:DeviceObject
.text:0000000140006B27                 cmp     [rcx+48h], r15w
.text:0000000140006B2C                 jz      short loc_140006B68
.text:0000000140006B2E                 mov     rax, [rbp+57h+var_A0]
.text:0000000140006B32                 mov     r9d, 51h ; 'Q'
.text:0000000140006B38                 mov     rcx, [rcx+40h]
.text:0000000140006B3C                 movzx   edx, byte ptr [rax+5]
.text:0000000140006B40                 movzx   r8d, byte ptr [rax+4]
.text:0000000140006B45                 movzx   r10d, word ptr [rax+6]
.text:0000000140006B4A                 mov     dword ptr [rsp+0E0h+ReportLength], edx
.text:0000000140006B4E                 mov     dl, r14b
.text:0000000140006B51                 mov     dword ptr [rsp+0E0h+Report], r8d
.text:0000000140006B56                 mov     r8d, r13d
.text:0000000140006B59                 mov     dword ptr [rsp+0E0h+PreparsedData], r10d
.text:0000000140006B5E                 mov     [rsp+0E0h+UsageValue], r12
.text:0000000140006B63                 call    sub_140009474
.text:0000000140006B68
.text:0000000140006B68 loc_140006B68:                          ; CODE XREF: sub_1400065E0+53E↑j
.text:0000000140006B68                                         ; sub_1400065E0+54C↑j
.text:0000000140006B68                 xor     eax, eax
.text:0000000140006B6A                 lock cmpxchg [rdi+26Ch], r15d
.text:0000000140006B73                 mov     edx, eax
.text:0000000140006B75                 cmp     eax, [rdi+270h]
.text:0000000140006B7B                 jge     short loc_140006BCF
.text:0000000140006B7D                 cmp     cs:off_14000D008, rsi
.text:0000000140006B84                 jz      short loc_140006BC6
.text:0000000140006B86                 mov     rcx, cs:DeviceObject
.text:0000000140006B8D                 cmp     [rcx+48h], r15w
.text:0000000140006B92                 jz      short loc_140006BC6
.text:0000000140006B94                 lfence
.text:0000000140006B97                 mov     rcx, cs:DeviceObject
.text:0000000140006B9E                 mov     r9d, 52h ; 'R'
.text:0000000140006BA4                 mov     eax, [rdi+270h]
.text:0000000140006BAA                 mov     r8d, r14d
.text:0000000140006BAD                 mov     dword ptr [rsp+0E0h+Report], eax
.text:0000000140006BB1                 mov     dword ptr [rsp+0E0h+PreparsedData], edx
.text:0000000140006BB5                 mov     dl, r14b
.text:0000000140006BB8                 mov     rcx, [rcx+40h]
.text:0000000140006BBC                 mov     [rsp+0E0h+UsageValue], r12
.text:0000000140006BC1                 call    sub_140009380
.text:0000000140006BC6
.text:0000000140006BC6 loc_140006BC6:                          ; CODE XREF: sub_1400065E0+5A4↑j
.text:0000000140006BC6                                         ; sub_1400065E0+5B2↑j
.text:0000000140006BC6                 mov     rax, [rbp+57h+var_A0]
.text:0000000140006BCA                 mov     [rax+6], r15w
.text:0000000140006BCF
.text:0000000140006BCF loc_140006BCF:                          ; CODE XREF: sub_1400065E0+59B↑j
.text:0000000140006BCF                 mov     rax, cs:qword_14000D388
.text:0000000140006BD6                 mov     rdx, [rdi+90h]
.text:0000000140006BDD                 mov     rcx, cs:qword_14000D390
.text:0000000140006BE4                 mov     rax, [rax+9E0h]
.text:0000000140006BEB                 call    cs:__guard_dispatch_icall_fptr
.text:0000000140006BF1                 mov     rax, cs:qword_14000D388
.text:0000000140006BF8                 mov     rdx, [rdi+88h]
.text:0000000140006BFF                 mov     r8, [rbp+57h+var_98]
.text:0000000140006C03                 mov     rcx, cs:qword_14000D390
.text:0000000140006C0A                 mov     rax, [rax+78h]
.text:0000000140006C0E                 call    cs:__guard_dispatch_icall_fptr
.text:0000000140006C14                 mov     rdx, [rdi+90h]
.text:0000000140006C1B                 mov     ebx, eax
.text:0000000140006C1D                 mov     rax, cs:qword_14000D388
.text:0000000140006C24                 mov     rcx, cs:qword_14000D390
.text:0000000140006C2B                 mov     rax, [rax+9E8h]
.text:0000000140006C32                 call    cs:__guard_dispatch_icall_fptr
.text:0000000140006C38                 test    ebx, ebx
.text:0000000140006C3A                 jns     short loc_140006C54
.text:0000000140006C3C                 cmp     cs:off_14000D008, rsi
.text:0000000140006C43                 jz      loc_140006CD4
.text:0000000140006C49                 mov     r9d, 53h ; 'S'
.text:0000000140006C4F                 jmp     loc_140006881
.text:0000000140006C54 ; ---------------------------------------------------------------------------
.text:0000000140006C54
.text:0000000140006C54 loc_140006C54:                          ; CODE XREF: sub_1400065E0+65A↑j
.text:0000000140006C54                 mov     rax, cs:qword_14000D388
.text:0000000140006C5B                 mov     rcx, cs:qword_14000D390
.text:0000000140006C62                 mov     [rbp+57h+var_98], r15
.text:0000000140006C66                 mov     [rbp+57h+var_A0], r15
.text:0000000140006C6A                 mov     rax, [rax+70h]
.text:0000000140006C6E                 mov     rdx, [rdi+88h]
.text:0000000140006C75                 call    cs:__guard_dispatch_icall_fptr
.text:0000000140006C7B                 cmp     cs:off_14000D008, rsi
.text:0000000140006C82                 jz      short loc_140006CB0
.text:0000000140006C84                 mov     rcx, cs:DeviceObject
.text:0000000140006C8B                 cmp     [rcx+48h], r15w
.text:0000000140006C90                 jz      short loc_140006CB0
.text:0000000140006C92                 mov     rcx, [rcx+40h]
.text:0000000140006C96                 mov     r9d, 54h ; 'T'
.text:0000000140006C9C                 mov     dword ptr [rsp+0E0h+PreparsedData], eax
.text:0000000140006CA0                 mov     r8d, r14d
.text:0000000140006CA3                 mov     dl, r14b
.text:0000000140006CA6                 mov     [rsp+0E0h+UsageValue], r12
.text:0000000140006CAB                 call    sub_14000176C
.text:0000000140006CB0
.text:0000000140006CB0 loc_140006CB0:                          ; CODE XREF: sub_1400065E0+6A2↑j
.text:0000000140006CB0                                         ; sub_1400065E0+6B0↑j
.text:0000000140006CB0                 lea     rcx, [rdi+0C8h] ; Event
.text:0000000140006CB7                 xor     r8d, r8d        ; Wait
.text:0000000140006CBA                 xor     edx, edx        ; Increment
.text:0000000140006CBC                 call    cs:KeSetEvent
.text:0000000140006CC2                 lea     rcx, [rdi+198h] ; Event
.text:0000000140006CC9                 xor     r8d, r8d        ; Wait
.text:0000000140006CCC                 xor     edx, edx        ; Increment
.text:0000000140006CCE                 call    cs:KeSetEvent
.text:0000000140006CD4
.text:0000000140006CD4 loc_140006CD4:                          ; CODE XREF: sub_1400065E0+162↑j
.text:0000000140006CD4                                         ; sub_1400065E0+174↑j ...
.text:0000000140006CD4                 mov     rdx, [rbp+57h+var_98]
.text:0000000140006CD8                 test    rdx, rdx
.text:0000000140006CDB                 jz      short loc_140006D00
.text:0000000140006CDD                 mov     rax, cs:qword_14000D388
.text:0000000140006CE4                 mov     rcx, cs:qword_14000D390
.text:0000000140006CEB                 mov     rax, [rax+680h]
.text:0000000140006CF2                 call    cs:__guard_dispatch_icall_fptr
.text:0000000140006CF8                 mov     [rbp+57h+var_98], r15
.text:0000000140006CFC                 mov     [rbp+57h+var_A0], r15
.text:0000000140006D00
.text:0000000140006D00 loc_140006D00:                          ; CODE XREF: sub_1400065E0+6FB↑j
.text:0000000140006D00                 cmp     cs:off_14000D008, rsi
.text:0000000140006D07                 jz      short loc_140006D35
.text:0000000140006D09                 mov     rcx, cs:DeviceObject
.text:0000000140006D10                 cmp     [rcx+48h], r15w
.text:0000000140006D15                 jz      short loc_140006D35
.text:0000000140006D17                 mov     rcx, [rcx+40h]
.text:0000000140006D1B                 mov     r9d, 55h ; 'U'
.text:0000000140006D21                 mov     dword ptr [rsp+0E0h+PreparsedData], ebx
.text:0000000140006D25                 mov     r8d, r14d
.text:0000000140006D28                 mov     dl, r14b
.text:0000000140006D2B                 mov     [rsp+0E0h+UsageValue], r12
.text:0000000140006D30                 call    sub_14000176C
.text:0000000140006D35
.text:0000000140006D35 loc_140006D35:                          ; CODE XREF: sub_1400065E0+28C↑j
.text:0000000140006D35                                         ; sub_1400065E0+727↑j ...
.text:0000000140006D35                 mov     rcx, [rbp+57h+var_40]
.text:0000000140006D39                 xor     rcx, rsp        ; StackCookie
.text:0000000140006D3C                 call    __security_check_cookie
.text:0000000140006D41                 mov     rbx, [rsp+0E0h+arg_18]
.text:0000000140006D49                 add     rsp, 0B0h
.text:0000000140006D50                 pop     r15
.text:0000000140006D52                 pop     r14
.text:0000000140006D54                 pop     r13
.text:0000000140006D56                 pop     r12
.text:0000000140006D58                 pop     rdi
.text:0000000140006D59                 pop     rsi
.text:0000000140006D5A                 pop     rbp
.text:0000000140006D5B                 retn
.text:0000000140006D5B ; } // starts at 1400065E0
.text:0000000140006D5B sub_1400065E0   endp
.text:0000000140006D5B
.text:0000000140006D5B ; ---------------------------------------------------------------------------
.text:0000000140006D5C algn_140006D5C:                         ; DATA XREF: .pdata:000000014000E1B0↓o
.text:0000000140006D5C                 align 20h
.text:0000000140006D60
.text:0000000140006D60 ; =============== S U B R O U T I N E =======================================
.text:0000000140006D60
.text:0000000140006D60 ; Attributes: bp-based frame fpd=57h
.text:0000000140006D60
.text:0000000140006D60 ; int __fastcall sub_140006D60(__int64, __int64, _QWORD *)
.text:0000000140006D60 sub_140006D60   proc near               ; DATA XREF: StartRoutine+19C↓o
.text:0000000140006D60                                         ; .rdata:000000014000B164↓o ...
.text:0000000140006D60
.text:0000000140006D60 UsageValue      = qword ptr -0F0h
.text:0000000140006D60 PreparsedData   = qword ptr -0E8h
.text:0000000140006D60 Report          = qword ptr -0E0h
.text:0000000140006D60 ReportLength    = qword ptr -0D8h
.text:0000000140006D60 var_D0          = dword ptr -0D0h
.text:0000000140006D60 var_B8          = qword ptr -0B8h
.text:0000000140006D60 var_B0          = qword ptr -0B0h
.text:0000000140006D60 var_A8          = qword ptr -0A8h
.text:0000000140006D60 var_A0          = qword ptr -0A0h
.text:0000000140006D60 var_98          = qword ptr -98h
.text:0000000140006D60 var_90          = xmmword ptr -90h
.text:0000000140006D60 var_80          = xmmword ptr -80h
.text:0000000140006D60 var_70          = xmmword ptr -70h
.text:0000000140006D60 var_60          = qword ptr -60h
.text:0000000140006D60 var_58          = dword ptr -58h
.text:0000000140006D60 UsageLength     = dword ptr -54h
.text:0000000140006D60 UsageList       = word ptr -50h
.text:0000000140006D60 var_48          = word ptr -48h
.text:0000000140006D60 var_40          = qword ptr -40h
.text:0000000140006D60 arg_18          = qword ptr  28h
.text:0000000140006D60
.text:0000000140006D60 ; __unwind { // __GSHandlerCheck
.text:0000000140006D60                 mov     [rsp-8+arg_18], rbx
.text:0000000140006D65                 push    rbp
.text:0000000140006D66                 push    rsi
.text:0000000140006D67                 push    rdi
.text:0000000140006D68                 push    r12
.text:0000000140006D6A                 push    r13
.text:0000000140006D6C                 push    r14
.text:0000000140006D6E                 push    r15
.text:0000000140006D70                 lea     rbp, [rsp-27h]
.text:0000000140006D75                 sub     rsp, 0E0h
.text:0000000140006D7C                 mov     rax, cs:__security_cookie
.text:0000000140006D83                 xor     rax, rsp
.text:0000000140006D86                 mov     [rbp+57h+var_40], rax
.text:0000000140006D8A                 xor     r12d, r12d
.text:0000000140006D8D                 mov     rsi, r8
.text:0000000140006D90                 xor     eax, eax
.text:0000000140006D92                 mov     [rbp+57h+var_A0], r12
.text:0000000140006D96                 mov     qword ptr [rbp+57h+UsageList], rax
.text:0000000140006D9A                 mov     rdi, rdx
.text:0000000140006D9D                 mov     [rbp+57h+var_48], ax
.text:0000000140006DA1                 mov     rbx, rcx
.text:0000000140006DA4                 mov     [rbp+57h+var_98], r12
.text:0000000140006DA8                 lea     r15, off_14000D008
.text:0000000140006DAF                 cmp     cs:off_14000D008, r15
.text:0000000140006DB6                 lea     rax, unk_14000B2E0
.text:0000000140006DBD                 lea     r13d, [r12+5]
.text:0000000140006DC2                 jz      short loc_140006DEB
.text:0000000140006DC4                 mov     rcx, cs:DeviceObject
.text:0000000140006DCB                 cmp     [rcx+48h], r12w
.text:0000000140006DD0                 jz      short loc_140006DEB
.text:0000000140006DD2                 mov     rcx, [rcx+40h]
.text:0000000140006DD6                 lea     r9d, [r12+56h]
.text:0000000140006DDB                 mov     r8d, r13d
.text:0000000140006DDE                 mov     [rsp+110h+UsageValue], rax
.text:0000000140006DE3                 mov     dl, r13b
.text:0000000140006DE6                 call    sub_1400016A8
.text:0000000140006DEB
.text:0000000140006DEB loc_140006DEB:                          ; CODE XREF: sub_140006D60+62↑j
.text:0000000140006DEB                                         ; sub_140006D60+70↑j
.text:0000000140006DEB                 mov     rax, cs:qword_14000D388
.text:0000000140006DF2                 mov     rdx, rdi
.text:0000000140006DF5                 mov     rcx, cs:qword_14000D390
.text:0000000140006DFC                 mov     rax, [rax+570h]
.text:0000000140006E03                 call    cs:__guard_dispatch_icall_fptr
.text:0000000140006E09                 mov     rcx, cs:qword_14000D388
.text:0000000140006E10                 mov     rdx, rax
.text:0000000140006E13                 mov     r8, cs:off_14000D028
.text:0000000140006E1A                 mov     [rbp+57h+var_A8], rax
.text:0000000140006E1E                 mov     rax, [rcx+650h]
.text:0000000140006E25                 mov     rcx, cs:qword_14000D390
.text:0000000140006E2C                 call    cs:__guard_dispatch_icall_fptr
.text:0000000140006E32                 mov     rdi, rax
.text:0000000140006E35                 mov     r14, [rax+1F0h]
.text:0000000140006E3C                 or      eax, 0FFFFFFFFh
.text:0000000140006E3F                 mov     [rbp+57h+var_B0], r14
.text:0000000140006E43                 lock xadd [rdi+250h], eax
.text:0000000140006E4B                 dec     eax
.text:0000000140006E4D                 cmp     cs:off_14000D008, r15
.text:0000000140006E54                 jz      short loc_140006E89
.text:0000000140006E56                 mov     rcx, cs:DeviceObject
.text:0000000140006E5D                 cmp     [rcx+48h], r12w
.text:0000000140006E62                 jz      short loc_140006E89
.text:0000000140006E64                 mov     rcx, [rcx+40h]
.text:0000000140006E68                 mov     r9d, 57h ; 'W'
.text:0000000140006E6E                 mov     dword ptr [rsp+110h+PreparsedData], eax
.text:0000000140006E72                 mov     r8d, r13d
.text:0000000140006E75                 lea     rax, unk_14000B2E0
.text:0000000140006E7C                 mov     dl, r13b
.text:0000000140006E7F                 mov     [rsp+110h+UsageValue], rax
.text:0000000140006E84                 call    sub_14000176C
.text:0000000140006E89
.text:0000000140006E89 loc_140006E89:                          ; CODE XREF: sub_140006D60+F4↑j
.text:0000000140006E89                                         ; sub_140006D60+102↑j
.text:0000000140006E89                 mov     rax, cs:qword_14000D388
.text:0000000140006E90                 mov     rdx, rbx
.text:0000000140006E93                 mov     rcx, cs:qword_14000D390
.text:0000000140006E9A                 mov     rax, [rax+7F0h]
.text:0000000140006EA1                 call    cs:__guard_dispatch_icall_fptr
.text:0000000140006EA7                 mov     ebx, eax
.text:0000000140006EA9                 test    eax, eax
.text:0000000140006EAB                 jns     short loc_140006EED
.text:0000000140006EAD                 cmp     cs:off_14000D008, r15
.text:0000000140006EB4                 lea     rsi, unk_14000B2E0
.text:0000000140006EBB                 jz      loc_140006FE7
.text:0000000140006EC1                 mov     r9d, 58h ; 'X'
.text:0000000140006EC7
.text:0000000140006EC7 loc_140006EC7:                          ; CODE XREF: sub_140006D60+45D↓j
.text:0000000140006EC7                                         ; sub_140006D60+738↓j
.text:0000000140006EC7                 mov     dword ptr [rsp+110h+PreparsedData], eax
.text:0000000140006ECB
.text:0000000140006ECB loc_140006ECB:                          ; CODE XREF: sub_140006D60+7DC↓j
.text:0000000140006ECB                 lfence
.text:0000000140006ECE                 mov     rcx, cs:DeviceObject
.text:0000000140006ED5                 mov     r8d, r13d
.text:0000000140006ED8                 mov     dl, 2
.text:0000000140006EDA                 mov     [rsp+110h+UsageValue], rsi
.text:0000000140006EDF                 mov     rcx, [rcx+40h]
.text:0000000140006EE3                 call    sub_14000176C
.text:0000000140006EE8                 jmp     loc_140006FE7
.text:0000000140006EED ; ---------------------------------------------------------------------------
.text:0000000140006EED
.text:0000000140006EED loc_140006EED:                          ; CODE XREF: sub_140006D60+14B↑j
.text:0000000140006EED                 mov     rbx, [rsi+18h]
.text:0000000140006EF1                 mov     r12, [rsi+20h]
.text:0000000140006EF5                 cmp     cs:off_14000D008, r15
.text:0000000140006EFC                 jz      short loc_140006F3A
.text:0000000140006EFE                 mov     rcx, cs:DeviceObject
.text:0000000140006F05                 xor     eax, eax
.text:0000000140006F07                 cmp     [rcx+48h], ax
.text:0000000140006F0B                 jz      short loc_140006F3A
.text:0000000140006F0D                 mov     rcx, [rcx+40h]
.text:0000000140006F11                 lea     r9d, [rax+59h]
.text:0000000140006F15                 mov     rax, [rsi+28h]
.text:0000000140006F19                 mov     r8d, r13d
.text:0000000140006F1C                 mov     [rsp+110h+Report], rax
.text:0000000140006F21                 mov     dl, r13b
.text:0000000140006F24                 lea     rax, unk_14000B2E0
.text:0000000140006F2B                 mov     [rsp+110h+PreparsedData], r12
.text:0000000140006F30                 mov     [rsp+110h+UsageValue], rax
.text:0000000140006F35                 call    sub_14000984C
.text:0000000140006F3A
.text:0000000140006F3A loc_140006F3A:                          ; CODE XREF: sub_140006D60+19C↑j
.text:0000000140006F3A                                         ; sub_140006D60+1AB↑j
.text:0000000140006F3A                 mov     rax, cs:qword_14000D388
.text:0000000140006F41                 xor     esi, esi
.text:0000000140006F43                 mov     rcx, cs:qword_14000D390
.text:0000000140006F4A                 xor     r8d, r8d
.text:0000000140006F4D                 mov     [rbp+57h+var_B8], rsi
.text:0000000140006F51                 mov     rdx, rbx
.text:0000000140006F54                 mov     dword ptr [rbp+57h+var_B8], 2
.text:0000000140006F5B                 mov     rax, [rax+610h]
.text:0000000140006F62                 call    cs:__guard_dispatch_icall_fptr
.text:0000000140006F68                 mov     dword ptr [rsp+110h+ReportLength], r12d ; ReportLength
.text:0000000140006F6D                 lea     r15d, [rsi+1]
.text:0000000140006F71                 mov     [rsp+110h+Report], rax ; Report
.text:0000000140006F76                 lea     r9d, [rsi+30h]  ; Usage
.text:0000000140006F7A                 mov     r13, rax
.text:0000000140006F7D                 mov     [rsp+110h+PreparsedData], r14 ; PreparsedData
.text:0000000140006F82                 lea     rax, [rbp+57h+var_58]
.text:0000000140006F86                 xor     r8d, r8d        ; LinkCollection
.text:0000000140006F89                 mov     edx, r15d       ; UsagePage
.text:0000000140006F8C                 mov     [rsp+110h+UsageValue], rax ; UsageValue
.text:0000000140006F91                 xor     ecx, ecx        ; ReportType
.text:0000000140006F93                 call    HidP_GetUsageValue
.text:0000000140006F98                 mov     ebx, eax
.text:0000000140006F9A                 test    eax, eax
.text:0000000140006F9C                 jns     loc_14000706F
.text:0000000140006FA2                 lea     r15, off_14000D008
.text:0000000140006FA9                 mov     r13d, 5
.text:0000000140006FAF                 cmp     cs:off_14000D008, r15
.text:0000000140006FB6                 lea     rsi, unk_14000B2E0
.text:0000000140006FBD                 jz      short loc_140006FE4
.text:0000000140006FBF                 lea     r9d, [r13+55h]
.text:0000000140006FC3
.text:0000000140006FC3 loc_140006FC3:                          ; CODE XREF: sub_140006D60+376↓j
.text:0000000140006FC3                 lfence
.text:0000000140006FC6                 mov     rcx, cs:DeviceObject
.text:0000000140006FCD                 mov     r8d, r13d
.text:0000000140006FD0                 mov     dword ptr [rsp+110h+PreparsedData], eax
.text:0000000140006FD4                 mov     dl, 2
.text:0000000140006FD6                 mov     [rsp+110h+UsageValue], rsi
.text:0000000140006FDB                 mov     rcx, [rcx+40h]
.text:0000000140006FDF                 call    sub_14000176C
.text:0000000140006FE4
.text:0000000140006FE4 loc_140006FE4:                          ; CODE XREF: sub_140006D60+25D↑j
.text:0000000140006FE4                                         ; sub_140006D60+36C↓j ...
.text:0000000140006FE4                 xor     r12d, r12d
.text:0000000140006FE7
.text:0000000140006FE7 loc_140006FE7:                          ; CODE XREF: sub_140006D60+15B↑j
.text:0000000140006FE7                                         ; sub_140006D60+188↑j ...
.text:0000000140006FE7                 mov     rdx, [rbp+57h+var_A0]
.text:0000000140006FEB                 test    rdx, rdx
.text:0000000140006FEE                 jz      short loc_140007013
.text:0000000140006FF0                 mov     rax, cs:qword_14000D388
.text:0000000140006FF7                 mov     rcx, cs:qword_14000D390
.text:0000000140006FFE                 mov     rax, [rax+680h]
.text:0000000140007005                 call    cs:__guard_dispatch_icall_fptr
.text:000000014000700B                 mov     [rbp+57h+var_A0], r12
.text:000000014000700F                 mov     [rbp+57h+var_98], r12
.text:0000000140007013
.text:0000000140007013 loc_140007013:                          ; CODE XREF: sub_140006D60+28E↑j
.text:0000000140007013                 cmp     cs:off_14000D008, r15
.text:000000014000701A                 jz      short loc_140007048
.text:000000014000701C                 mov     rcx, cs:DeviceObject
.text:0000000140007023                 cmp     [rcx+48h], r12w
.text:0000000140007028                 jz      short loc_140007048
.text:000000014000702A                 mov     rcx, [rcx+40h]
.text:000000014000702E                 mov     r9d, 67h ; 'g'
.text:0000000140007034                 mov     dword ptr [rsp+110h+PreparsedData], ebx
.text:0000000140007038                 mov     r8d, r13d
.text:000000014000703B                 mov     dl, r13b
.text:000000014000703E                 mov     [rsp+110h+UsageValue], rsi
.text:0000000140007043                 call    sub_14000176C
.text:0000000140007048
.text:0000000140007048 loc_140007048:                          ; CODE XREF: sub_140006D60+2BA↑j
.text:0000000140007048                                         ; sub_140006D60+2C8↑j ...
.text:0000000140007048                 mov     rcx, [rbp+57h+var_40]
.text:000000014000704C                 xor     rcx, rsp        ; StackCookie
.text:000000014000704F                 call    __security_check_cookie
.text:0000000140007054                 mov     rbx, [rsp+110h+arg_18]
.text:000000014000705C                 add     rsp, 0E0h
.text:0000000140007063                 pop     r15
.text:0000000140007065                 pop     r14
.text:0000000140007067                 pop     r13
.text:0000000140007069                 pop     r12
.text:000000014000706B                 pop     rdi
.text:000000014000706C                 pop     rsi
.text:000000014000706D                 pop     rbp
.text:000000014000706E                 retn
.text:000000014000706F ; ---------------------------------------------------------------------------
.text:000000014000706F
.text:000000014000706F loc_14000706F:                          ; CODE XREF: sub_140006D60+23C↑j
.text:000000014000706F                 lfence
.text:0000000140007072                 mov     rax, [rbp+57h+var_B0]
.text:0000000140007076                 mov     r9d, 31h ; '1'  ; Usage
.text:000000014000707C                 movzx   r14d, word ptr [rbp+57h+var_58]
.text:0000000140007081                 xor     r8d, r8d        ; LinkCollection
.text:0000000140007084                 mov     dword ptr [rsp+110h+ReportLength], r12d ; ReportLength
.text:0000000140007089                 mov     edx, r15d       ; UsagePage
.text:000000014000708C                 mov     [rsp+110h+Report], r13 ; Report
.text:0000000140007091                 xor     ecx, ecx        ; ReportType
.text:0000000140007093                 mov     [rsp+110h+PreparsedData], rax ; PreparsedData
.text:0000000140007098                 lea     rax, [rbp+57h+var_58]
.text:000000014000709C                 mov     [rsp+110h+UsageValue], rax ; UsageValue
.text:00000001400070A1                 mov     word ptr [rbp+57h+var_B8+4], r14w
.text:00000001400070A6                 call    HidP_GetUsageValue
.text:00000001400070AB                 mov     ebx, eax
.text:00000001400070AD                 test    eax, eax
.text:00000001400070AF                 jns     short loc_1400070DB
.text:00000001400070B1                 lea     r15, off_14000D008
.text:00000001400070B8                 mov     r13d, 5
.text:00000001400070BE                 cmp     cs:off_14000D008, r15
.text:00000001400070C5                 lea     rsi, unk_14000B2E0
.text:00000001400070CC                 jz      loc_140006FE4
.text:00000001400070D2                 lea     r9d, [r13+56h]
.text:00000001400070D6                 jmp     loc_140006FC3
.text:00000001400070DB ; ---------------------------------------------------------------------------
.text:00000001400070DB
.text:00000001400070DB loc_1400070DB:                          ; CODE XREF: sub_140006D60+34F↑j
.text:00000001400070DB                 movzx   eax, word ptr [rdi+226h]
.text:00000001400070E2                 mov     ecx, 5
.text:00000001400070E7                 movzx   esi, word ptr [rbp+57h+var_58]
.text:00000001400070EB                 mov     word ptr [rbp+57h+var_B8+6], si
.text:00000001400070EF                 cmp     cx, ax
.text:00000001400070F2                 jnb     short loc_14000713E
.text:00000001400070F4                 lea     r15, off_14000D008
.text:00000001400070FB                 mov     r13d, ecx
.text:00000001400070FE                 cmp     cs:off_14000D008, r15
.text:0000000140007105                 lea     rsi, unk_14000B2E0
.text:000000014000710C                 jz      short loc_140007134
.text:000000014000710E                 mov     dword ptr [rsp+110h+Report], eax
.text:0000000140007112                 lea     r9d, [rcx+57h]
.text:0000000140007116                 mov     dword ptr [rsp+110h+PreparsedData], ecx
.text:000000014000711A                 mov     r8d, ecx
.text:000000014000711D                 mov     rcx, cs:DeviceObject
.text:0000000140007124                 mov     dl, 2
.text:0000000140007126                 mov     [rsp+110h+UsageValue], rsi
.text:000000014000712B                 mov     rcx, [rcx+40h]
.text:000000014000712F                 call    sub_140009380
.text:0000000140007134
.text:0000000140007134 loc_140007134:                          ; CODE XREF: sub_140006D60+3AC↑j
.text:0000000140007134                 mov     ebx, 0C0000023h
.text:0000000140007139                 jmp     loc_140006FE4
.text:000000014000713E ; ---------------------------------------------------------------------------
.text:000000014000713E
.text:000000014000713E loc_14000713E:                          ; CODE XREF: sub_140006D60+392↑j
.text:000000014000713E                 lfence
.text:0000000140007141                 movzx   r8d, word ptr [rdi+226h]
.text:0000000140007149                 lea     rcx, [rbp+57h+UsageList]
.text:000000014000714D                 add     r8, r8
.text:0000000140007150                 xor     edx, edx
.text:0000000140007152                 call    sub_14000A4C0
.text:0000000140007157                 movzx   eax, word ptr [rdi+226h]
.text:000000014000715E                 lea     r9, [rbp+57h+UsageList] ; UsageList
.text:0000000140007162                 mov     [rbp+57h+UsageLength], eax
.text:0000000140007165                 xor     r8d, r8d        ; LinkCollection
.text:0000000140007168                 mov     rax, [rbp+57h+var_B0]
.text:000000014000716C                 xor     ecx, ecx        ; ReportType
.text:000000014000716E                 mov     dword ptr [rsp+110h+ReportLength], r12d ; ReportLength
.text:0000000140007173                 mov     [rsp+110h+Report], r13 ; Report
.text:0000000140007178                 mov     [rsp+110h+PreparsedData], rax ; PreparsedData
.text:000000014000717D                 lea     edx, [r8+0Dh]   ; UsagePage
.text:0000000140007181                 lea     rax, [rbp+57h+UsageLength]
.text:0000000140007185                 mov     [rsp+110h+UsageValue], rax ; UsageLength
.text:000000014000718A                 call    HidP_GetUsages
.text:000000014000718F                 xor     r12d, r12d
.text:0000000140007192                 mov     ebx, eax
.text:0000000140007194                 test    eax, eax
.text:0000000140007196                 jns     short loc_1400071C2
.text:0000000140007198                 lea     r15, off_14000D008
.text:000000014000719F                 cmp     cs:off_14000D008, r15
.text:00000001400071A6                 lea     rsi, unk_14000B2E0
.text:00000001400071AD                 lea     r13d, [r12+5]
.text:00000001400071B2                 jz      loc_140006FE7
.text:00000001400071B8                 lea     r9d, [r12+5Dh]
.text:00000001400071BD                 jmp     loc_140006EC7
.text:00000001400071C2 ; ---------------------------------------------------------------------------
.text:00000001400071C2
.text:00000001400071C2 loc_1400071C2:                          ; CODE XREF: sub_140006D60+436↑j
.text:00000001400071C2                 mov     ecx, [rbp+57h+UsageLength]
.text:00000001400071C5                 mov     ebx, r12d
.text:00000001400071C8                 mov     r12b, bl
.text:00000001400071CB                 mov     r13b, bl
.text:00000001400071CE                 test    ecx, ecx
.text:00000001400071D0                 jz      short loc_1400071F8
.text:00000001400071D2                 lea     rax, [rbp+57h+UsageList]
.text:00000001400071D6                 mov     edx, ecx
.text:00000001400071D8
.text:00000001400071D8 loc_1400071D8:                          ; CODE XREF: sub_140006D60+496↓j
.text:00000001400071D8                 movzx   ecx, word ptr [rax]
.text:00000001400071DB                 cmp     cx, 42h ; 'B'
.text:00000001400071DF                 jz      short loc_1400071EC
.text:00000001400071E1                 cmp     cx, 47h ; 'G'
.text:00000001400071E5                 jnz     short loc_1400071EF
.text:00000001400071E7                 mov     r13b, r15b
.text:00000001400071EA                 jmp     short loc_1400071EF
.text:00000001400071EC ; ---------------------------------------------------------------------------
.text:00000001400071EC
.text:00000001400071EC loc_1400071EC:                          ; CODE XREF: sub_140006D60+47F↑j
.text:00000001400071EC                 mov     r12b, r15b
.text:00000001400071EF
.text:00000001400071EF loc_1400071EF:                          ; CODE XREF: sub_140006D60+485↑j
.text:00000001400071EF                                         ; sub_140006D60+48A↑j
.text:00000001400071EF                 add     rax, 2
.text:00000001400071F3                 sub     rdx, r15
.text:00000001400071F6                 jnz     short loc_1400071D8
.text:00000001400071F8
.text:00000001400071F8 loc_1400071F8:                          ; CODE XREF: sub_140006D60+470↑j
.text:00000001400071F8                 lea     rdx, off_14000D008
.text:00000001400071FF                 xor     eax, eax
.text:0000000140007201                 cmp     cs:off_14000D008, rdx
.text:0000000140007208                 jz      short loc_14000725D
.text:000000014000720A                 mov     rcx, cs:DeviceObject
.text:0000000140007211                 cmp     [rcx+48h], ax
.text:0000000140007215                 jz      short loc_14000725D
.text:0000000140007217                 mov     rcx, [rcx+40h]
.text:000000014000721B                 mov     r9d, 5Eh ; '^'
.text:0000000140007221                 movzx   edx, r12b
.text:0000000140007225                 movzx   eax, r13b
.text:0000000140007229                 mov     [rsp+110h+var_D0], eax
.text:000000014000722D                 lea     rax, unk_14000B2E0
.text:0000000140007234                 mov     dword ptr [rsp+110h+ReportLength], edx
.text:0000000140007238                 mov     dword ptr [rsp+110h+Report], esi
.text:000000014000723C                 mov     dword ptr [rsp+110h+PreparsedData], r14d
.text:0000000140007241                 mov     [rsp+110h+UsageValue], rax
.text:0000000140007246                 lea     eax, [r9-59h]
.text:000000014000724A                 mov     r8d, eax
.text:000000014000724D                 mov     dl, al
.text:000000014000724F                 call    sub_140005B40
.text:0000000140007254                 xor     eax, eax
.text:0000000140007256                 lea     rdx, off_14000D008
.text:000000014000725D
.text:000000014000725D loc_14000725D:                          ; CODE XREF: sub_140006D60+4A8↑j
.text:000000014000725D                                         ; sub_140006D60+4B5↑j
.text:000000014000725D                 mov     r8d, 0FFFFh
.text:0000000140007263                 test    r12b, r12b
.text:0000000140007266                 jnz     short loc_1400072B9
.text:0000000140007268                 cmp     cs:off_14000D008, rdx
.text:000000014000726F                 jz      short loc_1400072AF
.text:0000000140007271                 mov     rcx, cs:DeviceObject
.text:0000000140007278                 cmp     [rcx+48h], ax
.text:000000014000727C                 jz      short loc_1400072AF
.text:000000014000727E                 mov     rcx, [rcx+40h]
.text:0000000140007282                 lea     rax, unk_14000B2E0
.text:0000000140007289                 mov     r9d, 5Fh ; '_'
.text:000000014000728F                 mov     [rsp+110h+UsageValue], rax
.text:0000000140007294                 lea     eax, [r9-5Ah]
.text:0000000140007298                 mov     r8d, eax
.text:000000014000729B                 mov     dl, al
.text:000000014000729D                 call    sub_1400016A8
.text:00000001400072A2                 lea     rdx, off_14000D008
.text:00000001400072A9                 mov     r8d, 0FFFFh
.text:00000001400072AF
.text:00000001400072AF loc_1400072AF:                          ; CODE XREF: sub_140006D60+50F↑j
.text:00000001400072AF                                         ; sub_140006D60+51C↑j
.text:00000001400072AF                 or      dword ptr [rbp+57h+var_B8+4], 0FFFFFFFFh
.text:00000001400072B3                 mov     r14d, r8d
.text:00000001400072B6                 mov     esi, r8d
.text:00000001400072B9
.text:00000001400072B9 loc_1400072B9:                          ; CODE XREF: sub_140006D60+506↑j
.text:00000001400072B9                 xor     r12d, r12d
.text:00000001400072BC                 test    r13b, r13b
.text:00000001400072BF                 jz      loc_1400075BB
.text:00000001400072C5                 cmp     [rdi+268h], r14w
.text:00000001400072CD                 jnz     loc_140007395
.text:00000001400072D3                 cmp     [rdi+26Ah], si
.text:00000001400072DA                 jnz     loc_140007395
.text:00000001400072E0                 cmp     cs:off_14000D008, rdx
.text:00000001400072E7                 lea     r14, unk_14000B2E0
.text:00000001400072EE                 lea     esi, [r12+5]
.text:00000001400072F3                 jz      short loc_14000731C
.text:00000001400072F5                 mov     rcx, cs:DeviceObject
.text:00000001400072FC                 cmp     [rcx+48h], r12w
.text:0000000140007301                 jz      short loc_14000731C
.text:0000000140007303                 mov     rcx, [rcx+40h]
.text:0000000140007307                 lea     r9d, [r12+60h]
.text:000000014000730C                 mov     r8d, esi
.text:000000014000730F                 mov     [rsp+110h+UsageValue], r14
.text:0000000140007314                 mov     dl, sil
.text:0000000140007317                 call    sub_1400016A8
.text:000000014000731C
.text:000000014000731C loc_14000731C:                          ; CODE XREF: sub_140006D60+593↑j
.text:000000014000731C                                         ; sub_140006D60+5A1↑j
.text:000000014000731C                 lock xadd [rdi+26Ch], r15d
.text:0000000140007325                 mov     ecx, 78h ; 'x'
.text:000000014000732A                 lea     eax, [rcx+1]
.text:000000014000732D                 lock cmpxchg [rdi+26Ch], ecx
.text:0000000140007335                 lea     r15, off_14000D008
.text:000000014000733C                 cmp     cs:off_14000D008, r15
.text:0000000140007343                 jz      short loc_140007371
.text:0000000140007345                 mov     rcx, cs:DeviceObject
.text:000000014000734C                 cmp     [rcx+48h], r12w
.text:0000000140007351                 jz      short loc_140007371
.text:0000000140007353                 mov     rcx, [rcx+40h]
.text:0000000140007357                 mov     r9d, 61h ; 'a'
.text:000000014000735D                 mov     dword ptr [rsp+110h+PreparsedData], eax
.text:0000000140007361                 mov     r8d, esi
.text:0000000140007364                 mov     dl, sil
.text:0000000140007367                 mov     [rsp+110h+UsageValue], r14
.text:000000014000736C                 call    sub_14000176C
.text:0000000140007371
.text:0000000140007371 loc_140007371:                          ; CODE XREF: sub_140006D60+5E3↑j
.text:0000000140007371                                         ; sub_140006D60+5F1↑j ...
.text:0000000140007371                 lea     rsi, unk_14000B2E0
.text:0000000140007378                 mov     r13d, 5
.text:000000014000737E
.text:000000014000737E loc_14000737E:                          ; CODE XREF: sub_140006D60+856↓j
.text:000000014000737E                                         ; sub_140006D60+888↓j ...
.text:000000014000737E                 lea     rcx, [rdi+238h] ; Event
.text:0000000140007385                 xor     r8d, r8d        ; Wait
.text:0000000140007388                 xor     edx, edx        ; Increment
.text:000000014000738A                 call    cs:KeSetEvent
.text:0000000140007390                 jmp     loc_140006FE7
.text:0000000140007395 ; ---------------------------------------------------------------------------
.text:0000000140007395
.text:0000000140007395 loc_140007395:                          ; CODE XREF: sub_140006D60+56D↑j
.text:0000000140007395                                         ; sub_140006D60+57A↑j
.text:0000000140007395                 mov     [rdi+268h], r14w
.text:000000014000739D                 mov     [rdi+26Ah], si
.text:00000001400073A4                 cmp     r14w, r8w
.text:00000001400073A8                 jnz     short loc_1400073B5
.text:00000001400073AA                 mov     ecx, 78h ; 'x'
.text:00000001400073AF                 cmp     si, r8w
.text:00000001400073B3                 jz      short loc_1400073B8
.text:00000001400073B5
.text:00000001400073B5 loc_1400073B5:                          ; CODE XREF: sub_140006D60+648↑j
.text:00000001400073B5                 mov     ecx, r12d
.text:00000001400073B8
.text:00000001400073B8 loc_1400073B8:                          ; CODE XREF: sub_140006D60+653↑j
.text:00000001400073B8                 xchg    ecx, [rdi+26Ch]
.text:00000001400073BE                 cmp     cs:off_14000D008, rdx
.text:00000001400073C5                 lea     rsi, unk_14000B2E0
.text:00000001400073CC                 mov     r13d, 5
.text:00000001400073D2                 jz      short loc_1400073FE
.text:00000001400073D4                 mov     rax, cs:DeviceObject
.text:00000001400073DB                 cmp     [rax+48h], r12w
.text:00000001400073E0                 jz      short loc_1400073FE
.text:00000001400073E2                 mov     dword ptr [rsp+110h+PreparsedData], ecx
.text:00000001400073E6                 lea     r9d, [r13+5Dh]
.text:00000001400073EA                 mov     rcx, [rax+40h]
.text:00000001400073EE                 mov     r8d, r13d
.text:00000001400073F1                 mov     dl, r13b
.text:00000001400073F4                 mov     [rsp+110h+UsageValue], rsi
.text:00000001400073F9                 call    sub_14000176C
.text:00000001400073FE
.text:00000001400073FE loc_1400073FE:                          ; CODE XREF: sub_140006D60+672↑j
.text:00000001400073FE                                         ; sub_140006D60+680↑j
.text:00000001400073FE                 xor     eax, eax
.text:0000000140007400                 lea     rcx, [rbp+57h+var_98]
.text:0000000140007404                 mov     [rsp+110h+Report], rcx
.text:0000000140007409                 lea     rdx, [rbp+57h+var_90]
.text:000000014000740D                 mov     [rbp+57h+var_60], rax
.text:0000000140007411                 lea     rcx, [rbp+57h+var_A0]
.text:0000000140007415                 mov     rax, [rbp+57h+var_A8]
.text:0000000140007419                 xorps   xmm0, xmm0
.text:000000014000741C                 movups  [rbp+57h+var_80], xmm0
.text:0000000140007420                 mov     [rsp+110h+PreparsedData], rcx
.text:0000000140007425                 mov     r9d, 44464453h
.text:000000014000742B                 mov     rcx, cs:qword_14000D390
.text:0000000140007432                 mov     r8d, 200h
.text:0000000140007438                 movups  [rbp+57h+var_70], xmm0
.text:000000014000743C                 mov     qword ptr [rbp+57h+var_70], rax
.text:0000000140007440                 mov     rax, cs:qword_14000D388
.text:0000000140007447                 movups  [rbp+57h+var_90], xmm0
.text:000000014000744B                 mov     dword ptr [rbp+57h+var_90], 38h ; '8'
.text:0000000140007452                 mov     dword ptr [rbp+57h+var_80+8], r15d
.text:0000000140007456                 mov     dword ptr [rbp+57h+var_80+0Ch], r15d
.text:000000014000745A                 mov     rax, [rax+600h]
.text:0000000140007461                 mov     [rsp+110h+UsageValue], 8
.text:000000014000746A                 call    cs:__guard_dispatch_icall_fptr
.text:0000000140007470                 mov     ebx, eax
.text:0000000140007472                 test    eax, eax
.text:0000000140007474                 jns     short loc_14000749D
.text:0000000140007476                 mov     [rbp+57h+var_A0], r12
.text:000000014000747A                 mov     [rbp+57h+var_98], r12
.text:000000014000747E                 lea     r15, off_14000D008
.text:0000000140007485                 cmp     cs:off_14000D008, r15
.text:000000014000748C                 jz      loc_140007048
.text:0000000140007492                 mov     r9d, 63h ; 'c'
.text:0000000140007498                 jmp     loc_140006EC7
.text:000000014000749D ; ---------------------------------------------------------------------------
.text:000000014000749D
.text:000000014000749D loc_14000749D:                          ; CODE XREF: sub_140006D60+714↑j
.text:000000014000749D                 mov     rax, [rbp+57h+var_98]
.text:00000001400074A1                 xor     ecx, ecx
.text:00000001400074A3                 mov     [rax], rcx
.text:00000001400074A6                 mov     rax, [rbp+57h+var_98]
.text:00000001400074AA                 mov     rcx, [rbp+57h+var_B8]
.text:00000001400074AE                 mov     [rax], rcx
.text:00000001400074B1                 mov     rax, cs:qword_14000D388
.text:00000001400074B8                 mov     rdx, [rdi+90h]
.text:00000001400074BF                 mov     rcx, cs:qword_14000D390
.text:00000001400074C6                 mov     rax, [rax+9E0h]
.text:00000001400074CD                 call    cs:__guard_dispatch_icall_fptr
.text:00000001400074D3                 mov     rax, cs:qword_14000D388
.text:00000001400074DA                 mov     rdx, [rdi+88h]
.text:00000001400074E1                 mov     r8, [rbp+57h+var_A0]
.text:00000001400074E5                 mov     rcx, cs:qword_14000D390
.text:00000001400074EC                 mov     rax, [rax+78h]
.text:00000001400074F0                 call    cs:__guard_dispatch_icall_fptr
.text:00000001400074F6                 mov     rdx, [rdi+90h]
.text:00000001400074FD                 mov     ebx, eax
.text:00000001400074FF                 mov     rax, cs:qword_14000D388
.text:0000000140007506                 mov     rcx, cs:qword_14000D390
.text:000000014000750D                 mov     rax, [rax+9E8h]
.text:0000000140007514                 call    cs:__guard_dispatch_icall_fptr
.text:000000014000751A                 test    ebx, ebx
.text:000000014000751C                 jns     short loc_140007541
.text:000000014000751E                 lea     r15, off_14000D008
.text:0000000140007525                 cmp     cs:off_14000D008, r15
.text:000000014000752C                 jz      loc_140006FE7
.text:0000000140007532                 mov     r9d, 64h ; 'd'
.text:0000000140007538                 mov     dword ptr [rsp+110h+PreparsedData], ebx
.text:000000014000753C                 jmp     loc_140006ECB
.text:0000000140007541 ; ---------------------------------------------------------------------------
.text:0000000140007541
.text:0000000140007541 loc_140007541:                          ; CODE XREF: sub_140006D60+7BC↑j
.text:0000000140007541                 mov     rax, cs:qword_14000D388
.text:0000000140007548                 mov     rcx, cs:qword_14000D390
.text:000000014000754F                 mov     [rbp+57h+var_A0], r12
.text:0000000140007553                 mov     [rbp+57h+var_98], r12
.text:0000000140007557                 mov     rax, [rax+70h]
.text:000000014000755B                 mov     rdx, [rdi+88h]
.text:0000000140007562                 call    cs:__guard_dispatch_icall_fptr
.text:0000000140007568                 lea     r15, off_14000D008
.text:000000014000756F                 cmp     cs:off_14000D008, r15
.text:0000000140007576                 jz      short loc_1400075A4
.text:0000000140007578                 mov     rcx, cs:DeviceObject
.text:000000014000757F                 cmp     [rcx+48h], r12w
.text:0000000140007584                 jz      short loc_1400075A4
.text:0000000140007586                 mov     rcx, [rcx+40h]
.text:000000014000758A                 mov     r9d, 65h ; 'e'
.text:0000000140007590                 mov     dword ptr [rsp+110h+PreparsedData], eax
.text:0000000140007594                 mov     r8d, r13d
.text:0000000140007597                 mov     dl, r13b
.text:000000014000759A                 mov     [rsp+110h+UsageValue], rsi
.text:000000014000759F                 call    sub_14000176C
.text:00000001400075A4
.text:00000001400075A4 loc_1400075A4:                          ; CODE XREF: sub_140006D60+816↑j
.text:00000001400075A4                                         ; sub_140006D60+824↑j
.text:00000001400075A4                 lea     rcx, [rdi+0C8h] ; Event
.text:00000001400075AB                 xor     r8d, r8d        ; Wait
.text:00000001400075AE                 xor     edx, edx        ; Increment
.text:00000001400075B0                 call    cs:KeSetEvent
.text:00000001400075B6                 jmp     loc_14000737E
.text:00000001400075BB ; ---------------------------------------------------------------------------
.text:00000001400075BB
.text:00000001400075BB loc_1400075BB:                          ; CODE XREF: sub_140006D60+55F↑j
.text:00000001400075BB                 lea     r15, off_14000D008
.text:00000001400075C2                 cmp     cs:off_14000D008, r15
.text:00000001400075C9                 jz      loc_140007371
.text:00000001400075CF                 mov     rcx, cs:DeviceObject
.text:00000001400075D6                 lea     rsi, unk_14000B2E0
.text:00000001400075DD                 mov     r13d, 5
.text:00000001400075E3                 cmp     [rcx+48h], r12w
.text:00000001400075E8                 jz      loc_14000737E
.text:00000001400075EE                 mov     rcx, [rcx+40h]
.text:00000001400075F2                 lea     r9d, [r13+61h]
.text:00000001400075F6                 mov     r8d, r13d
.text:00000001400075F9                 mov     [rsp+110h+UsageValue], rsi
.text:00000001400075FE                 mov     dl, r13b
.text:0000000140007601                 call    sub_1400016A8
.text:0000000140007606                 jmp     loc_14000737E
.text:0000000140007606 ; } // starts at 140006D60
.text:0000000140007606 sub_140006D60   endp
.text:0000000140007606
.text:0000000140007606 ; ---------------------------------------------------------------------------
.text:000000014000760B algn_14000760B:                         ; DATA XREF: .pdata:000000014000E1BC↓o
.text:000000014000760B                 align 10h
.text:0000000140007610
.text:0000000140007610 ; =============== S U B R O U T I N E =======================================
.text:0000000140007610
.text:0000000140007610
.text:0000000140007610 ; int __fastcall sub_140007610(__int64, __int64, __int64, __int64, unsigned int)
.text:0000000140007610 sub_140007610   proc near               ; DATA XREF: sub_140006434+BC↑o
.text:0000000140007610                                         ; .rdata:000000014000B168↓o ...
.text:0000000140007610
.text:0000000140007610 var_98          = qword ptr -98h
.text:0000000140007610 var_90          = qword ptr -90h
.text:0000000140007610 var_88          = qword ptr -88h
.text:0000000140007610 var_80          = qword ptr -80h
.text:0000000140007610 var_78          = qword ptr -78h
.text:0000000140007610 var_70          = qword ptr -70h
.text:0000000140007610 var_68          = dword ptr -68h
.text:0000000140007610 var_58          = qword ptr -58h
.text:0000000140007610 var_50          = dword ptr -50h
.text:0000000140007610 var_4C          = dword ptr -4Ch
.text:0000000140007610 var_48          = qword ptr -48h
.text:0000000140007610 var_40          = qword ptr -40h
.text:0000000140007610 arg_10          = qword ptr  18h
.text:0000000140007610 arg_20          = dword ptr  28h
.text:0000000140007610
.text:0000000140007610 ; __unwind { // __GSHandlerCheck
.text:0000000140007610                 mov     [rsp+arg_10], rbx
.text:0000000140007615                 push    rbp
.text:0000000140007616                 push    rsi
.text:0000000140007617                 push    rdi
.text:0000000140007618                 push    r12
.text:000000014000761A                 push    r13
.text:000000014000761C                 push    r14
.text:000000014000761E                 push    r15
.text:0000000140007620                 sub     rsp, 80h
.text:0000000140007627                 mov     rax, cs:__security_cookie
.text:000000014000762E                 xor     rax, rsp
.text:0000000140007631                 mov     [rsp+0B8h+var_40], rax
.text:0000000140007636                 mov     r14d, [rsp+0B8h+arg_20]
.text:000000014000763E                 xor     r13d, r13d
.text:0000000140007641                 mov     edi, r13d
.text:0000000140007644                 mov     r15, r9
.text:0000000140007647                 mov     r12, r8
.text:000000014000764A                 mov     rsi, rdx
.text:000000014000764D                 mov     rbp, rcx
.text:0000000140007650                 lea     rbx, off_14000D008
.text:0000000140007657                 cmp     cs:off_14000D008, rbx
.text:000000014000765E                 lea     rax, unk_14000B2E0
.text:0000000140007665                 jz      loc_1400076F6
.text:000000014000766B                 mov     rcx, cs:DeviceObject
.text:0000000140007672                 cmp     [rcx+48h], r13w
.text:0000000140007677                 jz      short loc_140007692
.text:0000000140007679                 mov     rcx, [rcx+40h]
.text:000000014000767D                 lea     r8d, [r13+5]
.text:0000000140007681                 mov     dl, r8b
.text:0000000140007684                 mov     [rsp+0B8h+var_98], rax
.text:0000000140007689                 lea     r9d, [r13+11h]
.text:000000014000768D                 call    sub_1400016A8
.text:0000000140007692
.text:0000000140007692 loc_140007692:                          ; CODE XREF: sub_140007610+67↑j
.text:0000000140007692                 cmp     cs:off_14000D008, rbx
.text:0000000140007699                 jz      short loc_1400076F6
.text:000000014000769B                 mov     rbx, cs:DeviceObject
.text:00000001400076A2                 cmp     [rbx+48h], r13w
.text:00000001400076A7                 jz      short loc_1400076F6
.text:00000001400076A9                 mov     ecx, r14d
.text:00000001400076AC                 call    sub_140007D50
.text:00000001400076B1                 mov     rcx, [rbx+40h]
.text:00000001400076B5                 mov     r9d, 12h
.text:00000001400076BB                 mov     [rsp+0B8h+var_68], r14d
.text:00000001400076C0                 mov     [rsp+0B8h+var_70], rax
.text:00000001400076C5                 mov     [rsp+0B8h+var_78], r15
.text:00000001400076CA                 mov     [rsp+0B8h+var_80], r12
.text:00000001400076CF                 lea     r15d, [r9-0Dh]
.text:00000001400076D3                 mov     [rsp+0B8h+var_88], rsi
.text:00000001400076D8                 lea     r12, unk_14000B2E0
.text:00000001400076DF                 mov     r8d, r15d
.text:00000001400076E2                 mov     [rsp+0B8h+var_90], rbp
.text:00000001400076E7                 mov     dl, r15b
.text:00000001400076EA                 mov     [rsp+0B8h+var_98], r12
.text:00000001400076EF                 call    sub_140009A88
.text:00000001400076F4                 jmp     short loc_140007703
.text:00000001400076F6 ; ---------------------------------------------------------------------------
.text:00000001400076F6
.text:00000001400076F6 loc_1400076F6:                          ; CODE XREF: sub_140007610+55↑j
.text:00000001400076F6                                         ; sub_140007610+89↑j ...
.text:00000001400076F6                 mov     r15d, 5
.text:00000001400076FC                 lea     r12, unk_14000B2E0
.text:0000000140007703
.text:0000000140007703 loc_140007703:                          ; CODE XREF: sub_140007610+E4↑j
.text:0000000140007703                 mov     rax, cs:qword_14000D388
.text:000000014000770A                 mov     rdx, rbp
.text:000000014000770D                 mov     rcx, cs:qword_14000D390
.text:0000000140007714                 mov     rax, [rax+4E8h]
.text:000000014000771B                 call    cs:__guard_dispatch_icall_fptr
.text:0000000140007721                 mov     r8, cs:off_14000D028
.text:0000000140007728                 mov     rbx, rax
.text:000000014000772B                 mov     rax, cs:qword_14000D388
.text:0000000140007732                 mov     rdx, rbx
.text:0000000140007735                 mov     rcx, cs:qword_14000D390
.text:000000014000773C                 mov     rax, [rax+650h]
.text:0000000140007743                 call    cs:__guard_dispatch_icall_fptr
.text:0000000140007749                 mov     rcx, cs:qword_14000D390
.text:0000000140007750                 mov     rdx, rbx
.text:0000000140007753                 mov     rbp, rax
.text:0000000140007756                 mov     rax, cs:qword_14000D388
.text:000000014000775D                 mov     rax, [rax+150h]
.text:0000000140007764                 call    cs:__guard_dispatch_icall_fptr
.text:000000014000776A                 mov     ecx, r14d
.text:000000014000776D                 mov     rbx, rax
.text:0000000140007770                 sub     ecx, 0B0193h
.text:0000000140007776                 jz      loc_140007922
.text:000000014000777C                 cmp     ecx, 0Fh
.text:000000014000777F                 jz      loc_140007855
.text:0000000140007785                 mov     rax, cs:qword_14000D388
.text:000000014000778C                 mov     rdx, rsi
.text:000000014000778F                 mov     rcx, cs:qword_14000D390
.text:0000000140007796                 mov     rax, [rax+7D8h]
.text:000000014000779D                 call    cs:__guard_dispatch_icall_fptr
.text:00000001400077A3                 mov     rax, cs:qword_14000D388
.text:00000001400077AA                 lea     r9, [rsp+0B8h+var_50]
.text:00000001400077AF                 mov     rcx, cs:qword_14000D390
.text:00000001400077B6                 mov     r8, rbx
.text:00000001400077B9                 mov     [rsp+0B8h+var_48], r13
.text:00000001400077BE                 mov     rdx, rsi
.text:00000001400077C1                 mov     [rsp+0B8h+var_50], 10h
.text:00000001400077C9                 mov     [rsp+0B8h+var_4C], 8
.text:00000001400077D1                 mov     rax, [rax+7E8h]
.text:00000001400077D8                 call    cs:__guard_dispatch_icall_fptr
.text:00000001400077DE                 test    al, al
.text:00000001400077E0                 jnz     loc_140007AC0
.text:00000001400077E6                 mov     rax, cs:qword_14000D388
.text:00000001400077ED                 mov     rdx, rsi
.text:00000001400077F0                 mov     rcx, cs:qword_14000D390
.text:00000001400077F7                 mov     rax, [rax+7F0h]
.text:00000001400077FE                 call    cs:__guard_dispatch_icall_fptr
.text:0000000140007804                 mov     edi, eax
.text:0000000140007806                 lea     rbx, off_14000D008
.text:000000014000780D                 cmp     cs:off_14000D008, rbx
.text:0000000140007814                 jz      loc_140007A96
.text:000000014000781A                 mov     ecx, r14d
.text:000000014000781D                 call    sub_140007D50
.text:0000000140007822                 mov     rcx, cs:DeviceObject
.text:0000000140007829                 mov     r9d, 17h
.text:000000014000782F                 mov     dword ptr [rsp+0B8h+var_80], edi
.text:0000000140007833                 mov     r8d, r15d
.text:0000000140007836                 mov     dword ptr [rsp+0B8h+var_88], r14d
.text:000000014000783B                 mov     dl, 2
.text:000000014000783D                 mov     [rsp+0B8h+var_90], rax
.text:0000000140007842                 mov     rcx, [rcx+40h]
.text:0000000140007846                 mov     [rsp+0B8h+var_98], r12
.text:000000014000784B                 call    sub_140009CB4
.text:0000000140007850                 jmp     loc_140007A96
.text:0000000140007855 ; ---------------------------------------------------------------------------
.text:0000000140007855
.text:0000000140007855 loc_140007855:                          ; CODE XREF: sub_140007610+16F↑j
.text:0000000140007855                 cmp     [rbp+98h], r13
.text:000000014000785C                 jnz     short loc_140007879
.text:000000014000785E                 lea     r9, aPdevicecontext ; "pDeviceContext->hIncomingQueue != NULL"
.text:0000000140007865                 mov     r8d, 0FDh
.text:000000014000786B                 lea     rdx, aEvtiodevicecon ; "EvtIoDeviceControl"
.text:0000000140007872                 xor     ecx, ecx
.text:0000000140007874                 call    sub_140001000
.text:0000000140007879
.text:0000000140007879 loc_140007879:                          ; CODE XREF: sub_140007610+24C↑j
.text:0000000140007879                 mov     rax, cs:qword_14000D388
.text:0000000140007880                 mov     rdx, [rbp+0A8h]
.text:0000000140007887                 mov     rcx, cs:qword_14000D390
.text:000000014000788E                 mov     rax, [rax+9E0h]
.text:0000000140007895                 call    cs:__guard_dispatch_icall_fptr
.text:000000014000789B                 mov     rax, cs:qword_14000D388
.text:00000001400078A2                 mov     rdx, rsi
.text:00000001400078A5                 mov     r8, [rbp+98h]
.text:00000001400078AC                 mov     rcx, cs:qword_14000D390
.text:00000001400078B3                 mov     rax, [rax+8C8h]
.text:00000001400078BA                 call    cs:__guard_dispatch_icall_fptr
.text:00000001400078C0                 mov     rdx, [rbp+0A8h]
.text:00000001400078C7                 mov     edi, eax
.text:00000001400078C9                 mov     rax, cs:qword_14000D388
.text:00000001400078D0                 mov     rcx, cs:qword_14000D390
.text:00000001400078D7                 mov     rax, [rax+9E8h]
.text:00000001400078DE                 call    cs:__guard_dispatch_icall_fptr
.text:00000001400078E4                 test    edi, edi
.text:00000001400078E6                 jns     short loc_14000790B
.text:00000001400078E8                 lea     rbx, off_14000D008
.text:00000001400078EF                 cmp     cs:off_14000D008, rbx
.text:00000001400078F6                 jz      loc_140007A96
.text:00000001400078FC                 mov     r9d, 16h
.text:0000000140007902                 mov     dword ptr [rsp+0B8h+var_90], edi
.text:0000000140007906                 jmp     loc_1400079EC
.text:000000014000790B ; ---------------------------------------------------------------------------
.text:000000014000790B
.text:000000014000790B loc_14000790B:                          ; CODE XREF: sub_140007610+2D6↑j
.text:000000014000790B                 lea     rcx, [rbp+0B0h] ; Event
.text:0000000140007912                 xor     r8d, r8d        ; Wait
.text:0000000140007915                 xor     edx, edx        ; Increment
.text:0000000140007917                 call    cs:KeSetEvent
.text:000000014000791D                 jmp     loc_140007A8F
.text:0000000140007922 ; ---------------------------------------------------------------------------
.text:0000000140007922
.text:0000000140007922 loc_140007922:                          ; CODE XREF: sub_140007610+166↑j
.text:0000000140007922                 mov     rax, cs:qword_14000D388
.text:0000000140007929                 mov     rdx, rsi
.text:000000014000792C                 mov     rcx, cs:qword_14000D390
.text:0000000140007933                 mov     [rsp+0B8h+var_58], r13
.text:0000000140007938                 mov     rax, [rax+8C0h]
.text:000000014000793F                 call    cs:__guard_dispatch_icall_fptr
.text:0000000140007945                 mov     rcx, cs:qword_14000D390
.text:000000014000794C                 mov     rdx, rsi
.text:000000014000794F                 cmp     al, 1
.text:0000000140007951                 mov     rax, cs:qword_14000D388
.text:0000000140007958                 jnz     short loc_1400079B6
.text:000000014000795A                 mov     r8, cs:off_14000D050
.text:0000000140007961                 mov     rax, [rax+650h]
.text:0000000140007968                 call    cs:__guard_dispatch_icall_fptr
.text:000000014000796E                 mov     rdx, [rax+8]
.text:0000000140007972                 test    rdx, rdx
.text:0000000140007975                 jnz     short loc_1400079AF
.text:0000000140007977                 lea     rbx, off_14000D008
.text:000000014000797E                 cmp     cs:off_14000D008, rbx
.text:0000000140007985                 jz      short loc_1400079A5
.text:0000000140007987                 mov     rcx, cs:DeviceObject
.text:000000014000798E                 lea     r9d, [rdx+13h]
.text:0000000140007992                 mov     r8d, r15d
.text:0000000140007995                 mov     [rsp+0B8h+var_98], r12
.text:000000014000799A                 mov     dl, 2
.text:000000014000799C                 mov     rcx, [rcx+40h]
.text:00000001400079A0                 call    sub_1400016A8
.text:00000001400079A5
.text:00000001400079A5 loc_1400079A5:                          ; CODE XREF: sub_140007610+375↑j
.text:00000001400079A5                 mov     edi, 0C0000369h
.text:00000001400079AA                 jmp     loc_140007A9A
.text:00000001400079AF ; ---------------------------------------------------------------------------
.text:00000001400079AF
.text:00000001400079AF loc_1400079AF:                          ; CODE XREF: sub_140007610+365↑j
.text:00000001400079AF                 mov     [rsp+0B8h+var_58], rdx
.text:00000001400079B4                 jmp     short loc_140007A13
.text:00000001400079B6 ; ---------------------------------------------------------------------------
.text:00000001400079B6
.text:00000001400079B6 loc_1400079B6:                          ; CODE XREF: sub_140007610+348↑j
.text:00000001400079B6                 mov     rax, [rax+860h]
.text:00000001400079BD                 lea     r8, [rsp+0B8h+var_58]
.text:00000001400079C2                 call    cs:__guard_dispatch_icall_fptr
.text:00000001400079C8                 mov     edi, eax
.text:00000001400079CA                 test    eax, eax
.text:00000001400079CC                 jns     short loc_140007A0E
.text:00000001400079CE                 lea     rbx, off_14000D008
.text:00000001400079D5                 cmp     cs:off_14000D008, rbx
.text:00000001400079DC                 jz      loc_140007A96
.text:00000001400079E2                 mov     r9d, 14h
.text:00000001400079E8
.text:00000001400079E8 loc_1400079E8:                          ; CODE XREF: sub_140007610+456↓j
.text:00000001400079E8                 mov     dword ptr [rsp+0B8h+var_90], eax
.text:00000001400079EC
.text:00000001400079EC loc_1400079EC:                          ; CODE XREF: sub_140007610+2F6↑j
.text:00000001400079EC                 lfence
.text:00000001400079EF                 mov     rcx, cs:DeviceObject
.text:00000001400079F6                 mov     r8d, r15d
.text:00000001400079F9                 mov     dl, 2
.text:00000001400079FB                 mov     [rsp+0B8h+var_98], r12
.text:0000000140007A00                 mov     rcx, [rcx+40h]
.text:0000000140007A04                 call    sub_14000176C
.text:0000000140007A09                 jmp     loc_140007A96
.text:0000000140007A0E ; ---------------------------------------------------------------------------
.text:0000000140007A0E
.text:0000000140007A0E loc_140007A0E:                          ; CODE XREF: sub_140007610+3BC↑j
.text:0000000140007A0E                 mov     rdx, [rsp+0B8h+var_58]
.text:0000000140007A13
.text:0000000140007A13 loc_140007A13:                          ; CODE XREF: sub_140007610+3A4↑j
.text:0000000140007A13                 mov     r9, [rbp+40h]
.text:0000000140007A17                 movzx   eax, word ptr [r9+1Ah]
.text:0000000140007A1C                 test    ax, ax
.text:0000000140007A1F                 jz      short loc_140007A68
.text:0000000140007A21                 mov     r9, [r9+20h]
.text:0000000140007A25                 mov     ebx, eax
.text:0000000140007A27                 mov     rax, cs:qword_14000D388
.text:0000000140007A2E                 xor     r8d, r8d
.text:0000000140007A31                 mov     rcx, cs:qword_14000D390
.text:0000000140007A38                 mov     [rsp+0B8h+var_98], rbx
.text:0000000140007A3D                 mov     rax, [rax+628h]
.text:0000000140007A44                 call    cs:__guard_dispatch_icall_fptr
.text:0000000140007A4A                 mov     edi, eax
.text:0000000140007A4C                 test    eax, eax
.text:0000000140007A4E                 jns     short loc_140007A6B
.text:0000000140007A50                 lea     rbx, off_14000D008
.text:0000000140007A57                 cmp     cs:off_14000D008, rbx
.text:0000000140007A5E                 jz      short loc_140007A96
.text:0000000140007A60                 mov     r9d, 15h
.text:0000000140007A66                 jmp     short loc_1400079E8
.text:0000000140007A68 ; ---------------------------------------------------------------------------
.text:0000000140007A68
.text:0000000140007A68 loc_140007A68:                          ; CODE XREF: sub_140007610+40F↑j
.text:0000000140007A68                 mov     rbx, r13
.text:0000000140007A6B
.text:0000000140007A6B loc_140007A6B:                          ; CODE XREF: sub_140007610+43E↑j
.text:0000000140007A6B                 mov     rax, cs:qword_14000D388
.text:0000000140007A72                 mov     r9, rbx
.text:0000000140007A75                 mov     rcx, cs:qword_14000D390
.text:0000000140007A7C                 mov     r8d, edi
.text:0000000140007A7F                 mov     rdx, rsi
.text:0000000140007A82                 mov     rax, [rax+848h]
.text:0000000140007A89                 call    cs:__guard_dispatch_icall_fptr
.text:0000000140007A8F
.text:0000000140007A8F loc_140007A8F:                          ; CODE XREF: sub_140007610+30D↑j
.text:0000000140007A8F                 lea     rbx, off_14000D008
.text:0000000140007A96
.text:0000000140007A96 loc_140007A96:                          ; CODE XREF: sub_140007610+204↑j
.text:0000000140007A96                                         ; sub_140007610+240↑j ...
.text:0000000140007A96                 test    edi, edi
.text:0000000140007A98                 jns     short loc_140007AC7
.text:0000000140007A9A
.text:0000000140007A9A loc_140007A9A:                          ; CODE XREF: sub_140007610+39A↑j
.text:0000000140007A9A                 lfence
.text:0000000140007A9D                 mov     rax, cs:qword_14000D388
.text:0000000140007AA4                 mov     r8d, edi
.text:0000000140007AA7                 mov     rcx, cs:qword_14000D390
.text:0000000140007AAE                 mov     rdx, rsi
.text:0000000140007AB1                 mov     rax, [rax+838h]
.text:0000000140007AB8                 call    cs:__guard_dispatch_icall_fptr
.text:0000000140007ABE                 jmp     short loc_140007AC7
.text:0000000140007AC0 ; ---------------------------------------------------------------------------
.text:0000000140007AC0
.text:0000000140007AC0 loc_140007AC0:                          ; CODE XREF: sub_140007610+1D0↑j
.text:0000000140007AC0                 lea     rbx, off_14000D008
.text:0000000140007AC7
.text:0000000140007AC7 loc_140007AC7:                          ; CODE XREF: sub_140007610+488↑j
.text:0000000140007AC7                                         ; sub_140007610+4AE↑j
.text:0000000140007AC7                 cmp     cs:off_14000D008, rbx
.text:0000000140007ACE                 jz      short loc_140007AF8
.text:0000000140007AD0                 mov     rcx, cs:DeviceObject
.text:0000000140007AD7                 cmp     [rcx+48h], r13w
.text:0000000140007ADC                 jz      short loc_140007AF8
.text:0000000140007ADE                 mov     rcx, [rcx+40h]
.text:0000000140007AE2                 mov     r9d, 18h
.text:0000000140007AE8                 mov     r8d, r15d
.text:0000000140007AEB                 mov     [rsp+0B8h+var_98], r12
.text:0000000140007AF0                 mov     dl, r15b
.text:0000000140007AF3                 call    sub_1400016A8
.text:0000000140007AF8
.text:0000000140007AF8 loc_140007AF8:                          ; CODE XREF: sub_140007610+4BE↑j
.text:0000000140007AF8                                         ; sub_140007610+4CC↑j
.text:0000000140007AF8                 mov     rcx, [rsp+0B8h+var_40]
.text:0000000140007AFD                 xor     rcx, rsp        ; StackCookie
.text:0000000140007B00                 call    __security_check_cookie
.text:0000000140007B05                 mov     rbx, [rsp+0B8h+arg_10]
.text:0000000140007B0D                 add     rsp, 80h
.text:0000000140007B14                 pop     r15
.text:0000000140007B16                 pop     r14
.text:0000000140007B18                 pop     r13
.text:0000000140007B1A                 pop     r12
.text:0000000140007B1C                 pop     rdi
.text:0000000140007B1D                 pop     rsi
.text:0000000140007B1E                 pop     rbp
.text:0000000140007B1F                 retn
.text:0000000140007B1F ; } // starts at 140007610
.text:0000000140007B1F sub_140007610   endp
.text:0000000140007B1F
.text:0000000140007B20
.text:0000000140007B20 ; =============== S U B R O U T I N E =======================================
.text:0000000140007B20
.text:0000000140007B20
.text:0000000140007B20 ; LONG __fastcall sub_140007B20(__int64, __int64, __int64)
.text:0000000140007B20 sub_140007B20   proc near               ; DATA XREF: sub_140006434+AB↑o
.text:0000000140007B20                                         ; .rdata:000000014000B16C↓o ...
.text:0000000140007B20
.text:0000000140007B20 var_38          = qword ptr -38h
.text:0000000140007B20 var_30          = qword ptr -30h
.text:0000000140007B20 var_28          = qword ptr -28h
.text:0000000140007B20 var_20          = qword ptr -20h
.text:0000000140007B20 arg_0           = qword ptr  8
.text:0000000140007B20 arg_8           = qword ptr  10h
.text:0000000140007B20 arg_10          = qword ptr  18h
.text:0000000140007B20
.text:0000000140007B20                 mov     rax, rsp
.text:0000000140007B23                 mov     [rax+8], rbx
.text:0000000140007B27                 mov     [rax+10h], rsi
.text:0000000140007B2B                 mov     [rax+18h], rdi
.text:0000000140007B2F                 push    r12
.text:0000000140007B31                 push    r14
.text:0000000140007B33                 push    r15
.text:0000000140007B35                 sub     rsp, 40h
.text:0000000140007B39                 mov     rsi, r8
.text:0000000140007B3C                 mov     rbx, rdx
.text:0000000140007B3F                 mov     rdi, rcx
.text:0000000140007B42                 lea     r14, off_14000D008
.text:0000000140007B49                 xor     r15d, r15d
.text:0000000140007B4C                 cmp     cs:off_14000D008, r14
.text:0000000140007B53                 lea     r12, unk_14000B2E0
.text:0000000140007B5A                 jz      short loc_140007BC3
.text:0000000140007B5C                 mov     rcx, cs:DeviceObject
.text:0000000140007B63                 cmp     [rcx+48h], r15w
.text:0000000140007B68                 jz      short loc_140007B82
.text:0000000140007B6A                 mov     rcx, [rcx+40h]
.text:0000000140007B6E                 lea     r8d, [r15+5]
.text:0000000140007B72                 mov     dl, r8b
.text:0000000140007B75                 mov     [rax-38h], r12
.text:0000000140007B79                 lea     r9d, [r15+0Dh]
.text:0000000140007B7D                 call    sub_1400016A8
.text:0000000140007B82
.text:0000000140007B82 loc_140007B82:                          ; CODE XREF: sub_140007B20+48↑j
.text:0000000140007B82                 cmp     cs:off_14000D008, r14
.text:0000000140007B89                 jz      short loc_140007BC3
.text:0000000140007B8B                 mov     rcx, cs:DeviceObject
.text:0000000140007B92                 cmp     [rcx+48h], r15w
.text:0000000140007B97                 jz      short loc_140007BC3
.text:0000000140007B99                 mov     rcx, [rcx+40h]
.text:0000000140007B9D                 mov     r9d, 0Eh
.text:0000000140007BA3                 mov     [rsp+58h+var_20], rsi
.text:0000000140007BA8                 mov     [rsp+58h+var_28], rbx
.text:0000000140007BAD                 mov     [rsp+58h+var_30], rdi
.text:0000000140007BB2                 lea     r8d, [r9-9]
.text:0000000140007BB6                 mov     [rsp+58h+var_38], r12
.text:0000000140007BBB                 mov     dl, r8b
.text:0000000140007BBE                 call    sub_140009940
.text:0000000140007BC3
.text:0000000140007BC3 loc_140007BC3:                          ; CODE XREF: sub_140007B20+3A↑j
.text:0000000140007BC3                                         ; sub_140007B20+69↑j ...
.text:0000000140007BC3                 mov     rax, cs:qword_14000D388
.text:0000000140007BCA                 mov     rdx, rdi
.text:0000000140007BCD                 mov     rcx, cs:qword_14000D390
.text:0000000140007BD4                 mov     rax, [rax+4E8h]
.text:0000000140007BDB                 call    cs:__guard_dispatch_icall_fptr
.text:0000000140007BE1                 mov     rcx, cs:qword_14000D388
.text:0000000140007BE8                 mov     rdx, rax
.text:0000000140007BEB                 mov     r8, cs:off_14000D028
.text:0000000140007BF2                 mov     rax, [rcx+650h]
.text:0000000140007BF9                 mov     rcx, cs:qword_14000D390
.text:0000000140007C00                 call    cs:__guard_dispatch_icall_fptr
.text:0000000140007C06                 mov     rdi, rax
.text:0000000140007C09                 cmp     [rax+98h], r15
.text:0000000140007C10                 jnz     short loc_140007C2D
.text:0000000140007C12                 lea     r9, aPdevicecontext ; "pDeviceContext->hIncomingQueue != NULL"
.text:0000000140007C19                 mov     r8d, 84h
.text:0000000140007C1F                 lea     rdx, aEvtioread ; "EvtIoRead"
.text:0000000140007C26                 xor     ecx, ecx
.text:0000000140007C28                 call    sub_140001000
.text:0000000140007C2D
.text:0000000140007C2D loc_140007C2D:                          ; CODE XREF: sub_140007B20+F0↑j
.text:0000000140007C2D                 mov     rcx, cs:qword_14000D388
.text:0000000140007C34                 mov     rdx, [rdi+0A8h]
.text:0000000140007C3B                 mov     rax, [rcx+9E0h]
.text:0000000140007C42                 mov     rcx, cs:qword_14000D390
.text:0000000140007C49                 call    cs:__guard_dispatch_icall_fptr
.text:0000000140007C4F                 mov     rax, cs:qword_14000D388
.text:0000000140007C56                 mov     rdx, rbx
.text:0000000140007C59                 mov     r8, [rdi+98h]
.text:0000000140007C60                 mov     rcx, cs:qword_14000D390
.text:0000000140007C67                 mov     rax, [rax+8C8h]
.text:0000000140007C6E                 call    cs:__guard_dispatch_icall_fptr
.text:0000000140007C74                 mov     rcx, cs:qword_14000D388
.text:0000000140007C7B                 mov     esi, eax
.text:0000000140007C7D                 mov     rdx, [rdi+0A8h]
.text:0000000140007C84                 mov     rax, [rcx+9E8h]
.text:0000000140007C8B                 mov     rcx, cs:qword_14000D390
.text:0000000140007C92                 call    cs:__guard_dispatch_icall_fptr
.text:0000000140007C98                 test    esi, esi
.text:0000000140007C9A                 jns     short loc_140007CF0
.text:0000000140007C9C                 lfence
.text:0000000140007C9F                 cmp     cs:off_14000D008, r14
.text:0000000140007CA6                 jz      short loc_140007CCD
.text:0000000140007CA8                 mov     rcx, cs:DeviceObject
.text:0000000140007CAF                 mov     r9d, 0Fh
.text:0000000140007CB5                 mov     dword ptr [rsp+58h+var_30], esi
.text:0000000140007CB9                 mov     dl, 2
.text:0000000140007CBB                 mov     [rsp+58h+var_38], r12
.text:0000000140007CC0                 mov     rcx, [rcx+40h]
.text:0000000140007CC4                 lea     r8d, [r9-0Ah]
.text:0000000140007CC8                 call    sub_14000176C
.text:0000000140007CCD
.text:0000000140007CCD loc_140007CCD:                          ; CODE XREF: sub_140007B20+186↑j
.text:0000000140007CCD                 mov     rax, cs:qword_14000D388
.text:0000000140007CD4                 mov     r8d, esi
.text:0000000140007CD7                 mov     rcx, cs:qword_14000D390
.text:0000000140007CDE                 mov     rdx, rbx
.text:0000000140007CE1                 mov     rax, [rax+838h]
.text:0000000140007CE8                 call    cs:__guard_dispatch_icall_fptr
.text:0000000140007CEE                 jmp     short loc_140007D02
.text:0000000140007CF0 ; ---------------------------------------------------------------------------
.text:0000000140007CF0
.text:0000000140007CF0 loc_140007CF0:                          ; CODE XREF: sub_140007B20+17A↑j
.text:0000000140007CF0                 lea     rcx, [rdi+0B0h] ; Event
.text:0000000140007CF7                 xor     r8d, r8d        ; Wait
.text:0000000140007CFA                 xor     edx, edx        ; Increment
.text:0000000140007CFC                 call    cs:KeSetEvent
.text:0000000140007D02
.text:0000000140007D02 loc_140007D02:                          ; CODE XREF: sub_140007B20+1CE↑j
.text:0000000140007D02                 cmp     cs:off_14000D008, r14
.text:0000000140007D09                 jz      short loc_140007D34
.text:0000000140007D0B                 mov     rcx, cs:DeviceObject
.text:0000000140007D12                 cmp     [rcx+48h], r15w
.text:0000000140007D17                 jz      short loc_140007D34
.text:0000000140007D19                 mov     rcx, [rcx+40h]
.text:0000000140007D1D                 mov     r9d, 10h
.text:0000000140007D23                 mov     [rsp+58h+var_38], r12
.text:0000000140007D28                 lea     r8d, [r9-0Bh]
.text:0000000140007D2C                 mov     dl, r8b
.text:0000000140007D2F                 call    sub_1400016A8
.text:0000000140007D34
.text:0000000140007D34 loc_140007D34:                          ; CODE XREF: sub_140007B20+1E9↑j
.text:0000000140007D34                                         ; sub_140007B20+1F7↑j
.text:0000000140007D34                 mov     rbx, [rsp+58h+arg_0]
.text:0000000140007D39                 mov     rsi, [rsp+58h+arg_8]
.text:0000000140007D3E                 mov     rdi, [rsp+58h+arg_10]
.text:0000000140007D43                 add     rsp, 40h
.text:0000000140007D47                 pop     r15
.text:0000000140007D49                 pop     r14
.text:0000000140007D4B                 pop     r12
.text:0000000140007D4D                 retn
.text:0000000140007D4D sub_140007B20   endp
.text:0000000140007D4D
.text:0000000140007D4D ; ---------------------------------------------------------------------------
.text:0000000140007D4E algn_140007D4E:                         ; DATA XREF: .pdata:000000014000E1D4↓o
.text:0000000140007D4E                 align 10h
.text:0000000140007D50
.text:0000000140007D50 ; =============== S U B R O U T I N E =======================================
.text:0000000140007D50
.text:0000000140007D50
.text:0000000140007D50 ; const char *__fastcall sub_140007D50(unsigned int)
.text:0000000140007D50 sub_140007D50   proc near               ; CODE XREF: sub_140007610+9C↑p
.text:0000000140007D50                                         ; sub_140007610+20D↑p
.text:0000000140007D50                 mov     eax, 0B01A8h
.text:0000000140007D55                 cmp     ecx, eax
.text:0000000140007D57                 ja      loc_140007E31
.text:0000000140007D5D                 jz      loc_140007E29
.text:0000000140007D63                 mov     eax, 0B0198h
.text:0000000140007D68                 cmp     ecx, eax
.text:0000000140007D6A                 ja      short loc_140007DD8
.text:0000000140007D6C                 jz      short loc_140007DD0
.text:0000000140007D6E                 sub     ecx, 0B0190h
.text:0000000140007D74                 jz      short loc_140007DC8
.text:0000000140007D76                 sub     ecx, 1
.text:0000000140007D79                 jz      short loc_140007DC0
.text:0000000140007D7B                 sub     ecx, 1
.text:0000000140007D7E                 jz      short loc_140007DB8
.text:0000000140007D80                 sub     ecx, 1
.text:0000000140007D83                 jz      short loc_140007DB0
.text:0000000140007D85                 sub     ecx, 1
.text:0000000140007D88                 jz      short loc_140007DA8
.text:0000000140007D8A                 sub     ecx, 1
.text:0000000140007D8D                 jz      short loc_140007DA0
.text:0000000140007D8F                 cmp     ecx, 2
.text:0000000140007D92                 jnz     loc_140007E57
.text:0000000140007D98                 lea     rax, aIoctlHidFlushQ ; "IOCTL_HID_FLUSH_QUEUE"
.text:0000000140007D9F                 retn
.text:0000000140007DA0 ; ---------------------------------------------------------------------------
.text:0000000140007DA0
.text:0000000140007DA0 loc_140007DA0:                          ; CODE XREF: sub_140007D50+3D↑j
.text:0000000140007DA0                 lea     rax, aIoctlHidSetOut ; "IOCTL_HID_SET_OUTPUT_REPORT"
.text:0000000140007DA7                 retn
.text:0000000140007DA8 ; ---------------------------------------------------------------------------
.text:0000000140007DA8
.text:0000000140007DA8 loc_140007DA8:                          ; CODE XREF: sub_140007D50+38↑j
.text:0000000140007DA8                 lea     rax, aIoctlHidSetDri ; "IOCTL_HID_SET_DRIVER_CONFIG"
.text:0000000140007DAF                 retn
.text:0000000140007DB0 ; ---------------------------------------------------------------------------
.text:0000000140007DB0
.text:0000000140007DB0 loc_140007DB0:                          ; CODE XREF: sub_140007D50+33↑j
.text:0000000140007DB0                 lea     rax, aIoctlHidGetCol_0 ; "IOCTL_HID_GET_COLLECTION_DESCRIPTOR"
.text:0000000140007DB7                 retn
.text:0000000140007DB8 ; ---------------------------------------------------------------------------
.text:0000000140007DB8
.text:0000000140007DB8 loc_140007DB8:                          ; CODE XREF: sub_140007D50+2E↑j
.text:0000000140007DB8                 lea     rax, aIoctlHidGetFea ; "IOCTL_HID_GET_FEATURE"
.text:0000000140007DBF                 retn
.text:0000000140007DC0 ; ---------------------------------------------------------------------------
.text:0000000140007DC0
.text:0000000140007DC0 loc_140007DC0:                          ; CODE XREF: sub_140007D50+29↑j
.text:0000000140007DC0                 lea     rax, aIoctlHidSetFea ; "IOCTL_HID_SET_FEATURE"
.text:0000000140007DC7                 retn
.text:0000000140007DC8 ; ---------------------------------------------------------------------------
.text:0000000140007DC8
.text:0000000140007DC8 loc_140007DC8:                          ; CODE XREF: sub_140007D50+24↑j
.text:0000000140007DC8                 lea     rax, aIoctlHidGetDri ; "IOCTL_HID_GET_DRIVER_CONFIG"
.text:0000000140007DCF                 retn
.text:0000000140007DD0 ; ---------------------------------------------------------------------------
.text:0000000140007DD0
.text:0000000140007DD0 loc_140007DD0:                          ; CODE XREF: sub_140007D50+1C↑j
.text:0000000140007DD0                 lea     rax, aIoctlHidGetPol ; "IOCTL_HID_GET_POLL_FREQUENCY_MSEC"
.text:0000000140007DD7                 retn
.text:0000000140007DD8 ; ---------------------------------------------------------------------------
.text:0000000140007DD8
.text:0000000140007DD8 loc_140007DD8:                          ; CODE XREF: sub_140007D50+1A↑j
.text:0000000140007DD8                 sub     ecx, 0B019Ah
.text:0000000140007DDE                 jz      short loc_140007E21
.text:0000000140007DE0                 sub     ecx, 2
.text:0000000140007DE3                 jz      short loc_140007E19
.text:0000000140007DE5                 sub     ecx, 2
.text:0000000140007DE8                 jz      short loc_140007E11
.text:0000000140007DEA                 sub     ecx, 2
.text:0000000140007DED                 jz      short loc_140007E09
.text:0000000140007DEF                 sub     ecx, 2
.text:0000000140007DF2                 jz      short loc_140007E01
.text:0000000140007DF4                 cmp     ecx, 2
.text:0000000140007DF7                 jnz     short loc_140007E57
.text:0000000140007DF9                 lea     rax, aIoctlSetNumDev ; "IOCTL_SET_NUM_DEVICE_INPUT_BUFFERS"
.text:0000000140007E00                 retn
.text:0000000140007E01 ; ---------------------------------------------------------------------------
.text:0000000140007E01
.text:0000000140007E01 loc_140007E01:                          ; CODE XREF: sub_140007D50+A2↑j
.text:0000000140007E01                 lea     rax, aIoctlHidGetInp ; "IOCTL_HID_GET_INPUT_REPORT"
.text:0000000140007E08                 retn
.text:0000000140007E09 ; ---------------------------------------------------------------------------
.text:0000000140007E09
.text:0000000140007E09 loc_140007E09:                          ; CODE XREF: sub_140007D50+9D↑j
.text:0000000140007E09                 lea     rax, aIoctlGetNumDev ; "IOCTL_GET_NUM_DEVICE_INPUT_BUFFERS"
.text:0000000140007E10                 retn
.text:0000000140007E11 ; ---------------------------------------------------------------------------
.text:0000000140007E11
.text:0000000140007E11 loc_140007E11:                          ; CODE XREF: sub_140007D50+98↑j
.text:0000000140007E11                 lea     rax, aIoctlHidGetHar ; "IOCTL_HID_GET_HARDWARE_ID"
.text:0000000140007E18                 retn
.text:0000000140007E19 ; ---------------------------------------------------------------------------
.text:0000000140007E19
.text:0000000140007E19 loc_140007E19:                          ; CODE XREF: sub_140007D50+93↑j
.text:0000000140007E19                 lea     rax, aIoctlHidSetPol ; "IOCTL_HID_SET_POLL_FREQUENCY_MSEC"
.text:0000000140007E20                 retn
.text:0000000140007E21 ; ---------------------------------------------------------------------------
.text:0000000140007E21
.text:0000000140007E21 loc_140007E21:                          ; CODE XREF: sub_140007D50+8E↑j
.text:0000000140007E21                 lea     rax, aIoctlGetPhysic ; "IOCTL_GET_PHYSICAL_DESCRIPTOR"
.text:0000000140007E28                 retn
.text:0000000140007E29 ; ---------------------------------------------------------------------------
.text:0000000140007E29
.text:0000000140007E29 loc_140007E29:                          ; CODE XREF: sub_140007D50+D↑j
.text:0000000140007E29                 lea     rax, aIoctlHidGetCol ; "IOCTL_HID_GET_COLLECTION_INFORMATION"
.text:0000000140007E30                 retn
.text:0000000140007E31 ; ---------------------------------------------------------------------------
.text:0000000140007E31
.text:0000000140007E31 loc_140007E31:                          ; CODE XREF: sub_140007D50+7↑j
.text:0000000140007E31                 sub     ecx, 0B01BAh
.text:0000000140007E37                 jz      short loc_140007E8F
.text:0000000140007E39                 sub     ecx, 4
.text:0000000140007E3C                 jz      short loc_140007E87
.text:0000000140007E3E                 sub     ecx, 4
.text:0000000140007E41                 jz      short loc_140007E7F
.text:0000000140007E43                 sub     ecx, 20h ; ' '
.text:0000000140007E46                 jz      short loc_140007E77
.text:0000000140007E48                 sub     ecx, 4
.text:0000000140007E4B                 jz      short loc_140007E6F
.text:0000000140007E4D                 sub     ecx, 25h ; '%'
.text:0000000140007E50                 jz      short loc_140007E67
.text:0000000140007E52                 cmp     ecx, 4
.text:0000000140007E55                 jz      short loc_140007E5F
.text:0000000140007E57
.text:0000000140007E57 loc_140007E57:                          ; CODE XREF: sub_140007D50+42↑j
.text:0000000140007E57                                         ; sub_140007D50+A7↑j
.text:0000000140007E57                 lea     rax, aUnknown   ; "Unknown"
.text:0000000140007E5E                 retn
.text:0000000140007E5F ; ---------------------------------------------------------------------------
.text:0000000140007E5F
.text:0000000140007E5F loc_140007E5F:                          ; CODE XREF: sub_140007D50+105↑j
.text:0000000140007E5F                 lea     rax, aIoctlHidDisabl ; "IOCTL_HID_DISABLE_SECURE_READ"
.text:0000000140007E66                 retn
.text:0000000140007E67 ; ---------------------------------------------------------------------------
.text:0000000140007E67
.text:0000000140007E67 loc_140007E67:                          ; CODE XREF: sub_140007D50+100↑j
.text:0000000140007E67                 lea     rax, aIoctlHidEnable ; "IOCTL_HID_ENABLE_SECURE_READ"
.text:0000000140007E6E                 retn
.text:0000000140007E6F ; ---------------------------------------------------------------------------
.text:0000000140007E6F
.text:0000000140007E6F loc_140007E6F:                          ; CODE XREF: sub_140007D50+FB↑j
.text:0000000140007E6F                 lea     rax, aIoctlHidGetMsG ; "IOCTL_HID_GET_MS_GENRE_DESCRIPTOR"
.text:0000000140007E76                 retn
.text:0000000140007E77 ; ---------------------------------------------------------------------------
.text:0000000140007E77
.text:0000000140007E77 loc_140007E77:                          ; CODE XREF: sub_140007D50+F6↑j
.text:0000000140007E77                 lea     rax, aIoctlHidGetInd ; "IOCTL_HID_GET_INDEXED_STRING"
.text:0000000140007E7E                 retn
.text:0000000140007E7F ; ---------------------------------------------------------------------------
.text:0000000140007E7F
.text:0000000140007E7F loc_140007E7F:                          ; CODE XREF: sub_140007D50+F1↑j
.text:0000000140007E7F                 lea     rax, aIoctlHidGetSer ; "IOCTL_HID_GET_SERIALNUMBER_STRING"
.text:0000000140007E86                 retn
.text:0000000140007E87 ; ---------------------------------------------------------------------------
.text:0000000140007E87
.text:0000000140007E87 loc_140007E87:                          ; CODE XREF: sub_140007D50+EC↑j
.text:0000000140007E87                 lea     rax, aIoctlHidGetPro ; "IOCTL_HID_GET_PRODUCT_STRING"
.text:0000000140007E8E                 retn
.text:0000000140007E8F ; ---------------------------------------------------------------------------
.text:0000000140007E8F
.text:0000000140007E8F loc_140007E8F:                          ; CODE XREF: sub_140007D50+E7↑j
.text:0000000140007E8F                 lea     rax, aIoctlHidGetMan ; "IOCTL_HID_GET_MANUFACTURER_STRING"
.text:0000000140007E96                 retn
.text:0000000140007E96 sub_140007D50   endp
.text:0000000140007E96
.text:0000000140007E96 ; ---------------------------------------------------------------------------
.text:0000000140007E97                 align 8
.text:0000000140007E98
.text:0000000140007E98 ; =============== S U B R O U T I N E =======================================
.text:0000000140007E98
.text:0000000140007E98
.text:0000000140007E98 ; __int64 __fastcall sub_140007E98(__int64, __int64)
.text:0000000140007E98 sub_140007E98   proc near               ; CODE XREF: StartRoutine+1A3↓p
.text:0000000140007E98                                         ; StartRoutine+263↓p
.text:0000000140007E98                                         ; DATA XREF: ...
.text:0000000140007E98
.text:0000000140007E98 var_78          = qword ptr -78h
.text:0000000140007E98 var_70          = qword ptr -70h
.text:0000000140007E98 var_68          = qword ptr -68h
.text:0000000140007E98 var_60          = qword ptr -60h
.text:0000000140007E98 var_58          = qword ptr -58h
.text:0000000140007E98 var_48          = qword ptr -48h
.text:0000000140007E98 var_40          = dword ptr -40h
.text:0000000140007E98 var_3C          = qword ptr -3Ch
.text:0000000140007E98 var_34          = dword ptr -34h
.text:0000000140007E98 var_30          = qword ptr -30h
.text:0000000140007E98 var_28          = byte ptr -28h
.text:0000000140007E98 arg_10          = qword ptr  18h
.text:0000000140007E98 arg_18          = qword ptr  20h
.text:0000000140007E98
.text:0000000140007E98 ; __unwind { // __GSHandlerCheck
.text:0000000140007E98                 mov     [rsp+arg_10], rbx
.text:0000000140007E9D                 mov     [rsp+arg_18], rbp
.text:0000000140007EA2                 push    rsi
.text:0000000140007EA3                 push    rdi
.text:0000000140007EA4                 push    r12
.text:0000000140007EA6                 push    r14
.text:0000000140007EA8                 push    r15
.text:0000000140007EAA                 sub     rsp, 70h
.text:0000000140007EAE                 mov     rax, cs:__security_cookie
.text:0000000140007EB5                 xor     rax, rsp
.text:0000000140007EB8                 mov     [rsp+98h+var_30], rax
.text:0000000140007EBD                 xor     ebp, ebp
.text:0000000140007EBF                 mov     rsi, rdx
.text:0000000140007EC2                 mov     edi, ebp
.text:0000000140007EC4                 mov     rbx, rcx
.text:0000000140007EC7                 lea     r15, off_14000D008
.text:0000000140007ECE                 cmp     cs:off_14000D008, r15
.text:0000000140007ED5                 lea     r12, unk_14000B2E0
.text:0000000140007EDC                 lea     r14d, [rbp+5]
.text:0000000140007EE0                 jz      short loc_140007F07
.text:0000000140007EE2                 mov     rcx, cs:DeviceObject
.text:0000000140007EE9                 cmp     [rcx+48h], bp
.text:0000000140007EED                 jz      short loc_140007F07
.text:0000000140007EEF                 mov     rcx, [rcx+40h]
.text:0000000140007EF3                 lea     r9d, [rbp+37h]
.text:0000000140007EF7                 mov     r8d, r14d
.text:0000000140007EFA                 mov     [rsp+98h+var_78], r12
.text:0000000140007EFF                 mov     dl, r14b
.text:0000000140007F02                 call    sub_1400016A8
.text:0000000140007F07
.text:0000000140007F07 loc_140007F07:                          ; CODE XREF: sub_140007E98+48↑j
.text:0000000140007F07                                         ; sub_140007E98+55↑j
.text:0000000140007F07                 lea     rcx, [rbx+70h]  ; Event
.text:0000000140007F0B                 call    cs:KeClearEvent
.text:0000000140007F11                 movzx   eax, byte ptr [rbx]
.text:0000000140007F14                 test    al, al
.text:0000000140007F16                 jz      loc_1400080E2
.text:0000000140007F1C                 cmp     [rbx+8], rbp
.text:0000000140007F20                 jz      loc_1400080E2
.text:0000000140007F26                 mov     rdx, [rbx+90h]
.text:0000000140007F2D                 test    rdx, rdx
.text:0000000140007F30                 jz      loc_1400080E2
.text:0000000140007F36                 cmp     [rbx+98h], rbp
.text:0000000140007F3D                 jz      loc_1400080E2
.text:0000000140007F43                 mov     rax, cs:qword_14000D388
.text:0000000140007F4A                 lea     r8, [rsp+98h+var_48]
.text:0000000140007F4F                 mov     rcx, cs:qword_14000D390
.text:0000000140007F56                 mov     [rsp+98h+var_3C], rbp
.text:0000000140007F5B                 mov     [rsp+98h+var_34], ebp
.text:0000000140007F5F                 mov     [rsp+98h+var_48], 18h
.text:0000000140007F68                 mov     [rsp+98h+var_40], ebp
.text:0000000140007F6C                 mov     rax, [rax+7C8h]
.text:0000000140007F73                 call    cs:__guard_dispatch_icall_fptr
.text:0000000140007F79                 mov     edi, eax
.text:0000000140007F7B                 test    eax, eax
.text:0000000140007F7D                 jns     short loc_140007FB8
.text:0000000140007F7F                 cmp     cs:off_14000D008, r15
.text:0000000140007F86                 jz      loc_140008171
.text:0000000140007F8C                 mov     r9d, 39h ; '9'
.text:0000000140007F92
.text:0000000140007F92 loc_140007F92:                          ; CODE XREF: sub_140007E98+170↓j
.text:0000000140007F92                 lfence
.text:0000000140007F95
.text:0000000140007F95 loc_140007F95:                          ; CODE XREF: sub_140007E98+245↓j
.text:0000000140007F95                 mov     rcx, cs:DeviceObject
.text:0000000140007F9C                 mov     r8d, r14d
.text:0000000140007F9F                 mov     dword ptr [rsp+98h+var_70], eax
.text:0000000140007FA3                 mov     dl, 2
.text:0000000140007FA5                 mov     [rsp+98h+var_78], r12
.text:0000000140007FAA                 mov     rcx, [rcx+40h]
.text:0000000140007FAE                 call    sub_14000176C
.text:0000000140007FB3                 jmp     loc_14000813D
.text:0000000140007FB8 ; ---------------------------------------------------------------------------
.text:0000000140007FB8
.text:0000000140007FB8 loc_140007FB8:                          ; CODE XREF: sub_140007E98+E5↑j
.text:0000000140007FB8                 mov     rax, cs:qword_14000D388
.text:0000000140007FBF                 mov     r9, [rbx+98h]
.text:0000000140007FC6                 mov     r8, [rbx+90h]
.text:0000000140007FCD                 mov     rdx, [rbx+8]
.text:0000000140007FD1                 mov     rax, [rax+5B8h]
.text:0000000140007FD8                 mov     rcx, cs:qword_14000D390
.text:0000000140007FDF                 mov     [rsp+98h+var_70], rbp
.text:0000000140007FE4                 mov     [rsp+98h+var_78], rbp
.text:0000000140007FE9                 call    cs:__guard_dispatch_icall_fptr
.text:0000000140007FEF                 mov     edi, eax
.text:0000000140007FF1                 test    eax, eax
.text:0000000140007FF3                 jns     short loc_14000800A
.text:0000000140007FF5                 cmp     cs:off_14000D008, r15
.text:0000000140007FFC                 jz      loc_140008171
.text:0000000140008002                 mov     r9d, 3Ah ; ':'
.text:0000000140008008                 jmp     short loc_140007F92
.text:000000014000800A ; ---------------------------------------------------------------------------
.text:000000014000800A
.text:000000014000800A loc_14000800A:                          ; CODE XREF: sub_140007E98+15B↑j
.text:000000014000800A                 mov     rax, cs:qword_14000D388
.text:0000000140008011                 xor     r9d, r9d
.text:0000000140008014                 mov     rdx, [rbx+90h]
.text:000000014000801B                 mov     r8, rsi
.text:000000014000801E                 mov     rcx, cs:qword_14000D390
.text:0000000140008025                 mov     rax, [rax+820h]
.text:000000014000802C                 call    cs:__guard_dispatch_icall_fptr
.text:0000000140008032                 mov     eax, 1
.text:0000000140008037                 lock xadd [rbx+88h], eax
.text:000000014000803F                 inc     eax
.text:0000000140008041                 cmp     cs:off_14000D008, r15
.text:0000000140008048                 jz      short loc_140008075
.text:000000014000804A                 mov     rcx, cs:DeviceObject
.text:0000000140008051                 cmp     [rcx+48h], bp
.text:0000000140008055                 jz      short loc_140008075
.text:0000000140008057                 mov     rcx, [rcx+40h]
.text:000000014000805B                 mov     r9d, 3Bh ; ';'
.text:0000000140008061                 mov     dword ptr [rsp+98h+var_70], eax
.text:0000000140008065                 mov     r8d, r14d
.text:0000000140008068                 mov     dl, r14b
.text:000000014000806B                 mov     [rsp+98h+var_78], r12
.text:0000000140008070                 call    sub_14000176C
.text:0000000140008075
.text:0000000140008075 loc_140008075:                          ; CODE XREF: sub_140007E98+1B0↑j
.text:0000000140008075                                         ; sub_140007E98+1BD↑j
.text:0000000140008075                 mov     rax, cs:qword_14000D388
.text:000000014000807C                 xor     r9d, r9d
.text:000000014000807F                 mov     r8, [rbx+8]
.text:0000000140008083                 mov     rdx, [rbx+90h]
.text:000000014000808A                 mov     rcx, cs:qword_14000D390
.text:0000000140008091                 mov     rax, [rax+7E8h]
.text:0000000140008098                 call    cs:__guard_dispatch_icall_fptr
.text:000000014000809E                 test    al, al
.text:00000001400080A0                 jnz     loc_14000813D
.text:00000001400080A6                 mov     rax, cs:qword_14000D388
.text:00000001400080AD                 mov     rdx, [rbx+90h]
.text:00000001400080B4                 mov     rcx, cs:qword_14000D390
.text:00000001400080BB                 mov     rax, [rax+7F0h]
.text:00000001400080C2                 call    cs:__guard_dispatch_icall_fptr
.text:00000001400080C8                 mov     edi, eax
.text:00000001400080CA                 cmp     cs:off_14000D008, r15
.text:00000001400080D1                 jz      loc_140008171
.text:00000001400080D7                 mov     r9d, 3Ch ; '<'
.text:00000001400080DD                 jmp     loc_140007F95
.text:00000001400080E2 ; ---------------------------------------------------------------------------
.text:00000001400080E2
.text:00000001400080E2 loc_1400080E2:                          ; CODE XREF: sub_140007E98+7E↑j
.text:00000001400080E2                                         ; sub_140007E98+88↑j ...
.text:00000001400080E2                 cmp     cs:off_14000D008, r15
.text:00000001400080E9                 jz      loc_140008171
.text:00000001400080EF                 mov     rcx, cs:DeviceObject
.text:00000001400080F6                 cmp     [rcx+48h], bp
.text:00000001400080FA                 jz      short loc_14000813D
.text:00000001400080FC                 mov     rcx, [rcx+40h]
.text:0000000140008100                 mov     edx, eax
.text:0000000140008102                 mov     rax, [rbx+98h]
.text:0000000140008109                 mov     r9d, 38h ; '8'
.text:000000014000810F                 mov     [rsp+98h+var_58], rax
.text:0000000140008114                 mov     r8d, r14d
.text:0000000140008117                 mov     rax, [rbx+90h]
.text:000000014000811E                 mov     [rsp+98h+var_60], rax
.text:0000000140008123                 mov     rax, [rbx+8]
.text:0000000140008127                 mov     [rsp+98h+var_68], rax
.text:000000014000812C                 mov     dword ptr [rsp+98h+var_70], edx
.text:0000000140008130                 mov     dl, r14b
.text:0000000140008133                 mov     [rsp+98h+var_78], r12
.text:0000000140008138                 call    sub_1400096E0
.text:000000014000813D
.text:000000014000813D loc_14000813D:                          ; CODE XREF: sub_140007E98+11B↑j
.text:000000014000813D                                         ; sub_140007E98+208↑j ...
.text:000000014000813D                 cmp     cs:off_14000D008, r15
.text:0000000140008144                 jz      short loc_140008171
.text:0000000140008146                 mov     rcx, cs:DeviceObject
.text:000000014000814D                 cmp     [rcx+48h], bp
.text:0000000140008151                 jz      short loc_140008171
.text:0000000140008153                 mov     rcx, [rcx+40h]
.text:0000000140008157                 mov     r9d, 3Dh ; '='
.text:000000014000815D                 mov     dword ptr [rsp+98h+var_70], edi
.text:0000000140008161                 mov     r8d, r14d
.text:0000000140008164                 mov     dl, r14b
.text:0000000140008167                 mov     [rsp+98h+var_78], r12
.text:000000014000816C                 call    sub_14000176C
.text:0000000140008171
.text:0000000140008171 loc_140008171:                          ; CODE XREF: sub_140007E98+EE↑j
.text:0000000140008171                                         ; sub_140007E98+164↑j ...
.text:0000000140008171                 mov     eax, edi
.text:0000000140008173                 mov     rcx, [rsp+98h+var_30]
.text:0000000140008178                 xor     rcx, rsp        ; StackCookie
.text:000000014000817B                 call    __security_check_cookie
.text:0000000140008180                 lea     r11, [rsp+98h+var_28]
.text:0000000140008185                 mov     rbx, [r11+40h]
.text:0000000140008189                 mov     rbp, [r11+48h]
.text:000000014000818D                 mov     rsp, r11
.text:0000000140008190                 pop     r15
.text:0000000140008192                 pop     r14
.text:0000000140008194                 pop     r12
.text:0000000140008196                 pop     rdi
.text:0000000140008197                 pop     rsi
.text:0000000140008198                 retn
.text:0000000140008198 ; } // starts at 140007E98
.text:0000000140008198 sub_140007E98   endp
.text:0000000140008198
.text:0000000140008198 ; ---------------------------------------------------------------------------
.text:0000000140008199 algn_140008199:                         ; DATA XREF: .pdata:000000014000E1E0↓o
.text:0000000140008199                 align 4
.text:000000014000819C
.text:000000014000819C ; =============== S U B R O U T I N E =======================================
.text:000000014000819C
.text:000000014000819C ; Attributes: bp-based frame fpd=4Fh
.text:000000014000819C
.text:000000014000819C ; __int64 __fastcall sub_14000819C(__int64, unsigned __int8 *, unsigned __int16 *, struct _HIDP_PREPARSED_DATA *, __int64)
.text:000000014000819C sub_14000819C   proc near               ; CODE XREF: sub_14000857C+48C↓p
.text:000000014000819C                                         ; DATA XREF: .pdata:000000014000E1EC↓o
.text:000000014000819C
.text:000000014000819C UsageValue      = dword ptr -0C0h
.text:000000014000819C PreparsedData   = qword ptr -0B8h
.text:000000014000819C Report          = qword ptr -0B0h
.text:000000014000819C ReportLength    = dword ptr -0A8h
.text:000000014000819C var_A0          = dword ptr -0A0h
.text:000000014000819C var_98          = dword ptr -98h
.text:000000014000819C UsageLength     = dword ptr -90h
.text:000000014000819C var_8C          = dword ptr -8Ch
.text:000000014000819C var_88          = qword ptr -88h
.text:000000014000819C var_80          = qword ptr -80h
.text:000000014000819C UsageList       = word ptr -78h
.text:000000014000819C var_68          = dword ptr -68h
.text:000000014000819C var_60          = word ptr -60h
.text:000000014000819C var_50          = dword ptr -50h
.text:000000014000819C var_48          = qword ptr -48h
.text:000000014000819C arg_20          = qword ptr  30h
.text:000000014000819C
.text:000000014000819C ; __unwind { // __GSHandlerCheck
.text:000000014000819C                 push    rbp
.text:000000014000819E                 push    rbx
.text:000000014000819F                 push    rsi
.text:00000001400081A0                 push    rdi
.text:00000001400081A1                 push    r12
.text:00000001400081A3                 push    r13
.text:00000001400081A5                 push    r14
.text:00000001400081A7                 push    r15
.text:00000001400081A9                 lea     rbp, [rsp-17h]
.text:00000001400081AE                 sub     rsp, 0A8h
.text:00000001400081B5                 mov     rax, cs:__security_cookie
.text:00000001400081BC                 xor     rax, rsp
.text:00000001400081BF                 mov     [rbp+4Fh+var_48], rax
.text:00000001400081C3                 mov     rsi, [rbp+4Fh+arg_20]
.text:00000001400081C7                 xor     eax, eax
.text:00000001400081C9                 xor     r12d, r12d
.text:00000001400081CC                 mov     [rbp+4Fh+var_68], eax
.text:00000001400081CF                 xorps   xmm0, xmm0
.text:00000001400081D2                 mov     [rbp+4Fh+UsageLength], r12d
.text:00000001400081D6                 mov     [rbp+4Fh+var_8C], r12d
.text:00000001400081DA                 mov     r14, r9
.text:00000001400081DD                 mov     r15, r8
.text:00000001400081E0                 mov     [rbp+4Fh+var_50], eax
.text:00000001400081E3                 mov     rdi, rdx
.text:00000001400081E6                 mov     rbx, rcx
.text:00000001400081E9                 movups  xmmword ptr [rbp+4Fh+UsageList], xmm0
.text:00000001400081ED                 movups  xmmword ptr [rbp+4Fh+var_60], xmm0
.text:00000001400081F1                 lea     rax, off_14000D008
.text:00000001400081F8                 cmp     cs:off_14000D008, rax
.text:00000001400081FF                 lea     rdx, unk_14000B2E0
.text:0000000140008206                 lea     r13d, [r12+5]
.text:000000014000820B                 jz      short loc_140008234
.text:000000014000820D                 mov     rcx, cs:DeviceObject
.text:0000000140008214                 cmp     [rcx+48h], r12w
.text:0000000140008219                 jz      short loc_140008234
.text:000000014000821B                 mov     rcx, [rcx+40h]
.text:000000014000821F                 lea     r9d, [r12+68h]
.text:0000000140008224                 mov     qword ptr [rsp+0E0h+UsageValue], rdx
.text:0000000140008229                 mov     r8d, r13d
.text:000000014000822C                 mov     dl, r13b
.text:000000014000822F                 call    sub_1400016A8
.text:0000000140008234
.text:0000000140008234 loc_140008234:                          ; CODE XREF: sub_14000819C+6F↑j
.text:0000000140008234                                         ; sub_14000819C+7D↑j
.text:0000000140008234                 mov     rax, cs:qword_14000D388
.text:000000014000823B                 lea     rcx, [rbp+4Fh+var_80]
.text:000000014000823F                 movzx   r8d, word ptr [rsi+4]
.text:0000000140008244                 lea     r9, [rbp+4Fh+var_88]
.text:0000000140008248                 mov     qword ptr [rsp+0E0h+UsageValue], rcx
.text:000000014000824D                 mov     rdx, rbx
.text:0000000140008250                 mov     rcx, cs:qword_14000D390
.text:0000000140008257                 mov     rax, [rax+870h]
.text:000000014000825E                 call    cs:__guard_dispatch_icall_fptr
.text:0000000140008264                 mov     ebx, eax
.text:0000000140008266                 test    eax, eax
.text:0000000140008268                 jns     short loc_1400082B1
.text:000000014000826A                 lea     rax, off_14000D008
.text:0000000140008271                 cmp     cs:off_14000D008, rax
.text:0000000140008278                 jz      loc_140008559
.text:000000014000827E                 mov     r9d, 69h ; 'i'
.text:0000000140008284
.text:0000000140008284 loc_140008284:                          ; CODE XREF: sub_14000819C+1E2↓j
.text:0000000140008284                                         ; sub_14000819C+23B↓j ...
.text:0000000140008284                 lfence
.text:0000000140008287                 mov     rcx, cs:DeviceObject
.text:000000014000828E                 lea     rdi, unk_14000B2E0
.text:0000000140008295                 mov     dword ptr [rsp+0E0h+PreparsedData], ebx
.text:0000000140008299                 mov     r8d, r13d
.text:000000014000829C                 mov     dl, 2
.text:000000014000829E                 mov     qword ptr [rsp+0E0h+UsageValue], rdi
.text:00000001400082A3                 mov     rcx, [rcx+40h]
.text:00000001400082A7                 call    sub_14000176C
.text:00000001400082AC                 jmp     loc_14000851D
.text:00000001400082B1 ; ---------------------------------------------------------------------------
.text:00000001400082B1
.text:00000001400082B1 loc_1400082B1:                          ; CODE XREF: sub_14000819C+CC↑j
.text:00000001400082B1                 mov     r8, [rbp+4Fh+var_80]
.text:00000001400082B5                 xor     edx, edx
.text:00000001400082B7                 mov     rcx, [rbp+4Fh+var_88]
.text:00000001400082BB                 call    sub_14000A4C0
.text:00000001400082C0                 lea     rax, off_14000D008
.text:00000001400082C7                 cmp     cs:off_14000D008, rax
.text:00000001400082CE                 jz      short loc_14000832B
.text:00000001400082D0                 mov     rcx, cs:DeviceObject
.text:00000001400082D7                 cmp     [rcx+48h], r12w
.text:00000001400082DC                 jz      short loc_14000832B
.text:00000001400082DE                 movzx   eax, word ptr [rdi+4]
.text:00000001400082E2                 mov     r9d, 6Ah ; 'j'
.text:00000001400082E8                 movzx   edx, word ptr [rdi+2]
.text:00000001400082EC                 movzx   r8d, byte ptr [rdi+1]
.text:00000001400082F1                 movzx   r10d, byte ptr [rdi]
.text:00000001400082F5                 movzx   r11d, word ptr [r15]
.text:00000001400082F9                 mov     rcx, [rcx+40h]
.text:00000001400082FD                 mov     [rsp+0E0h+var_98], eax
.text:0000000140008301                 lea     rax, unk_14000B2E0
.text:0000000140008308                 mov     [rsp+0E0h+var_A0], edx
.text:000000014000830C                 mov     dl, r13b
.text:000000014000830F                 mov     [rsp+0E0h+ReportLength], r8d
.text:0000000140008314                 mov     r8d, r13d
.text:0000000140008317                 mov     dword ptr [rsp+0E0h+Report], r10d
.text:000000014000831C                 mov     dword ptr [rsp+0E0h+PreparsedData], r11d
.text:0000000140008321                 mov     qword ptr [rsp+0E0h+UsageValue], rax
.text:0000000140008326                 call    sub_140009588
.text:000000014000832B
.text:000000014000832B loc_14000832B:                          ; CODE XREF: sub_14000819C+132↑j
.text:000000014000832B                                         ; sub_14000819C+140↑j
.text:000000014000832B                 movzx   ecx, word ptr [r15]
.text:000000014000832F                 mov     r9d, 37h ; '7'  ; Usage
.text:0000000140008335                 movzx   eax, word ptr [rsi+4]
.text:0000000140008339                 xor     r8d, r8d        ; LinkCollection
.text:000000014000833C                 mov     [rsp+0E0h+ReportLength], eax ; ReportLength
.text:0000000140008340                 mov     rax, [rbp+4Fh+var_88]
.text:0000000140008344                 mov     [rsp+0E0h+Report], rax ; Report
.text:0000000140008349                 lea     r15d, [r9-36h]
.text:000000014000834D                 mov     [rsp+0E0h+PreparsedData], r14 ; PreparsedData
.text:0000000140008352                 mov     edx, r15d       ; UsagePage
.text:0000000140008355                 mov     [rsp+0E0h+UsageValue], ecx ; UsageValue
.text:0000000140008359                 xor     ecx, ecx        ; ReportType
.text:000000014000835B                 call    HidP_SetUsageValue
.text:0000000140008360                 mov     ebx, eax
.text:0000000140008362                 test    eax, eax
.text:0000000140008364                 jns     short loc_140008383
.text:0000000140008366                 lea     rax, off_14000D008
.text:000000014000836D                 cmp     cs:off_14000D008, rax
.text:0000000140008374                 jz      loc_140008559
.text:000000014000837A                 lea     r9d, [r15+6Ah]
.text:000000014000837E                 jmp     loc_140008284
.text:0000000140008383 ; ---------------------------------------------------------------------------
.text:0000000140008383
.text:0000000140008383 loc_140008383:                          ; CODE XREF: sub_14000819C+1C8↑j
.text:0000000140008383                 lfence
.text:0000000140008386                 movzx   eax, word ptr [rsi+4]
.text:000000014000838A                 mov     r9d, 30h ; '0'  ; Usage
.text:0000000140008390                 movzx   ecx, word ptr [rdi+2]
.text:0000000140008394                 xor     r8d, r8d        ; LinkCollection
.text:0000000140008397                 mov     [rsp+0E0h+ReportLength], eax ; ReportLength
.text:000000014000839B                 mov     edx, r15d       ; UsagePage
.text:000000014000839E                 mov     rax, [rbp+4Fh+var_88]
.text:00000001400083A2                 mov     [rsp+0E0h+Report], rax ; Report
.text:00000001400083A7                 mov     [rsp+0E0h+PreparsedData], r14 ; PreparsedData
.text:00000001400083AC                 mov     [rsp+0E0h+UsageValue], ecx ; UsageValue
.text:00000001400083B0                 xor     ecx, ecx        ; ReportType
.text:00000001400083B2                 call    HidP_SetUsageValue
.text:00000001400083B7                 mov     ebx, eax
.text:00000001400083B9                 test    eax, eax
.text:00000001400083BB                 jns     short loc_1400083DC
.text:00000001400083BD                 lea     rax, off_14000D008
.text:00000001400083C4                 cmp     cs:off_14000D008, rax
.text:00000001400083CB                 jz      loc_140008559
.text:00000001400083D1                 mov     r9d, 6Ch ; 'l'
.text:00000001400083D7                 jmp     loc_140008284
.text:00000001400083DC ; ---------------------------------------------------------------------------
.text:00000001400083DC
.text:00000001400083DC loc_1400083DC:                          ; CODE XREF: sub_14000819C+21F↑j
.text:00000001400083DC                 lfence
.text:00000001400083DF                 movzx   eax, word ptr [rsi+4]
.text:00000001400083E3                 mov     r9d, 31h ; '1'  ; Usage
.text:00000001400083E9                 movzx   ecx, word ptr [rdi+4]
.text:00000001400083ED                 xor     r8d, r8d        ; LinkCollection
.text:00000001400083F0                 mov     [rsp+0E0h+ReportLength], eax ; ReportLength
.text:00000001400083F4                 mov     edx, r15d       ; UsagePage
.text:00000001400083F7                 mov     rax, [rbp+4Fh+var_88]
.text:00000001400083FB                 mov     [rsp+0E0h+Report], rax ; Report
.text:0000000140008400                 mov     [rsp+0E0h+PreparsedData], r14 ; PreparsedData
.text:0000000140008405                 mov     [rsp+0E0h+UsageValue], ecx ; UsageValue
.text:0000000140008409                 xor     ecx, ecx        ; ReportType
.text:000000014000840B                 call    HidP_SetUsageValue
.text:0000000140008410                 mov     ebx, eax
.text:0000000140008412                 test    eax, eax
.text:0000000140008414                 jns     short loc_140008435
.text:0000000140008416                 lea     rax, off_14000D008
.text:000000014000841D                 cmp     cs:off_14000D008, rax
.text:0000000140008424                 jz      loc_140008559
.text:000000014000842A                 mov     r9d, 6Dh ; 'm'
.text:0000000140008430                 jmp     loc_140008284
.text:0000000140008435 ; ---------------------------------------------------------------------------
.text:0000000140008435
.text:0000000140008435 loc_140008435:                          ; CODE XREF: sub_14000819C+278↑j
.text:0000000140008435                 cmp     [rdi], r12b
.text:0000000140008438                 jz      short loc_1400084A2
.text:000000014000843A                 lfence
.text:000000014000843D                 mov     ecx, [rbp+4Fh+UsageLength]
.text:0000000140008440                 lea     r9, [rbp+4Fh+UsageList] ; UsageList
.text:0000000140008444                 movzx   eax, word ptr [rsi+4]
.text:0000000140008448                 xor     r8d, r8d        ; LinkCollection
.text:000000014000844B                 mov     [rsp+0E0h+ReportLength], eax ; ReportLength
.text:000000014000844F                 mov     rax, [rbp+4Fh+var_88]
.text:0000000140008453                 mov     [rsp+0E0h+Report], rax ; Report
.text:0000000140008458                 lea     rax, [rbp+4Fh+UsageLength]
.text:000000014000845C                 mov     [rbp+rcx*2+4Fh+UsageList], r15w
.text:0000000140008462                 lea     edx, [r8+9]     ; UsagePage
.text:0000000140008466                 add     ecx, r15d
.text:0000000140008469                 mov     [rsp+0E0h+PreparsedData], r14 ; PreparsedData
.text:000000014000846E                 mov     [rbp+4Fh+UsageLength], ecx
.text:0000000140008471                 xor     ecx, ecx        ; ReportType
.text:0000000140008473                 mov     qword ptr [rsp+0E0h+UsageValue], rax ; UsageLength
.text:0000000140008478                 call    HidP_SetUsages
.text:000000014000847D                 mov     ebx, eax
.text:000000014000847F                 test    eax, eax
.text:0000000140008481                 jns     short loc_1400084A2
.text:0000000140008483                 lea     rax, off_14000D008
.text:000000014000848A                 cmp     cs:off_14000D008, rax
.text:0000000140008491                 jz      loc_140008559
.text:0000000140008497                 mov     r9d, 6Eh ; 'n'
.text:000000014000849D                 jmp     loc_140008284
.text:00000001400084A2 ; ---------------------------------------------------------------------------
.text:00000001400084A2
.text:00000001400084A2 loc_1400084A2:                          ; CODE XREF: sub_14000819C+29C↑j
.text:00000001400084A2                                         ; sub_14000819C+2E5↑j
.text:00000001400084A2                 mov     ebx, r12d
.text:00000001400084A5                 cmp     [rdi+1], r12b
.text:00000001400084A9                 jz      short loc_140008516
.text:00000001400084AB                 lfence
.text:00000001400084AE                 mov     ecx, [rbp+4Fh+var_8C]
.text:00000001400084B1                 lea     r9, [rbp+4Fh+var_60] ; UsageList
.text:00000001400084B5                 movzx   eax, word ptr [rsi+4]
.text:00000001400084B9                 mov     edx, 33h ; '3'
.text:00000001400084BE                 mov     [rsp+0E0h+ReportLength], eax ; ReportLength
.text:00000001400084C2                 xor     r8d, r8d        ; LinkCollection
.text:00000001400084C5                 mov     rax, [rbp+4Fh+var_88]
.text:00000001400084C9                 mov     [rbp+rcx*2+4Fh+var_60], dx
.text:00000001400084CE                 add     ecx, r15d
.text:00000001400084D1                 mov     [rsp+0E0h+Report], rax ; Report
.text:00000001400084D6                 lea     rax, [rbp+4Fh+var_8C]
.text:00000001400084DA                 mov     [rbp+4Fh+var_8C], ecx
.text:00000001400084DD                 lea     edx, [r8+0Dh]   ; UsagePage
.text:00000001400084E1                 xor     ecx, ecx        ; ReportType
.text:00000001400084E3                 mov     [rsp+0E0h+PreparsedData], r14 ; PreparsedData
.text:00000001400084E8                 mov     qword ptr [rsp+0E0h+UsageValue], rax ; UsageLength
.text:00000001400084ED                 call    HidP_SetUsages
.text:00000001400084F2                 mov     ebx, eax
.text:00000001400084F4                 test    eax, eax
.text:00000001400084F6                 jns     short loc_140008513
.text:00000001400084F8                 lea     rax, off_14000D008
.text:00000001400084FF                 cmp     cs:off_14000D008, rax
.text:0000000140008506                 jz      short loc_140008559
.text:0000000140008508                 mov     r9d, 6Fh ; 'o'
.text:000000014000850E                 jmp     loc_140008284
.text:0000000140008513 ; ---------------------------------------------------------------------------
.text:0000000140008513
.text:0000000140008513 loc_140008513:                          ; CODE XREF: sub_14000819C+35A↑j
.text:0000000140008513                 mov     ebx, r12d
.text:0000000140008516
.text:0000000140008516 loc_140008516:                          ; CODE XREF: sub_14000819C+30D↑j
.text:0000000140008516                 lea     rdi, unk_14000B2E0
.text:000000014000851D
.text:000000014000851D loc_14000851D:                          ; CODE XREF: sub_14000819C+110↑j
.text:000000014000851D                 lea     rax, off_14000D008
.text:0000000140008524                 cmp     cs:off_14000D008, rax
.text:000000014000852B                 jz      short loc_140008559
.text:000000014000852D                 mov     rcx, cs:DeviceObject
.text:0000000140008534                 cmp     [rcx+48h], r12w
.text:0000000140008539                 jz      short loc_140008559
.text:000000014000853B                 mov     rcx, [rcx+40h]
.text:000000014000853F                 mov     r9d, 70h ; 'p'
.text:0000000140008545                 mov     dword ptr [rsp+0E0h+PreparsedData], ebx
.text:0000000140008549                 mov     r8d, r13d
.text:000000014000854C                 mov     dl, r13b
.text:000000014000854F                 mov     qword ptr [rsp+0E0h+UsageValue], rdi
.text:0000000140008554                 call    sub_14000176C
.text:0000000140008559
.text:0000000140008559 loc_140008559:                          ; CODE XREF: sub_14000819C+DC↑j
.text:0000000140008559                                         ; sub_14000819C+1D8↑j ...
.text:0000000140008559                 mov     eax, ebx
.text:000000014000855B                 mov     rcx, [rbp+4Fh+var_48]
.text:000000014000855F                 xor     rcx, rsp        ; StackCookie
.text:0000000140008562                 call    __security_check_cookie
.text:0000000140008567                 add     rsp, 0A8h
.text:000000014000856E                 pop     r15
.text:0000000140008570                 pop     r14
.text:0000000140008572                 pop     r13
.text:0000000140008574                 pop     r12
.text:0000000140008576                 pop     rdi
.text:0000000140008577                 pop     rsi
.text:0000000140008578                 pop     rbx
.text:0000000140008579                 pop     rbp
.text:000000014000857A                 retn
.text:000000014000857A ; } // starts at 14000819C
.text:000000014000857A sub_14000819C   endp
.text:000000014000857A
.text:000000014000857A ; ---------------------------------------------------------------------------
.text:000000014000857B algn_14000857B:                         ; DATA XREF: .pdata:000000014000E1EC↓o
.text:000000014000857B                 align 4
.text:000000014000857C
.text:000000014000857C ; =============== S U B R O U T I N E =======================================
.text:000000014000857C
.text:000000014000857C ; Attributes: bp-based frame
.text:000000014000857C
.text:000000014000857C ; __int64 __fastcall sub_14000857C(__int64)
.text:000000014000857C sub_14000857C   proc near               ; CODE XREF: sub_140008B90+243↓p
.text:000000014000857C                                         ; DATA XREF: .pdata:000000014000E1F8↓o
.text:000000014000857C
.text:000000014000857C var_40          = qword ptr -40h
.text:000000014000857C var_38          = qword ptr -38h
.text:000000014000857C var_30          = qword ptr -30h
.text:000000014000857C var_28          = qword ptr -28h
.text:000000014000857C var_20          = qword ptr -20h
.text:000000014000857C var_18          = dword ptr -18h
.text:000000014000857C var_10          = qword ptr -10h
.text:000000014000857C var_s0          = byte ptr  0
.text:000000014000857C
.text:000000014000857C ; __unwind { // __GSHandlerCheck
.text:000000014000857C                 mov     r11, rsp
.text:000000014000857F                 mov     [r11+10h], rbx
.text:0000000140008583                 mov     [r11+18h], rsi
.text:0000000140008587                 mov     [r11+20h], rdi
.text:000000014000858B                 push    rbp
.text:000000014000858C                 push    r12
.text:000000014000858E                 push    r13
.text:0000000140008590                 push    r14
.text:0000000140008592                 push    r15
.text:0000000140008594                 mov     rbp, rsp
.text:0000000140008597                 sub     rsp, 60h
.text:000000014000859B                 mov     rax, cs:__security_cookie
.text:00000001400085A2                 xor     rax, rsp
.text:00000001400085A5                 mov     [rbp+var_10], rax
.text:00000001400085A9                 xor     r13d, r13d
.text:00000001400085AC                 mov     rbx, rcx
.text:00000001400085AF                 mov     edi, r13d
.text:00000001400085B2                 mov     [rbp+var_20], r13
.text:00000001400085B6                 mov     word ptr [rbp+var_30], r13w
.text:00000001400085BB                 lea     r14, off_14000D008
.text:00000001400085C2                 cmp     cs:off_14000D008, r14
.text:00000001400085C9                 lea     r12, unk_14000B2E0
.text:00000001400085D0                 lea     r15d, [r13+5]
.text:00000001400085D4                 jz      short loc_1400085FB
.text:00000001400085D6                 mov     rcx, cs:DeviceObject
.text:00000001400085DD                 cmp     [rcx+48h], r13w
.text:00000001400085E2                 jz      short loc_1400085FB
.text:00000001400085E4                 mov     rcx, [rcx+40h]
.text:00000001400085E8                 lea     r9d, [r13+3Eh]
.text:00000001400085EC                 mov     r8d, r15d
.text:00000001400085EF                 mov     [r11-68h], r12
.text:00000001400085F3                 mov     dl, r15b
.text:00000001400085F6                 call    sub_1400016A8
.text:00000001400085FB
.text:00000001400085FB loc_1400085FB:                          ; CODE XREF: sub_14000857C+58↑j
.text:00000001400085FB                                         ; sub_14000857C+66↑j
.text:00000001400085FB                 mov     rax, cs:qword_14000D388
.text:0000000140008602                 mov     rdx, rbx
.text:0000000140008605                 mov     r8, cs:off_14000D028
.text:000000014000860C                 mov     rcx, cs:qword_14000D390
.text:0000000140008613                 mov     rax, [rax+650h]
.text:000000014000861A                 call    cs:__guard_dispatch_icall_fptr
.text:0000000140008620                 mov     rcx, cs:qword_14000D390
.text:0000000140008627                 mov     rbx, rax
.text:000000014000862A                 mov     rax, cs:qword_14000D388
.text:0000000140008631                 mov     rdx, [rbx+0A8h]
.text:0000000140008638                 mov     rax, [rax+9E0h]
.text:000000014000863F                 call    cs:__guard_dispatch_icall_fptr
.text:0000000140008645                 mov     rax, cs:qword_14000D388
.text:000000014000864C                 mov     rdx, [rbx+90h]
.text:0000000140008653                 mov     rcx, cs:qword_14000D390
.text:000000014000865A                 mov     rax, [rax+9E0h]
.text:0000000140008661                 call    cs:__guard_dispatch_icall_fptr
.text:0000000140008667                 mov     rax, cs:qword_14000D388
.text:000000014000866E                 lea     r8, [rbp+var_18]
.text:0000000140008672                 mov     rdx, [rbx+98h]
.text:0000000140008679                 xor     r9d, r9d
.text:000000014000867C                 mov     rcx, cs:qword_14000D390
.text:0000000140008683                 mov     rax, [rax+4C8h]
.text:000000014000868A                 call    cs:__guard_dispatch_icall_fptr
.text:0000000140008690                 cmp     cs:off_14000D008, r14
.text:0000000140008697                 jz      short loc_1400086C8
.text:0000000140008699                 mov     rcx, cs:DeviceObject
.text:00000001400086A0                 cmp     [rcx+48h], r13w
.text:00000001400086A5                 jz      short loc_1400086C8
.text:00000001400086A7                 mov     eax, [rbp+var_18]
.text:00000001400086AA                 mov     r9d, 3Fh ; '?'
.text:00000001400086B0                 mov     rcx, [rcx+40h]
.text:00000001400086B4                 mov     r8d, r15d
.text:00000001400086B7                 mov     dword ptr [rsp+60h+var_38], eax
.text:00000001400086BB                 mov     dl, r15b
.text:00000001400086BE                 mov     [rsp+60h+var_40], r12
.text:00000001400086C3                 call    sub_14000176C
.text:00000001400086C8
.text:00000001400086C8 loc_1400086C8:                          ; CODE XREF: sub_14000857C+11B↑j
.text:00000001400086C8                                         ; sub_14000857C+129↑j
.text:00000001400086C8                 mov     rax, cs:qword_14000D388
.text:00000001400086CF                 mov     rcx, cs:qword_14000D390
.text:00000001400086D6                 cmp     [rbp+var_18], r13d
.text:00000001400086DA                 jnz     loc_140008761
.text:00000001400086E0                 mov     rax, [rax+9E8h]
.text:00000001400086E7                 mov     rdx, [rbx+90h]
.text:00000001400086EE                 call    cs:__guard_dispatch_icall_fptr
.text:00000001400086F4                 mov     rax, cs:qword_14000D388
.text:00000001400086FB                 mov     rdx, [rbx+0A8h]
.text:0000000140008702                 mov     rcx, cs:qword_14000D390
.text:0000000140008709                 mov     rax, [rax+9E8h]
.text:0000000140008710                 call    cs:__guard_dispatch_icall_fptr
.text:0000000140008716                 lea     rcx, [rbx+0B0h] ; Event
.text:000000014000871D                 call    cs:KeClearEvent
.text:0000000140008723                 cmp     cs:off_14000D008, r14
.text:000000014000872A                 jz      loc_140008B5B
.text:0000000140008730                 mov     rcx, cs:DeviceObject
.text:0000000140008737                 cmp     [rcx+48h], r13w
.text:000000014000873C                 jz      loc_140008B26
.text:0000000140008742                 mov     r9d, 40h ; '@'
.text:0000000140008748
.text:0000000140008748 loc_140008748:                          ; CODE XREF: sub_14000857C+2A5↓j
.text:0000000140008748                 mov     rcx, [rcx+40h]
.text:000000014000874C                 mov     r8d, r15d
.text:000000014000874F                 mov     dl, r15b
.text:0000000140008752                 mov     [rsp+60h+var_40], r12
.text:0000000140008757                 call    sub_1400016A8
.text:000000014000875C                 jmp     loc_140008B26
.text:0000000140008761 ; ---------------------------------------------------------------------------
.text:0000000140008761
.text:0000000140008761 loc_140008761:                          ; CODE XREF: sub_14000857C+15E↑j
.text:0000000140008761                 mov     rdx, [rbx+88h]
.text:0000000140008768                 mov     rax, [rax+70h]
.text:000000014000876C                 call    cs:__guard_dispatch_icall_fptr
.text:0000000140008772                 mov     esi, eax
.text:0000000140008774                 cmp     cs:off_14000D008, r14
.text:000000014000877B                 jz      short loc_1400087A9
.text:000000014000877D                 mov     rcx, cs:DeviceObject
.text:0000000140008784                 cmp     [rcx+48h], r13w
.text:0000000140008789                 jz      short loc_1400087A9
.text:000000014000878B                 mov     rcx, [rcx+40h]
.text:000000014000878F                 mov     r9d, 41h ; 'A'
.text:0000000140008795                 mov     dword ptr [rsp+60h+var_38], eax
.text:0000000140008799                 mov     r8d, r15d
.text:000000014000879C                 mov     dl, r15b
.text:000000014000879F                 mov     [rsp+60h+var_40], r12
.text:00000001400087A4                 call    sub_14000176C
.text:00000001400087A9
.text:00000001400087A9 loc_1400087A9:                          ; CODE XREF: sub_14000857C+1FF↑j
.text:00000001400087A9                                         ; sub_14000857C+20D↑j
.text:00000001400087A9                 test    esi, esi
.text:00000001400087AB                 jnz     short loc_140008826
.text:00000001400087AD                 mov     rax, cs:qword_14000D388
.text:00000001400087B4                 mov     rdx, [rbx+90h]
.text:00000001400087BB                 mov     rcx, cs:qword_14000D390
.text:00000001400087C2                 mov     rax, [rax+9E8h]
.text:00000001400087C9                 call    cs:__guard_dispatch_icall_fptr
.text:00000001400087CF                 mov     rax, cs:qword_14000D388
.text:00000001400087D6                 mov     rdx, [rbx+0A8h]
.text:00000001400087DD                 mov     rcx, cs:qword_14000D390
.text:00000001400087E4                 mov     rax, [rax+9E8h]
.text:00000001400087EB                 call    cs:__guard_dispatch_icall_fptr
.text:00000001400087F1                 lea     rcx, [rbx+0C8h] ; Event
.text:00000001400087F8                 call    cs:KeClearEvent
.text:00000001400087FE                 cmp     cs:off_14000D008, r14
.text:0000000140008805                 jz      loc_140008B5B
.text:000000014000880B                 mov     rcx, cs:DeviceObject
.text:0000000140008812                 cmp     [rcx+48h], r13w
.text:0000000140008817                 jz      loc_140008B26
.text:000000014000881D                 lea     r9d, [rsi+42h]
.text:0000000140008821                 jmp     loc_140008748
.text:0000000140008826 ; ---------------------------------------------------------------------------
.text:0000000140008826
.text:0000000140008826 loc_140008826:                          ; CODE XREF: sub_14000857C+22F↑j
.text:0000000140008826                 mov     rax, [rbx+0A0h]
.text:000000014000882D                 lea     rcx, [rbx+0B0h] ; Event
.text:0000000140008834                 mov     rsi, [rbx+98h]
.text:000000014000883B                 mov     [rbx+0A0h], rsi
.text:0000000140008842                 mov     [rbx+98h], rax
.text:0000000140008849                 call    cs:KeClearEvent
.text:000000014000884F                 mov     rax, cs:qword_14000D388
.text:0000000140008856                 mov     rdx, [rbx+88h]
.text:000000014000885D                 mov     rcx, cs:qword_14000D390
.text:0000000140008864                 mov     rax, [rax+98h]
.text:000000014000886B                 call    cs:__guard_dispatch_icall_fptr
.text:0000000140008871                 mov     rdx, [rbx+88h]
.text:0000000140008878                 xor     r8d, r8d
.text:000000014000887B                 mov     rcx, cs:qword_14000D390
.text:0000000140008882                 mov     r14, rax
.text:0000000140008885                 mov     [rbp+var_28], rax
.text:0000000140008889                 mov     rax, cs:qword_14000D388
.text:0000000140008890                 mov     rax, [rax+88h]
.text:0000000140008897                 call    cs:__guard_dispatch_icall_fptr
.text:000000014000889D                 mov     rax, cs:qword_14000D388
.text:00000001400088A4                 mov     rdx, [rbx+88h]
.text:00000001400088AB                 mov     rcx, cs:qword_14000D390
.text:00000001400088B2                 mov     rax, [rax+70h]
.text:00000001400088B6                 call    cs:__guard_dispatch_icall_fptr
.text:00000001400088BC                 test    eax, eax
.text:00000001400088BE                 jnz     short loc_1400088CD
.text:00000001400088C0                 lea     rcx, [rbx+0C8h] ; Event
.text:00000001400088C7                 call    cs:KeClearEvent
.text:00000001400088CD
.text:00000001400088CD loc_1400088CD:                          ; CODE XREF: sub_14000857C+342↑j
.text:00000001400088CD                 mov     rax, cs:qword_14000D388
.text:00000001400088D4                 mov     rdx, [rbx+90h]
.text:00000001400088DB                 mov     rcx, cs:qword_14000D390
.text:00000001400088E2                 mov     rax, [rax+9E8h]
.text:00000001400088E9                 call    cs:__guard_dispatch_icall_fptr
.text:00000001400088EF                 mov     rax, cs:qword_14000D388
.text:00000001400088F6                 mov     rdx, [rbx+0A8h]
.text:00000001400088FD                 mov     rcx, cs:qword_14000D390
.text:0000000140008904                 mov     rax, [rax+9E8h]
.text:000000014000890B                 call    cs:__guard_dispatch_icall_fptr
.text:0000000140008911                 mov     rax, cs:qword_14000D388
.text:0000000140008918                 xor     r8d, r8d
.text:000000014000891B                 mov     rcx, cs:qword_14000D390
.text:0000000140008922                 mov     rdx, r14
.text:0000000140008925                 mov     rax, [rax+610h]
.text:000000014000892C                 call    cs:__guard_dispatch_icall_fptr
.text:0000000140008932                 mov     rcx, rax
.text:0000000140008935                 mov     r8d, [rax]
.text:0000000140008938                 mov     edx, r8d
.text:000000014000893B                 sub     edx, 1
.text:000000014000893E                 jz      short loc_140008994
.text:0000000140008940                 cmp     edx, 1
.text:0000000140008943                 jz      short loc_14000897C
.text:0000000140008945                 lea     rax, off_14000D008
.text:000000014000894C                 cmp     cs:off_14000D008, rax
.text:0000000140008953                 jz      short loc_1400089AE
.text:0000000140008955                 mov     rcx, cs:DeviceObject
.text:000000014000895C                 mov     r9d, 43h ; 'C'
.text:0000000140008962                 mov     dword ptr [rsp+60h+var_38], r8d
.text:0000000140008967                 mov     dl, 2
.text:0000000140008969                 mov     r8d, r15d
.text:000000014000896C                 mov     [rsp+60h+var_40], r12
.text:0000000140008971                 mov     rcx, [rcx+40h]
.text:0000000140008975                 call    sub_14000176C
.text:000000014000897A                 jmp     short loc_1400089AE
.text:000000014000897C ; ---------------------------------------------------------------------------
.text:000000014000897C
.text:000000014000897C loc_14000897C:                          ; CODE XREF: sub_14000857C+3C7↑j
.text:000000014000897C                 movzx   eax, word ptr [rax+4]
.text:0000000140008980                 mov     [rbx+27Eh], ax
.text:0000000140008987                 movzx   eax, word ptr [rcx+6]
.text:000000014000898B                 mov     [rbx+280h], ax
.text:0000000140008992                 jmp     short loc_1400089AE
.text:0000000140008994 ; ---------------------------------------------------------------------------
.text:0000000140008994
.text:0000000140008994 loc_140008994:                          ; CODE XREF: sub_14000857C+3C2↑j
.text:0000000140008994                 mov     al, [rax+4]
.text:0000000140008997                 mov     [rbx+27Ch], al
.text:000000014000899D                 mov     al, [rcx+5]
.text:00000001400089A0                 mov     [rbx+27Dh], al
.text:00000001400089A6                 movzx   eax, word ptr [rcx+6]
.text:00000001400089AA                 mov     word ptr [rbp+var_30], ax
.text:00000001400089AE
.text:00000001400089AE loc_1400089AE:                          ; CODE XREF: sub_14000857C+3D7↑j
.text:00000001400089AE                                         ; sub_14000857C+3FE↑j ...
.text:00000001400089AE                 test    rsi, rsi
.text:00000001400089B1                 jz      loc_140008AFC
.text:00000001400089B7                 mov     rax, cs:qword_14000D388
.text:00000001400089BE                 lea     r8, [rbp+var_20]
.text:00000001400089C2                 mov     rcx, cs:qword_14000D390
.text:00000001400089C9                 mov     rdx, rsi
.text:00000001400089CC                 mov     rax, [rax+4F0h]
.text:00000001400089D3                 call    cs:__guard_dispatch_icall_fptr
.text:00000001400089D9                 test    eax, eax
.text:00000001400089DB                 jnz     loc_140008AB1
.text:00000001400089E1                 lea     r15, [rbx+48h]
.text:00000001400089E5                 lea     r14, unk_14000B2E0
.text:00000001400089EC
.text:00000001400089EC loc_1400089EC:                          ; CODE XREF: sub_14000857C+51E↓j
.text:00000001400089EC                 mov     r9, [rbx+40h]
.text:00000001400089F0                 lea     r8, [rbp+var_30]
.text:00000001400089F4                 mov     rcx, [rbp+var_20]
.text:00000001400089F8                 lea     rdx, [rbx+27Ch]
.text:00000001400089FF                 mov     [rsp+60h+var_40], r15
.text:0000000140008A04                 mov     r9, [r9+20h]
.text:0000000140008A08                 call    sub_14000819C
.text:0000000140008A0D                 mov     edi, eax
.text:0000000140008A0F                 test    eax, eax
.text:0000000140008A11                 jns     short loc_140008A4B
.text:0000000140008A13                 lea     rax, off_14000D008
.text:0000000140008A1A                 cmp     cs:off_14000D008, rax
.text:0000000140008A21                 jz      short loc_140008A4B
.text:0000000140008A23                 lfence
.text:0000000140008A26                 mov     rcx, cs:DeviceObject
.text:0000000140008A2D                 mov     r9d, 44h ; 'D'
.text:0000000140008A33                 mov     dword ptr [rsp+60h+var_38], edi
.text:0000000140008A37                 mov     dl, 2
.text:0000000140008A39                 mov     [rsp+60h+var_40], r14
.text:0000000140008A3E                 mov     rcx, [rcx+40h]
.text:0000000140008A42                 lea     r8d, [r9-3Fh]
.text:0000000140008A46                 call    sub_14000176C
.text:0000000140008A4B
.text:0000000140008A4B loc_140008A4B:                          ; CODE XREF: sub_14000857C+495↑j
.text:0000000140008A4B                                         ; sub_14000857C+4A5↑j
.text:0000000140008A4B                 mov     rax, cs:qword_14000D388
.text:0000000140008A52                 xor     r8d, r8d
.text:0000000140008A55                 movzx   r9d, word ptr [rbx+4Ch]
.text:0000000140008A5A                 mov     rdx, [rbp+var_20]
.text:0000000140008A5E                 mov     rcx, cs:qword_14000D390
.text:0000000140008A65                 mov     rax, [rax+848h]
.text:0000000140008A6C                 call    cs:__guard_dispatch_icall_fptr
.text:0000000140008A72                 mov     rax, cs:qword_14000D388
.text:0000000140008A79                 lea     r8, [rbp+var_20]
.text:0000000140008A7D                 mov     rcx, cs:qword_14000D390
.text:0000000140008A84                 mov     rdx, rsi
.text:0000000140008A87                 mov     [rbp+var_20], r13
.text:0000000140008A8B                 mov     rax, [rax+4F0h]
.text:0000000140008A92                 call    cs:__guard_dispatch_icall_fptr
.text:0000000140008A98                 test    eax, eax
.text:0000000140008A9A                 jz      loc_1400089EC
.text:0000000140008AA0                 mov     r14, [rbp+var_28]
.text:0000000140008AA4                 lea     r12, unk_14000B2E0
.text:0000000140008AAB                 mov     r15d, 5
.text:0000000140008AB1
.text:0000000140008AB1 loc_140008AB1:                          ; CODE XREF: sub_14000857C+45F↑j
.text:0000000140008AB1                 cmp     edi, 8000001Ah
.text:0000000140008AB7                 mov     eax, r13d
.text:0000000140008ABA                 cmovnz  eax, edi
.text:0000000140008ABD                 mov     edi, eax
.text:0000000140008ABF                 mov     ebx, eax
.text:0000000140008AC1                 test    eax, eax
.text:0000000140008AC3                 jns     short loc_140008AFC
.text:0000000140008AC5                 lea     rax, off_14000D008
.text:0000000140008ACC                 cmp     cs:off_14000D008, rax
.text:0000000140008AD3                 jz      short loc_140008AFC
.text:0000000140008AD5                 lfence
.text:0000000140008AD8                 mov     rcx, cs:DeviceObject
.text:0000000140008ADF                 mov     r9d, 45h ; 'E'
.text:0000000140008AE5                 mov     dword ptr [rsp+60h+var_38], ebx
.text:0000000140008AE9                 mov     r8d, r15d
.text:0000000140008AEC                 mov     dl, 2
.text:0000000140008AEE                 mov     [rsp+60h+var_40], r12
.text:0000000140008AF3                 mov     rcx, [rcx+40h]
.text:0000000140008AF7                 call    sub_14000176C
.text:0000000140008AFC
.text:0000000140008AFC loc_140008AFC:                          ; CODE XREF: sub_14000857C+435↑j
.text:0000000140008AFC                                         ; sub_14000857C+547↑j ...
.text:0000000140008AFC                 test    r14, r14
.text:0000000140008AFF                 jz      short loc_140008B1F
.text:0000000140008B01                 mov     rax, cs:qword_14000D388
.text:0000000140008B08                 mov     rdx, r14
.text:0000000140008B0B                 mov     rcx, cs:qword_14000D390
.text:0000000140008B12                 mov     rax, [rax+680h]
.text:0000000140008B19                 call    cs:__guard_dispatch_icall_fptr
.text:0000000140008B1F
.text:0000000140008B1F loc_140008B1F:                          ; CODE XREF: sub_14000857C+583↑j
.text:0000000140008B1F                 lea     r14, off_14000D008
.text:0000000140008B26
.text:0000000140008B26 loc_140008B26:                          ; CODE XREF: sub_14000857C+1C0↑j
.text:0000000140008B26                                         ; sub_14000857C+1E0↑j ...
.text:0000000140008B26                 cmp     cs:off_14000D008, r14
.text:0000000140008B2D                 jz      short loc_140008B5B
.text:0000000140008B2F                 mov     rcx, cs:DeviceObject
.text:0000000140008B36                 cmp     [rcx+48h], r13w
.text:0000000140008B3B                 jz      short loc_140008B5B
.text:0000000140008B3D                 mov     rcx, [rcx+40h]
.text:0000000140008B41                 mov     r9d, 46h ; 'F'
.text:0000000140008B47                 mov     dword ptr [rsp+60h+var_38], edi
.text:0000000140008B4B                 mov     r8d, r15d
.text:0000000140008B4E                 mov     dl, r15b
.text:0000000140008B51                 mov     [rsp+60h+var_40], r12
.text:0000000140008B56                 call    sub_14000176C
.text:0000000140008B5B
.text:0000000140008B5B loc_140008B5B:                          ; CODE XREF: sub_14000857C+1AE↑j
.text:0000000140008B5B                                         ; sub_14000857C+289↑j ...
.text:0000000140008B5B                 mov     eax, edi
.text:0000000140008B5D                 mov     rcx, [rbp+var_10]
.text:0000000140008B61                 xor     rcx, rsp        ; StackCookie
.text:0000000140008B64                 call    __security_check_cookie
.text:0000000140008B69                 lea     r11, [rsp+60h+var_s0]
.text:0000000140008B6E                 mov     rbx, [r11+38h]
.text:0000000140008B72                 mov     rsi, [r11+40h]
.text:0000000140008B76                 mov     rdi, [r11+48h]
.text:0000000140008B7A                 mov     rsp, r11
.text:0000000140008B7D                 pop     r15
.text:0000000140008B7F                 pop     r14
.text:0000000140008B81                 pop     r13
.text:0000000140008B83                 pop     r12
.text:0000000140008B85                 pop     rbp
.text:0000000140008B86                 retn
.text:0000000140008B86 ; } // starts at 14000857C
.text:0000000140008B86 sub_14000857C   endp
.text:0000000140008B86
.text:0000000140008B86 ; ---------------------------------------------------------------------------
.text:0000000140008B87 algn_140008B87:                         ; DATA XREF: .pdata:000000014000E1F8↓o
.text:0000000140008B87                 align 10h
.text:0000000140008B90
.text:0000000140008B90 ; =============== S U B R O U T I N E =======================================
.text:0000000140008B90
.text:0000000140008B90 ; Attributes: bp-based frame fpd=57h
.text:0000000140008B90
.text:0000000140008B90 ; void __fastcall sub_140008B90(__int64 StartContext)
.text:0000000140008B90 sub_140008B90   proc near               ; DATA XREF: DoScreenSave+51A↑o
.text:0000000140008B90                                         ; .rdata:000000014000B170↓o ...
.text:0000000140008B90
.text:0000000140008B90 WaitMode        = byte ptr -90h
.text:0000000140008B90 Alertable       = byte ptr -88h
.text:0000000140008B90 Timeout         = qword ptr -80h
.text:0000000140008B90 WaitBlockArray  = qword ptr -78h
.text:0000000140008B90 var_70          = qword ptr -70h
.text:0000000140008B90 var_68          = qword ptr -68h
.text:0000000140008B90 var_60          = qword ptr -60h
.text:0000000140008B90 var_58          = qword ptr -58h
.text:0000000140008B90 Object          = qword ptr -50h
.text:0000000140008B90 var_48          = qword ptr -48h
.text:0000000140008B90 var_40          = qword ptr -40h
.text:0000000140008B90 var_38          = qword ptr -38h
.text:0000000140008B90 var_30          = qword ptr -30h
.text:0000000140008B90 var_20          = byte ptr -20h
.text:0000000140008B90
.text:0000000140008B90 ; __unwind { // __GSHandlerCheck
.text:0000000140008B90                 mov     rax, rsp
.text:0000000140008B93                 mov     [rax+10h], rbx
.text:0000000140008B97                 mov     [rax+18h], rsi
.text:0000000140008B9B                 mov     [rax+20h], rdi
.text:0000000140008B9F                 push    rbp
.text:0000000140008BA0                 push    r12
.text:0000000140008BA2                 push    r13
.text:0000000140008BA4                 push    r14
.text:0000000140008BA6                 push    r15
.text:0000000140008BA8                 lea     rbp, [rax-5Fh]
.text:0000000140008BAC                 sub     rsp, 90h
.text:0000000140008BB3                 mov     rax, cs:__security_cookie
.text:0000000140008BBA                 xor     rax, rsp
.text:0000000140008BBD                 mov     [rbp+57h+var_30], rax
.text:0000000140008BC1                 xor     r14d, r14d
.text:0000000140008BC4                 mov     rsi, rcx
.text:0000000140008BC7                 mov     ebx, r14d
.text:0000000140008BCA                 mov     [rbp+57h+var_60], r14
.text:0000000140008BCE                 mov     [rbp+57h+var_70], r14
.text:0000000140008BD2                 mov     dil, 1
.text:0000000140008BD5                 mov     [rbp+57h+var_58], r14
.text:0000000140008BD9                 mov     [rbp+57h+var_68], r14
.text:0000000140008BDD                 lea     r12, off_14000D008
.text:0000000140008BE4                 cmp     cs:off_14000D008, r12
.text:0000000140008BEB                 lea     r13, unk_14000B2E0
.text:0000000140008BF2                 lea     r15d, [r14+5]
.text:0000000140008BF6                 jz      short loc_140008C1E
.text:0000000140008BF8                 mov     rcx, cs:DeviceObject
.text:0000000140008BFF                 cmp     [rcx+48h], r14w
.text:0000000140008C04                 jz      short loc_140008C1E
.text:0000000140008C06                 mov     rcx, [rcx+40h]
.text:0000000140008C0A                 lea     r9d, [r14+27h]
.text:0000000140008C0E                 mov     r8d, r15d
.text:0000000140008C11                 mov     qword ptr [rsp+0B0h+WaitMode], r13
.text:0000000140008C16                 mov     dl, r15b
.text:0000000140008C19                 call    sub_1400016A8
.text:0000000140008C1E
.text:0000000140008C1E loc_140008C1E:                          ; CODE XREF: sub_140008B90+66↑j
.text:0000000140008C1E                                         ; sub_140008B90+74↑j
.text:0000000140008C1E                 mov     rax, cs:qword_14000D388
.text:0000000140008C25                 mov     rdx, rsi
.text:0000000140008C28                 mov     r8, cs:off_14000D028
.text:0000000140008C2F                 mov     rcx, cs:qword_14000D390
.text:0000000140008C36                 mov     rax, [rax+650h]
.text:0000000140008C3D                 call    cs:__guard_dispatch_icall_fptr
.text:0000000140008C43                 mov     rdx, rax
.text:0000000140008C46                 lea     rcx, [rax+0E0h]
.text:0000000140008C4D                 add     rax, 0B0h
.text:0000000140008C53                 mov     [rbp+57h+var_48], rax
.text:0000000140008C57                 lea     rax, [rdx+0C8h]
.text:0000000140008C5E                 mov     [rbp+57h+var_38], rax
.text:0000000140008C62                 mov     [rbp+57h+Object], rcx
.text:0000000140008C66                 mov     [rbp+57h+var_40], rcx
.text:0000000140008C6A
.text:0000000140008C6A loc_140008C6A:                          ; CODE XREF: sub_140008B90+297↓j
.text:0000000140008C6A                 cmp     cs:off_14000D008, r12
.text:0000000140008C71                 jz      short loc_140008C9B
.text:0000000140008C73                 mov     rcx, cs:DeviceObject
.text:0000000140008C7A                 cmp     [rcx+48h], r14w
.text:0000000140008C7F                 jz      short loc_140008C9B
.text:0000000140008C81                 mov     rcx, [rcx+40h]
.text:0000000140008C85                 mov     r9d, 2Ch ; ','
.text:0000000140008C8B                 mov     r8d, r15d
.text:0000000140008C8E                 mov     qword ptr [rsp+0B0h+WaitMode], r13
.text:0000000140008C93                 mov     dl, r15b
.text:0000000140008C96                 call    sub_1400016A8
.text:0000000140008C9B
.text:0000000140008C9B loc_140008C9B:                          ; CODE XREF: sub_140008B90+E1↑j
.text:0000000140008C9B                                         ; sub_140008B90+EF↑j
.text:0000000140008C9B                 mov     rax, [rbp+57h+var_70]
.text:0000000140008C9F                 lea     rdx, [rbp+57h+Object] ; Object
.text:0000000140008CA3                 mov     [rsp+0B0h+WaitBlockArray], rax ; WaitBlockArray
.text:0000000140008CA8                 xor     r9d, r9d        ; WaitReason
.text:0000000140008CAB                 mov     [rsp+0B0h+Timeout], r14 ; Timeout
.text:0000000140008CB0                 mov     [rsp+0B0h+Alertable], r14b ; Alertable
.text:0000000140008CB5                 mov     [rsp+0B0h+WaitMode], r14b ; WaitMode
.text:0000000140008CBA                 lea     r8d, [r9+1]     ; WaitType
.text:0000000140008CBE                 lea     ecx, [r9+2]     ; Count
.text:0000000140008CC2                 call    cs:KeWaitForMultipleObjects
.text:0000000140008CC8                 test    eax, eax
.text:0000000140008CCA                 jz      short loc_140008D0A
.text:0000000140008CCC                 cmp     eax, 1
.text:0000000140008CCF                 jnz     loc_140008E2C
.text:0000000140008CD5                 cmp     cs:off_14000D008, r12
.text:0000000140008CDC                 jz      loc_140008D67
.text:0000000140008CE2                 mov     rcx, cs:DeviceObject
.text:0000000140008CE9                 cmp     [rcx+48h], r14w
.text:0000000140008CEE                 jz      short loc_140008D36
.text:0000000140008CF0                 mov     rcx, [rcx+40h]
.text:0000000140008CF4                 lea     r9d, [rax+2Dh]
.text:0000000140008CF8                 mov     r8d, r15d
.text:0000000140008CFB                 mov     qword ptr [rsp+0B0h+WaitMode], r13
.text:0000000140008D00                 mov     dl, r15b
.text:0000000140008D03                 call    sub_1400016A8
.text:0000000140008D08                 jmp     short loc_140008D36
.text:0000000140008D0A ; ---------------------------------------------------------------------------
.text:0000000140008D0A
.text:0000000140008D0A loc_140008D0A:                          ; CODE XREF: sub_140008B90+13A↑j
.text:0000000140008D0A                 cmp     cs:off_14000D008, r12
.text:0000000140008D11                 jz      short loc_140008D33
.text:0000000140008D13                 mov     rcx, cs:DeviceObject
.text:0000000140008D1A                 mov     r9d, 2Dh ; '-'
.text:0000000140008D20                 mov     r8d, r15d
.text:0000000140008D23                 mov     qword ptr [rsp+0B0h+WaitMode], r13
.text:0000000140008D28                 mov     dl, 4
.text:0000000140008D2A                 mov     rcx, [rcx+40h]
.text:0000000140008D2E                 call    sub_1400016A8
.text:0000000140008D33
.text:0000000140008D33 loc_140008D33:                          ; CODE XREF: sub_140008B90+181↑j
.text:0000000140008D33                 mov     dil, r14b
.text:0000000140008D36
.text:0000000140008D36 loc_140008D36:                          ; CODE XREF: sub_140008B90+15E↑j
.text:0000000140008D36                                         ; sub_140008B90+178↑j
.text:0000000140008D36                 cmp     cs:off_14000D008, r12
.text:0000000140008D3D                 jz      short loc_140008D67
.text:0000000140008D3F                 mov     rcx, cs:DeviceObject
.text:0000000140008D46                 cmp     [rcx+48h], r14w
.text:0000000140008D4B                 jz      short loc_140008D67
.text:0000000140008D4D                 mov     rcx, [rcx+40h]
.text:0000000140008D51                 mov     r9d, 30h ; '0'
.text:0000000140008D57                 mov     r8d, r15d
.text:0000000140008D5A                 mov     qword ptr [rsp+0B0h+WaitMode], r13
.text:0000000140008D5F                 mov     dl, r15b
.text:0000000140008D62                 call    sub_1400016A8
.text:0000000140008D67
.text:0000000140008D67 loc_140008D67:                          ; CODE XREF: sub_140008B90+14C↑j
.text:0000000140008D67                                         ; sub_140008B90+1AD↑j ...
.text:0000000140008D67                 mov     rax, [rbp+57h+var_68]
.text:0000000140008D6B                 lea     rdx, [rbp+57h+var_40] ; Object
.text:0000000140008D6F                 mov     [rsp+0B0h+WaitBlockArray], rax ; WaitBlockArray
.text:0000000140008D74                 xor     r9d, r9d        ; WaitReason
.text:0000000140008D77                 mov     [rsp+0B0h+Timeout], r14 ; Timeout
.text:0000000140008D7C                 mov     [rsp+0B0h+Alertable], r14b ; Alertable
.text:0000000140008D81                 mov     [rsp+0B0h+WaitMode], r14b ; WaitMode
.text:0000000140008D86                 lea     r8d, [r9+1]     ; WaitType
.text:0000000140008D8A                 lea     ecx, [r9+2]     ; Count
.text:0000000140008D8E                 call    cs:KeWaitForMultipleObjects
.text:0000000140008D94                 test    eax, eax
.text:0000000140008D96                 jz      short loc_140008DF6
.text:0000000140008D98                 cmp     eax, 1
.text:0000000140008D9B                 jnz     loc_140008E3F
.text:0000000140008DA1                 cmp     cs:off_14000D008, r12
.text:0000000140008DA8                 jz      short loc_140008DD0
.text:0000000140008DAA                 mov     rcx, cs:DeviceObject
.text:0000000140008DB1                 cmp     [rcx+48h], r14w
.text:0000000140008DB6                 jz      short loc_140008DD0
.text:0000000140008DB8                 mov     rcx, [rcx+40h]
.text:0000000140008DBC                 lea     r9d, [rax+31h]
.text:0000000140008DC0                 mov     r8d, r15d
.text:0000000140008DC3                 mov     qword ptr [rsp+0B0h+WaitMode], r13
.text:0000000140008DC8                 mov     dl, r15b
.text:0000000140008DCB                 call    sub_1400016A8
.text:0000000140008DD0
.text:0000000140008DD0 loc_140008DD0:                          ; CODE XREF: sub_140008B90+218↑j
.text:0000000140008DD0                                         ; sub_140008B90+226↑j
.text:0000000140008DD0                 mov     rcx, rsi
.text:0000000140008DD3                 call    sub_14000857C
.text:0000000140008DD8                 mov     ebx, eax
.text:0000000140008DDA                 test    eax, eax
.text:0000000140008DDC                 jns     short loc_140008E22
.text:0000000140008DDE                 cmp     cs:off_14000D008, r12
.text:0000000140008DE5                 jz      loc_140008E6E
.text:0000000140008DEB                 lfence
.text:0000000140008DEE                 mov     r9d, 33h ; '3'
.text:0000000140008DF4                 jmp     short loc_140008E50
.text:0000000140008DF6 ; ---------------------------------------------------------------------------
.text:0000000140008DF6
.text:0000000140008DF6 loc_140008DF6:                          ; CODE XREF: sub_140008B90+206↑j
.text:0000000140008DF6                 cmp     cs:off_14000D008, r12
.text:0000000140008DFD                 jz      short loc_140008E1F
.text:0000000140008DFF                 mov     rcx, cs:DeviceObject
.text:0000000140008E06                 mov     r9d, 31h ; '1'
.text:0000000140008E0C                 mov     r8d, r15d
.text:0000000140008E0F                 mov     qword ptr [rsp+0B0h+WaitMode], r13
.text:0000000140008E14                 mov     dl, 4
.text:0000000140008E16                 mov     rcx, [rcx+40h]
.text:0000000140008E1A                 call    sub_1400016A8
.text:0000000140008E1F
.text:0000000140008E1F loc_140008E1F:                          ; CODE XREF: sub_140008B90+26D↑j
.text:0000000140008E1F                 mov     dil, r14b
.text:0000000140008E22
.text:0000000140008E22 loc_140008E22:                          ; CODE XREF: sub_140008B90+24C↑j
.text:0000000140008E22                 test    dil, dil
.text:0000000140008E25                 jz      short loc_140008E6E
.text:0000000140008E27                 jmp     loc_140008C6A
.text:0000000140008E2C ; ---------------------------------------------------------------------------
.text:0000000140008E2C
.text:0000000140008E2C loc_140008E2C:                          ; CODE XREF: sub_140008B90+13F↑j
.text:0000000140008E2C                 mov     ebx, eax
.text:0000000140008E2E                 cmp     cs:off_14000D008, r12
.text:0000000140008E35                 jz      short loc_140008E6E
.text:0000000140008E37                 mov     r9d, 2Fh ; '/'
.text:0000000140008E3D                 jmp     short loc_140008E50
.text:0000000140008E3F ; ---------------------------------------------------------------------------
.text:0000000140008E3F
.text:0000000140008E3F loc_140008E3F:                          ; CODE XREF: sub_140008B90+20B↑j
.text:0000000140008E3F                 mov     ebx, eax
.text:0000000140008E41                 cmp     cs:off_14000D008, r12
.text:0000000140008E48                 jz      short loc_140008E6E
.text:0000000140008E4A                 mov     r9d, 34h ; '4'
.text:0000000140008E50
.text:0000000140008E50 loc_140008E50:                          ; CODE XREF: sub_140008B90+264↑j
.text:0000000140008E50                                         ; sub_140008B90+2AD↑j
.text:0000000140008E50                 mov     rcx, cs:DeviceObject
.text:0000000140008E57                 mov     r8d, r15d
.text:0000000140008E5A                 mov     dword ptr [rsp+0B0h+Alertable], eax
.text:0000000140008E5E                 mov     dl, 2
.text:0000000140008E60                 mov     qword ptr [rsp+0B0h+WaitMode], r13
.text:0000000140008E65                 mov     rcx, [rcx+40h]
.text:0000000140008E69                 call    sub_14000176C
.text:0000000140008E6E
.text:0000000140008E6E loc_140008E6E:                          ; CODE XREF: sub_140008B90+255↑j
.text:0000000140008E6E                                         ; sub_140008B90+295↑j ...
.text:0000000140008E6E                 mov     rdx, [rbp+57h+var_60]
.text:0000000140008E72                 test    rdx, rdx
.text:0000000140008E75                 jz      short loc_140008E92
.text:0000000140008E77                 mov     rax, cs:qword_14000D388
.text:0000000140008E7E                 mov     rcx, cs:qword_14000D390
.text:0000000140008E85                 mov     rax, [rax+680h]
.text:0000000140008E8C                 call    cs:__guard_dispatch_icall_fptr
.text:0000000140008E92
.text:0000000140008E92 loc_140008E92:                          ; CODE XREF: sub_140008B90+2E5↑j
.text:0000000140008E92                 mov     rdx, [rbp+57h+var_58]
.text:0000000140008E96                 test    rdx, rdx
.text:0000000140008E99                 jz      short loc_140008EB6
.text:0000000140008E9B                 mov     rax, cs:qword_14000D388
.text:0000000140008EA2                 mov     rcx, cs:qword_14000D390
.text:0000000140008EA9                 mov     rax, [rax+680h]
.text:0000000140008EB0                 call    cs:__guard_dispatch_icall_fptr
.text:0000000140008EB6
.text:0000000140008EB6 loc_140008EB6:                          ; CODE XREF: sub_140008B90+309↑j
.text:0000000140008EB6                 cmp     cs:off_14000D008, r12
.text:0000000140008EBD                 jz      short loc_140008EEB
.text:0000000140008EBF                 mov     rcx, cs:DeviceObject
.text:0000000140008EC6                 cmp     [rcx+48h], r14w
.text:0000000140008ECB                 jz      short loc_140008EEB
.text:0000000140008ECD                 mov     rcx, [rcx+40h]
.text:0000000140008ED1                 mov     r9d, 35h ; '5'
.text:0000000140008ED7                 mov     dword ptr [rsp+0B0h+Alertable], ebx
.text:0000000140008EDB                 mov     r8d, r15d
.text:0000000140008EDE                 mov     dl, r15b
.text:0000000140008EE1                 mov     qword ptr [rsp+0B0h+WaitMode], r13
.text:0000000140008EE6                 call    sub_14000176C
.text:0000000140008EEB
.text:0000000140008EEB loc_140008EEB:                          ; CODE XREF: sub_140008B90+32D↑j
.text:0000000140008EEB                                         ; sub_140008B90+33B↑j
.text:0000000140008EEB                 mov     ecx, ebx        ; ExitStatus
.text:0000000140008EED                 call    cs:PsTerminateSystemThread
.text:0000000140008EF3                 test    eax, eax
.text:0000000140008EF5                 jns     short loc_140008F27
.text:0000000140008EF7                 cmp     cs:off_14000D008, r12
.text:0000000140008EFE                 jz      short loc_140008F27
.text:0000000140008F00                 lfence
.text:0000000140008F03                 mov     rcx, cs:DeviceObject
.text:0000000140008F0A                 mov     r9d, 36h ; '6'
.text:0000000140008F10                 mov     dword ptr [rsp+0B0h+Alertable], eax
.text:0000000140008F14                 mov     r8d, r15d
.text:0000000140008F17                 mov     dl, 2
.text:0000000140008F19                 mov     qword ptr [rsp+0B0h+WaitMode], r13
.text:0000000140008F1E                 mov     rcx, [rcx+40h]
.text:0000000140008F22                 call    sub_14000176C
.text:0000000140008F27
.text:0000000140008F27 loc_140008F27:                          ; CODE XREF: sub_140008B90+365↑j
.text:0000000140008F27                                         ; sub_140008B90+36E↑j
.text:0000000140008F27                 mov     rcx, [rbp+57h+var_30]
.text:0000000140008F2B                 xor     rcx, rsp        ; StackCookie
.text:0000000140008F2E                 call    __security_check_cookie
.text:0000000140008F33                 lea     r11, [rsp+0B0h+var_20]
.text:0000000140008F3B                 mov     rbx, [r11+38h]
.text:0000000140008F3F                 mov     rsi, [r11+40h]
.text:0000000140008F43                 mov     rdi, [r11+48h]
.text:0000000140008F47                 mov     rsp, r11
.text:0000000140008F4A                 pop     r15
.text:0000000140008F4C                 pop     r14
.text:0000000140008F4E                 pop     r13
.text:0000000140008F50                 pop     r12
.text:0000000140008F52                 pop     rbp
.text:0000000140008F53                 retn
.text:0000000140008F53 ; } // starts at 140008B90
.text:0000000140008F53 sub_140008B90   endp
.text:0000000140008F53
.text:0000000140008F53 ; ---------------------------------------------------------------------------
.text:0000000140008F54 algn_140008F54:                         ; DATA XREF: .pdata:000000014000E204↓o
.text:0000000140008F54                 align 20h
.text:0000000140008F60
.text:0000000140008F60 ; =============== S U B R O U T I N E =======================================
.text:0000000140008F60
.text:0000000140008F60
.text:0000000140008F60 ; void __fastcall StartRoutine(PVOID StartContext)
.text:0000000140008F60 StartRoutine    proc near               ; DATA XREF: DoScreenSave+3D1↑o
.text:0000000140008F60                                         ; .rdata:000000014000B174↓o ...
.text:0000000140008F60
.text:0000000140008F60 WaitMode        = byte ptr -78h
.text:0000000140008F60 Alertable       = qword ptr -70h
.text:0000000140008F60 Timeout         = qword ptr -68h
.text:0000000140008F60 WaitBlockArray  = qword ptr -60h
.text:0000000140008F60 var_58          = qword ptr -58h
.text:0000000140008F60 var_50          = qword ptr -50h
.text:0000000140008F60 Object          = qword ptr -48h
.text:0000000140008F60 var_40          = qword ptr -40h
.text:0000000140008F60 var_38          = qword ptr -38h
.text:0000000140008F60 var_30          = qword ptr -30h
.text:0000000140008F60 var_28          = byte ptr -28h
.text:0000000140008F60
.text:0000000140008F60 ; __unwind { // __GSHandlerCheck
.text:0000000140008F60                 mov     r11, rsp
.text:0000000140008F63                 mov     [r11+10h], rbx
.text:0000000140008F67                 mov     [r11+18h], rbp
.text:0000000140008F6B                 mov     [r11+20h], rsi
.text:0000000140008F6F                 push    rdi
.text:0000000140008F70                 push    r12
.text:0000000140008F72                 push    r13
.text:0000000140008F74                 push    r14
.text:0000000140008F76                 push    r15
.text:0000000140008F78                 sub     rsp, 70h
.text:0000000140008F7C                 mov     rax, cs:__security_cookie
.text:0000000140008F83                 xor     rax, rsp
.text:0000000140008F86                 mov     [rsp+98h+var_30], rax
.text:0000000140008F8B                 xor     r14d, r14d
.text:0000000140008F8E                 mov     rsi, rcx
.text:0000000140008F91                 mov     ebx, r14d
.text:0000000140008F94                 mov     [r11-50h], r14
.text:0000000140008F98                 mov     [r11-58h], r14
.text:0000000140008F9C                 mov     dil, 1
.text:0000000140008F9F                 lea     r12, off_14000D008
.text:0000000140008FA6                 cmp     cs:off_14000D008, r12
.text:0000000140008FAD                 lea     r13, unk_14000B2E0
.text:0000000140008FB4                 lea     r15d, [r14+5]
.text:0000000140008FB8                 jz      short loc_140008FDF
.text:0000000140008FBA                 mov     rcx, cs:DeviceObject
.text:0000000140008FC1                 cmp     [rcx+48h], r14w
.text:0000000140008FC6                 jz      short loc_140008FDF
.text:0000000140008FC8                 mov     rcx, [rcx+40h]
.text:0000000140008FCC                 lea     r9d, [r14+19h]
.text:0000000140008FD0                 mov     r8d, r15d
.text:0000000140008FD3                 mov     [r11-78h], r13
.text:0000000140008FD7                 mov     dl, r15b
.text:0000000140008FDA                 call    sub_1400016A8
.text:0000000140008FDF
.text:0000000140008FDF loc_140008FDF:                          ; CODE XREF: StartRoutine+58↑j
.text:0000000140008FDF                                         ; StartRoutine+66↑j
.text:0000000140008FDF                 mov     rax, cs:qword_14000D388
.text:0000000140008FE6                 mov     rdx, rsi
.text:0000000140008FE9                 mov     r8, cs:off_14000D028
.text:0000000140008FF0                 mov     rcx, cs:qword_14000D390
.text:0000000140008FF7                 mov     rax, [rax+650h]
.text:0000000140008FFE                 call    cs:__guard_dispatch_icall_fptr
.text:0000000140009004                 mov     rbp, rax
.text:0000000140009007                 add     rax, 0E0h
.text:000000014000900D                 mov     [rsp+98h+Object], rax
.text:0000000140009012                 lea     rax, [rbp+198h]
.text:0000000140009019                 mov     [rsp+98h+var_40], rax
.text:000000014000901E                 lea     rax, [rbp+238h]
.text:0000000140009025                 mov     [rsp+98h+var_38], rax
.text:000000014000902A
.text:000000014000902A loc_14000902A:                          ; CODE XREF: StartRoutine+2FF↓j
.text:000000014000902A                 cmp     cs:off_14000D008, r12
.text:0000000140009031                 jz      short loc_14000905B
.text:0000000140009033                 mov     rcx, cs:DeviceObject
.text:000000014000903A                 cmp     [rcx+48h], r14w
.text:000000014000903F                 jz      short loc_14000905B
.text:0000000140009041                 mov     rcx, [rcx+40h]
.text:0000000140009045                 mov     r9d, 1Ch
.text:000000014000904B                 mov     r8d, r15d
.text:000000014000904E                 mov     qword ptr [rsp+98h+WaitMode], r13
.text:0000000140009053                 mov     dl, r15b
.text:0000000140009056                 call    sub_1400016A8
.text:000000014000905B
.text:000000014000905B loc_14000905B:                          ; CODE XREF: StartRoutine+D1↑j
.text:000000014000905B                                         ; StartRoutine+DF↑j
.text:000000014000905B                 mov     rax, [rsp+98h+var_58]
.text:0000000140009060                 lea     rdx, [rsp+98h+Object] ; Object
.text:0000000140009065                 mov     [rsp+98h+WaitBlockArray], rax ; WaitBlockArray
.text:000000014000906A                 xor     r9d, r9d        ; WaitReason
.text:000000014000906D                 mov     [rsp+98h+Timeout], r14 ; Timeout
.text:0000000140009072                 mov     byte ptr [rsp+98h+Alertable], r14b ; Alertable
.text:0000000140009077                 mov     [rsp+98h+WaitMode], r14b ; WaitMode
.text:000000014000907C                 lea     r8d, [r9+1]     ; WaitType
.text:0000000140009080                 lea     ecx, [r9+3]     ; Count
.text:0000000140009084                 call    cs:KeWaitForMultipleObjects
.text:000000014000908A                 mov     ecx, eax
.text:000000014000908C                 test    eax, eax
.text:000000014000908E                 jz      loc_14000922E
.text:0000000140009094                 sub     ecx, 1
.text:0000000140009097                 jz      loc_140009166
.text:000000014000909D                 cmp     ecx, 1
.text:00000001400090A0                 jnz     loc_140009275
.text:00000001400090A6                 cmp     cs:off_14000D008, r12
.text:00000001400090AD                 jz      short loc_1400090D7
.text:00000001400090AF                 mov     rcx, cs:DeviceObject
.text:00000001400090B6                 cmp     [rcx+48h], r14w
.text:00000001400090BB                 jz      short loc_1400090D7
.text:00000001400090BD                 mov     rcx, [rcx+40h]
.text:00000001400090C1                 mov     r9d, 21h ; '!'
.text:00000001400090C7                 mov     r8d, r15d
.text:00000001400090CA                 mov     qword ptr [rsp+98h+WaitMode], r13
.text:00000001400090CF                 mov     dl, r15b
.text:00000001400090D2                 call    sub_1400016A8
.text:00000001400090D7
.text:00000001400090D7 loc_1400090D7:                          ; CODE XREF: StartRoutine+14D↑j
.text:00000001400090D7                                         ; StartRoutine+15B↑j
.text:00000001400090D7                 mov     rax, cs:qword_14000D388
.text:00000001400090DE                 mov     rdx, rsi
.text:00000001400090E1                 mov     rcx, cs:qword_14000D390
.text:00000001400090E8                 mov     rax, [rax+9B0h]
.text:00000001400090EF                 call    cs:__guard_dispatch_icall_fptr
.text:00000001400090F5                 lea     rcx, [rbp+1C8h]
.text:00000001400090FC                 lea     rdx, sub_140006D60
.text:0000000140009103                 call    sub_140007E98
.text:0000000140009108                 mov     rcx, cs:qword_14000D388
.text:000000014000910F                 mov     ebx, eax
.text:0000000140009111                 mov     rdx, rsi
.text:0000000140009114                 mov     rax, [rcx+9B8h]
.text:000000014000911B                 mov     rcx, cs:qword_14000D390
.text:0000000140009122                 call    cs:__guard_dispatch_icall_fptr
.text:0000000140009128                 test    ebx, ebx
.text:000000014000912A                 jns     loc_14000925A
.text:0000000140009130                 cmp     ebx, 0C0000184h
.text:0000000140009136                 jnz     loc_140009264
.text:000000014000913C                 cmp     cs:off_14000D008, r12
.text:0000000140009143                 jz      loc_140009229
.text:0000000140009149                 mov     rcx, cs:DeviceObject
.text:0000000140009150                 cmp     [rcx+48h], r14w
.text:0000000140009155                 jz      loc_140009229
.text:000000014000915B                 mov     r9d, 22h ; '"'
.text:0000000140009161                 jmp     loc_140009215
.text:0000000140009166 ; ---------------------------------------------------------------------------
.text:0000000140009166
.text:0000000140009166 loc_140009166:                          ; CODE XREF: StartRoutine+137↑j
.text:0000000140009166                 cmp     cs:off_14000D008, r12
.text:000000014000916D                 jz      short loc_140009197
.text:000000014000916F                 mov     rcx, cs:DeviceObject
.text:0000000140009176                 cmp     [rcx+48h], r14w
.text:000000014000917B                 jz      short loc_140009197
.text:000000014000917D                 mov     rcx, [rcx+40h]
.text:0000000140009181                 mov     r9d, 1Eh
.text:0000000140009187                 mov     r8d, r15d
.text:000000014000918A                 mov     qword ptr [rsp+98h+WaitMode], r13
.text:000000014000918F                 mov     dl, r15b
.text:0000000140009192                 call    sub_1400016A8
.text:0000000140009197
.text:0000000140009197 loc_140009197:                          ; CODE XREF: StartRoutine+20D↑j
.text:0000000140009197                                         ; StartRoutine+21B↑j
.text:0000000140009197                 mov     rax, cs:qword_14000D388
.text:000000014000919E                 mov     rdx, rsi
.text:00000001400091A1                 mov     rcx, cs:qword_14000D390
.text:00000001400091A8                 mov     rax, [rax+9B0h]
.text:00000001400091AF                 call    cs:__guard_dispatch_icall_fptr
.text:00000001400091B5                 lea     rcx, [rbp+128h]
.text:00000001400091BC                 lea     rdx, sub_1400065E0
.text:00000001400091C3                 call    sub_140007E98
.text:00000001400091C8                 mov     rcx, cs:qword_14000D390
.text:00000001400091CF                 mov     ebx, eax
.text:00000001400091D1                 mov     rax, cs:qword_14000D388
.text:00000001400091D8                 mov     rdx, rsi
.text:00000001400091DB                 mov     rax, [rax+9B8h]
.text:00000001400091E2                 call    cs:__guard_dispatch_icall_fptr
.text:00000001400091E8                 test    ebx, ebx
.text:00000001400091EA                 jns     short loc_14000925A
.text:00000001400091EC                 cmp     ebx, 0C0000184h
.text:00000001400091F2                 jnz     loc_14000928C
.text:00000001400091F8                 cmp     cs:off_14000D008, r12
.text:00000001400091FF                 jz      short loc_140009229
.text:0000000140009201                 mov     rcx, cs:DeviceObject
.text:0000000140009208                 cmp     [rcx+48h], r14w
.text:000000014000920D                 jz      short loc_140009229
.text:000000014000920F                 mov     r9d, 1Fh
.text:0000000140009215
.text:0000000140009215 loc_140009215:                          ; CODE XREF: StartRoutine+201↑j
.text:0000000140009215                 mov     rcx, [rcx+40h]
.text:0000000140009219                 mov     r8d, r15d
.text:000000014000921C                 mov     dl, r15b
.text:000000014000921F                 mov     qword ptr [rsp+98h+WaitMode], r13
.text:0000000140009224                 call    sub_1400016A8
.text:0000000140009229
.text:0000000140009229 loc_140009229:                          ; CODE XREF: StartRoutine+1E3↑j
.text:0000000140009229                                         ; StartRoutine+1F5↑j ...
.text:0000000140009229                 mov     ebx, r14d
.text:000000014000922C                 jmp     short loc_14000925A
.text:000000014000922E ; ---------------------------------------------------------------------------
.text:000000014000922E
.text:000000014000922E loc_14000922E:                          ; CODE XREF: StartRoutine+12E↑j
.text:000000014000922E                 cmp     cs:off_14000D008, r12
.text:0000000140009235                 jz      short loc_140009257
.text:0000000140009237                 mov     rcx, cs:DeviceObject
.text:000000014000923E                 mov     r9d, 1Dh
.text:0000000140009244                 mov     r8d, r15d
.text:0000000140009247                 mov     qword ptr [rsp+98h+WaitMode], r13
.text:000000014000924C                 mov     dl, 4
.text:000000014000924E                 mov     rcx, [rcx+40h]
.text:0000000140009252                 call    sub_1400016A8
.text:0000000140009257
.text:0000000140009257 loc_140009257:                          ; CODE XREF: StartRoutine+2D5↑j
.text:0000000140009257                 mov     dil, r14b
.text:000000014000925A
.text:000000014000925A loc_14000925A:                          ; CODE XREF: StartRoutine+1CA↑j
.text:000000014000925A                                         ; StartRoutine+28A↑j ...
.text:000000014000925A                 test    dil, dil
.text:000000014000925D                 jz      short loc_1400092BC
.text:000000014000925F                 jmp     loc_14000902A
.text:0000000140009264 ; ---------------------------------------------------------------------------
.text:0000000140009264
.text:0000000140009264 loc_140009264:                          ; CODE XREF: StartRoutine+1D6↑j
.text:0000000140009264                 cmp     cs:off_14000D008, r12
.text:000000014000926B                 jz      short loc_1400092BC
.text:000000014000926D                 mov     r9d, 23h ; '#'
.text:0000000140009273                 jmp     short loc_14000929B
.text:0000000140009275 ; ---------------------------------------------------------------------------
.text:0000000140009275
.text:0000000140009275 loc_140009275:                          ; CODE XREF: StartRoutine+140↑j
.text:0000000140009275                 mov     ebx, eax
.text:0000000140009277                 cmp     cs:off_14000D008, r12
.text:000000014000927E                 jz      short loc_1400092BC
.text:0000000140009280                 mov     r9d, 24h ; '$'
.text:0000000140009286                 mov     dword ptr [rsp+98h+Alertable], eax
.text:000000014000928A                 jmp     short loc_1400092A2
.text:000000014000928C ; ---------------------------------------------------------------------------
.text:000000014000928C
.text:000000014000928C loc_14000928C:                          ; CODE XREF: StartRoutine+292↑j
.text:000000014000928C                 cmp     cs:off_14000D008, r12
.text:0000000140009293                 jz      short loc_1400092BC
.text:0000000140009295                 mov     r9d, 20h ; ' '
.text:000000014000929B
.text:000000014000929B loc_14000929B:                          ; CODE XREF: StartRoutine+313↑j
.text:000000014000929B                 lfence
.text:000000014000929E                 mov     dword ptr [rsp+98h+Alertable], ebx
.text:00000001400092A2
.text:00000001400092A2 loc_1400092A2:                          ; CODE XREF: StartRoutine+32A↑j
.text:00000001400092A2                 mov     rcx, cs:DeviceObject
.text:00000001400092A9                 mov     r8d, r15d
.text:00000001400092AC                 mov     dl, 2
.text:00000001400092AE                 mov     qword ptr [rsp+98h+WaitMode], r13
.text:00000001400092B3                 mov     rcx, [rcx+40h]
.text:00000001400092B7                 call    sub_14000176C
.text:00000001400092BC
.text:00000001400092BC loc_1400092BC:                          ; CODE XREF: StartRoutine+2FD↑j
.text:00000001400092BC                                         ; StartRoutine+30B↑j ...
.text:00000001400092BC                 mov     rdx, [rsp+98h+var_50]
.text:00000001400092C1                 test    rdx, rdx
.text:00000001400092C4                 jz      short loc_1400092E1
.text:00000001400092C6                 mov     rax, cs:qword_14000D388
.text:00000001400092CD                 mov     rcx, cs:qword_14000D390
.text:00000001400092D4                 mov     rax, [rax+680h]
.text:00000001400092DB                 call    cs:__guard_dispatch_icall_fptr
.text:00000001400092E1
.text:00000001400092E1 loc_1400092E1:                          ; CODE XREF: StartRoutine+364↑j
.text:00000001400092E1                 cmp     cs:off_14000D008, r12
.text:00000001400092E8                 jz      short loc_140009316
.text:00000001400092EA                 mov     rcx, cs:DeviceObject
.text:00000001400092F1                 cmp     [rcx+48h], r14w
.text:00000001400092F6                 jz      short loc_140009316
.text:00000001400092F8                 mov     rcx, [rcx+40h]
.text:00000001400092FC                 mov     r9d, 25h ; '%'
.text:0000000140009302                 mov     dword ptr [rsp+98h+Alertable], ebx
.text:0000000140009306                 mov     r8d, r15d
.text:0000000140009309                 mov     dl, r15b
.text:000000014000930C                 mov     qword ptr [rsp+98h+WaitMode], r13
.text:0000000140009311                 call    sub_14000176C
.text:0000000140009316
.text:0000000140009316 loc_140009316:                          ; CODE XREF: StartRoutine+388↑j
.text:0000000140009316                                         ; StartRoutine+396↑j
.text:0000000140009316                 mov     ecx, ebx        ; ExitStatus
.text:0000000140009318                 call    cs:PsTerminateSystemThread
.text:000000014000931E                 test    eax, eax
.text:0000000140009320                 jns     short loc_140009352
.text:0000000140009322                 cmp     cs:off_14000D008, r12
.text:0000000140009329                 jz      short loc_140009352
.text:000000014000932B                 lfence
.text:000000014000932E                 mov     rcx, cs:DeviceObject
.text:0000000140009335                 mov     r9d, 26h ; '&'
.text:000000014000933B                 mov     dword ptr [rsp+98h+Alertable], eax
.text:000000014000933F                 mov     r8d, r15d
.text:0000000140009342                 mov     dl, 2
.text:0000000140009344                 mov     qword ptr [rsp+98h+WaitMode], r13
.text:0000000140009349                 mov     rcx, [rcx+40h]
.text:000000014000934D                 call    sub_14000176C
.text:0000000140009352
.text:0000000140009352 loc_140009352:                          ; CODE XREF: StartRoutine+3C0↑j
.text:0000000140009352                                         ; StartRoutine+3C9↑j
.text:0000000140009352                 mov     rcx, [rsp+98h+var_30]
.text:0000000140009357                 xor     rcx, rsp        ; StackCookie
.text:000000014000935A                 call    __security_check_cookie
.text:000000014000935F                 lea     r11, [rsp+98h+var_28]
.text:0000000140009364                 mov     rbx, [r11+38h]
.text:0000000140009368                 mov     rbp, [r11+40h]
.text:000000014000936C                 mov     rsi, [r11+48h]
.text:0000000140009370                 mov     rsp, r11
.text:0000000140009373                 pop     r15
.text:0000000140009375                 pop     r14
.text:0000000140009377                 pop     r13
.text:0000000140009379                 pop     r12
.text:000000014000937B                 pop     rdi
.text:000000014000937C                 retn
.text:000000014000937C ; } // starts at 140008F60
.text:000000014000937C StartRoutine    endp
.text:000000014000937C
.text:000000014000937C ; ---------------------------------------------------------------------------
.text:000000014000937D algn_14000937D:                         ; DATA XREF: .pdata:000000014000E210↓o
.text:000000014000937D                 align 20h
.text:0000000140009380
.text:0000000140009380 ; =============== S U B R O U T I N E =======================================
.text:0000000140009380
.text:0000000140009380
.text:0000000140009380 ; __int64 sub_140009380(__int64, unsigned __int8, unsigned int, unsigned __int16, __int64, ...)
.text:0000000140009380 sub_140009380   proc near               ; CODE XREF: sub_1400065E0+39B↑p
.text:0000000140009380                                         ; sub_1400065E0+5E1↑p ...
.text:0000000140009380
.text:0000000140009380 var_68          = word ptr -68h
.text:0000000140009380 var_60          = qword ptr -60h
.text:0000000140009380 var_58          = qword ptr -58h
.text:0000000140009380 var_50          = qword ptr -50h
.text:0000000140009380 var_48          = qword ptr -48h
.text:0000000140009380 var_40          = qword ptr -40h
.text:0000000140009380 arg_20          = qword ptr  28h
.text:0000000140009380 arg_28          = qword ptr  30h
.text:0000000140009380 arg_30          = byte ptr  38h
.text:0000000140009380
.text:0000000140009380                 mov     r11, rsp
.text:0000000140009383                 push    rbx
.text:0000000140009384                 push    rbp
.text:0000000140009385                 push    rsi
.text:0000000140009386                 push    rdi
.text:0000000140009387                 push    r14
.text:0000000140009389                 push    r15
.text:000000014000938B                 sub     rsp, 58h
.text:000000014000938F                 mov     r10, cs:DeviceObject
.text:0000000140009396                 mov     r14, rcx
.text:0000000140009399                 mov     rsi, [rsp+88h+arg_20]
.text:00000001400093A1                 mov     r15d, 4
.text:00000001400093A7                 mov     ebp, r8d
.text:00000001400093AA                 movzx   edi, r9w
.text:00000001400093AE                 mov     r9d, ebp
.text:00000001400093B1                 shr     r9, 10h
.text:00000001400093B5                 movzx   ebx, dl
.text:00000001400093B8                 lea     r8d, [rbp-1]
.text:00000001400093BC                 mov     ecx, r8d
.text:00000001400093BF                 and     r8d, 1Fh
.text:00000001400093C3                 shr     rcx, 5
.text:00000001400093C7                 lea     rax, [r9+r9*4]
.text:00000001400093CB                 and     ecx, 7FFh
.text:00000001400093D1                 lea     rdx, [rcx+rax*4]
.text:00000001400093D5                 mov     eax, [r10+rdx*4+2Ch]
.text:00000001400093DA                 bt      eax, r8d
.text:00000001400093DE                 jnb     short loc_140009427
.text:00000001400093E0                 lea     rcx, [r9+r9*4]
.text:00000001400093E4                 add     rcx, rcx
.text:00000001400093E7                 cmp     [r10+rcx*8+29h], bl
.text:00000001400093EC                 jb      short loc_140009427
.text:00000001400093EE                 and     qword ptr [r11-48h], 0
.text:00000001400093F3                 lea     rdx, [r11+38h]
.text:00000001400093F7                 mov     rax, cs:qword_14000D0E8
.text:00000001400093FE                 mov     r9d, edi
.text:0000000140009401                 mov     rcx, [r10+rcx*8+18h]
.text:0000000140009406                 mov     r8, rsi
.text:0000000140009409                 mov     [r11-50h], r15
.text:000000014000940D                 mov     [r11-58h], rdx
.text:0000000140009411                 lea     rdx, [r11+30h]
.text:0000000140009415                 mov     [r11-60h], r15
.text:0000000140009419                 mov     [r11-68h], rdx
.text:000000014000941D                 lea     edx, [r15+27h]
.text:0000000140009421                 call    cs:__guard_dispatch_icall_fptr
.text:0000000140009427
.text:0000000140009427 loc_140009427:                          ; CODE XREF: sub_140009380+5E↑j
.text:0000000140009427                                         ; sub_140009380+6C↑j
.text:0000000140009427                 and     [rsp+88h+var_40], 0
.text:000000014000942D                 lea     rax, [rsp+88h+arg_30]
.text:0000000140009435                 mov     [rsp+88h+var_48], r15
.text:000000014000943A                 mov     r9, rsi
.text:000000014000943D                 mov     [rsp+88h+var_50], rax
.text:0000000140009442                 mov     r8d, ebp
.text:0000000140009445                 lea     rax, [rsp+88h+arg_28]
.text:000000014000944D                 mov     [rsp+88h+var_58], r15
.text:0000000140009452                 mov     [rsp+88h+var_60], rax
.text:0000000140009457                 mov     edx, ebx
.text:0000000140009459                 mov     rcx, r14
.text:000000014000945C                 mov     [rsp+88h+var_68], di
.text:0000000140009461                 call    WppAutoLogTrace
.text:0000000140009466                 add     rsp, 58h
.text:000000014000946A                 pop     r15
.text:000000014000946C                 pop     r14
.text:000000014000946E                 pop     rdi
.text:000000014000946F                 pop     rsi
.text:0000000140009470                 pop     rbp
.text:0000000140009471                 pop     rbx
.text:0000000140009472                 retn
.text:0000000140009472 sub_140009380   endp
.text:0000000140009472
.text:0000000140009472 ; ---------------------------------------------------------------------------
.text:0000000140009473 algn_140009473:                         ; DATA XREF: .pdata:000000014000E21C↓o
.text:0000000140009473                 align 4
.text:0000000140009474
.text:0000000140009474 ; =============== S U B R O U T I N E =======================================
.text:0000000140009474
.text:0000000140009474
.text:0000000140009474 ; __int64 sub_140009474(__int64, unsigned __int8, unsigned int, unsigned __int16, __int64, ...)
.text:0000000140009474 sub_140009474   proc near               ; CODE XREF: sub_1400065E0+583↑p
.text:0000000140009474                                         ; DATA XREF: .pdata:000000014000E228↓o
.text:0000000140009474
.text:0000000140009474 var_78          = word ptr -78h
.text:0000000140009474 var_70          = qword ptr -70h
.text:0000000140009474 var_68          = qword ptr -68h
.text:0000000140009474 var_60          = qword ptr -60h
.text:0000000140009474 var_58          = qword ptr -58h
.text:0000000140009474 var_50          = qword ptr -50h
.text:0000000140009474 var_48          = qword ptr -48h
.text:0000000140009474 var_40          = qword ptr -40h
.text:0000000140009474 arg_20          = qword ptr  28h
.text:0000000140009474 arg_28          = qword ptr  30h
.text:0000000140009474 arg_30          = qword ptr  38h
.text:0000000140009474 arg_38          = byte ptr  40h
.text:0000000140009474
.text:0000000140009474                 mov     r11, rsp
.text:0000000140009477                 push    rbx
.text:0000000140009478                 push    rbp
.text:0000000140009479                 push    rsi
.text:000000014000947A                 push    rdi
.text:000000014000947B                 push    r14
.text:000000014000947D                 push    r15
.text:000000014000947F                 sub     rsp, 68h
.text:0000000140009483                 mov     r10, cs:DeviceObject
.text:000000014000948A                 mov     r14, rcx
.text:000000014000948D                 mov     rsi, [rsp+98h+arg_20]
.text:0000000140009495                 mov     r15d, 4
.text:000000014000949B                 mov     ebp, r8d
.text:000000014000949E                 movzx   edi, r9w
.text:00000001400094A2                 mov     r9d, ebp
.text:00000001400094A5                 shr     r9, 10h
.text:00000001400094A9                 movzx   ebx, dl
.text:00000001400094AC                 lea     r8d, [rbp-1]
.text:00000001400094B0                 mov     ecx, r8d
.text:00000001400094B3                 and     r8d, 1Fh
.text:00000001400094B7                 shr     rcx, 5
.text:00000001400094BB                 lea     rax, [r9+r9*4]
.text:00000001400094BF                 and     ecx, 7FFh
.text:00000001400094C5                 lea     rdx, [rcx+rax*4]
.text:00000001400094C9                 mov     eax, [r10+rdx*4+2Ch]
.text:00000001400094CE                 bt      eax, r8d
.text:00000001400094D2                 jnb     short loc_140009527
.text:00000001400094D4                 lea     rcx, [r9+r9*4]
.text:00000001400094D8                 add     rcx, rcx
.text:00000001400094DB                 cmp     [r10+rcx*8+29h], bl
.text:00000001400094E0                 jb      short loc_140009527
.text:00000001400094E2                 and     qword ptr [r11-48h], 0
.text:00000001400094E7                 lea     rdx, [r11+40h]
.text:00000001400094EB                 mov     rax, cs:qword_14000D0E8
.text:00000001400094F2                 mov     r9d, edi
.text:00000001400094F5                 mov     rcx, [r10+rcx*8+18h]
.text:00000001400094FA                 mov     r8, rsi
.text:00000001400094FD                 mov     [r11-50h], r15
.text:0000000140009501                 mov     [r11-58h], rdx
.text:0000000140009505                 lea     rdx, [r11+38h]
.text:0000000140009509                 mov     [r11-60h], r15
.text:000000014000950D                 mov     [r11-68h], rdx
.text:0000000140009511                 lea     rdx, [r11+30h]
.text:0000000140009515                 mov     [r11-70h], r15
.text:0000000140009519                 mov     [r11-78h], rdx
.text:000000014000951D                 lea     edx, [r15+27h]
.text:0000000140009521                 call    cs:__guard_dispatch_icall_fptr
.text:0000000140009527
.text:0000000140009527 loc_140009527:                          ; CODE XREF: sub_140009474+5E↑j
.text:0000000140009527                                         ; sub_140009474+6C↑j
.text:0000000140009527                 and     [rsp+98h+var_40], 0
.text:000000014000952D                 lea     rax, [rsp+98h+arg_38]
.text:0000000140009535                 mov     [rsp+98h+var_48], r15
.text:000000014000953A                 mov     r9, rsi
.text:000000014000953D                 mov     [rsp+98h+var_50], rax
.text:0000000140009542                 mov     r8d, ebp
.text:0000000140009545                 mov     [rsp+98h+var_58], r15
.text:000000014000954A                 lea     rax, [rsp+98h+arg_30]
.text:0000000140009552                 mov     [rsp+98h+var_60], rax
.text:0000000140009557                 mov     edx, ebx
.text:0000000140009559                 lea     rax, [rsp+98h+arg_28]
.text:0000000140009561                 mov     [rsp+98h+var_68], r15
.text:0000000140009566                 mov     [rsp+98h+var_70], rax
.text:000000014000956B                 mov     rcx, r14
.text:000000014000956E                 mov     [rsp+98h+var_78], di
.text:0000000140009573                 call    WppAutoLogTrace
.text:0000000140009578                 add     rsp, 68h
.text:000000014000957C                 pop     r15
.text:000000014000957E                 pop     r14
.text:0000000140009580                 pop     rdi
.text:0000000140009581                 pop     rsi
.text:0000000140009582                 pop     rbp
.text:0000000140009583                 pop     rbx
.text:0000000140009584                 retn
.text:0000000140009584 sub_140009474   endp
.text:0000000140009584
.text:0000000140009584 ; ---------------------------------------------------------------------------
.text:0000000140009585 algn_140009585:                         ; DATA XREF: .pdata:000000014000E228↓o
.text:0000000140009585                 align 8
.text:0000000140009588
.text:0000000140009588 ; =============== S U B R O U T I N E =======================================
.text:0000000140009588
.text:0000000140009588
.text:0000000140009588 ; __int64 sub_140009588(__int64, unsigned __int8, unsigned int, unsigned __int16, __int64, ...)
.text:0000000140009588 sub_140009588   proc near               ; CODE XREF: sub_14000819C+18A↑p
.text:0000000140009588                                         ; DATA XREF: .pdata:000000014000E234↓o
.text:0000000140009588
.text:0000000140009588 var_98          = qword ptr -98h
.text:0000000140009588 var_90          = qword ptr -90h
.text:0000000140009588 var_88          = qword ptr -88h
.text:0000000140009588 var_80          = qword ptr -80h
.text:0000000140009588 var_78          = qword ptr -78h
.text:0000000140009588 var_70          = qword ptr -70h
.text:0000000140009588 var_68          = qword ptr -68h
.text:0000000140009588 var_60          = qword ptr -60h
.text:0000000140009588 var_58          = qword ptr -58h
.text:0000000140009588 var_50          = qword ptr -50h
.text:0000000140009588 var_48          = qword ptr -48h
.text:0000000140009588 var_40          = qword ptr -40h
.text:0000000140009588 arg_20          = qword ptr  28h
.text:0000000140009588 arg_28          = qword ptr  30h
.text:0000000140009588 arg_30          = qword ptr  38h
.text:0000000140009588 arg_38          = qword ptr  40h
.text:0000000140009588 arg_40          = qword ptr  48h
.text:0000000140009588 arg_48          = byte ptr  50h
.text:0000000140009588
.text:0000000140009588                 mov     r11, rsp
.text:000000014000958B                 push    rbx
.text:000000014000958C                 push    rbp
.text:000000014000958D                 push    rsi
.text:000000014000958E                 push    rdi
.text:000000014000958F                 push    r14
.text:0000000140009591                 push    r15
.text:0000000140009593                 sub     rsp, 88h
.text:000000014000959A                 mov     r10, cs:DeviceObject
.text:00000001400095A1                 mov     r14, rcx
.text:00000001400095A4                 mov     rsi, [rsp+0B8h+arg_20]
.text:00000001400095AC                 mov     r15d, 4
.text:00000001400095B2                 mov     ebp, r8d
.text:00000001400095B5                 movzx   edi, r9w
.text:00000001400095B9                 mov     r9d, ebp
.text:00000001400095BC                 shr     r9, 10h
.text:00000001400095C0                 movzx   ebx, dl
.text:00000001400095C3                 lea     r8d, [rbp-1]
.text:00000001400095C7                 mov     ecx, r8d
.text:00000001400095CA                 and     r8d, 1Fh
.text:00000001400095CE                 shr     rcx, 5
.text:00000001400095D2                 lea     rax, [r9+r9*4]
.text:00000001400095D6                 and     ecx, 7FFh
.text:00000001400095DC                 lea     rdx, [rcx+rax*4]
.text:00000001400095E0                 mov     eax, [r10+rdx*4+2Ch]
.text:00000001400095E5                 bt      eax, r8d
.text:00000001400095E9                 jnb     short loc_140009659
.text:00000001400095EB                 lea     rcx, [r9+r9*4]
.text:00000001400095EF                 add     rcx, rcx
.text:00000001400095F2                 cmp     [r10+rcx*8+29h], bl
.text:00000001400095F7                 jb      short loc_140009659
.text:00000001400095F9                 and     qword ptr [r11-48h], 0
.text:00000001400095FE                 lea     rdx, [r11+50h]
.text:0000000140009602                 mov     rax, cs:qword_14000D0E8
.text:0000000140009609                 mov     r9d, edi
.text:000000014000960C                 mov     rcx, [r10+rcx*8+18h]
.text:0000000140009611                 mov     r8, rsi
.text:0000000140009614                 mov     [r11-50h], r15
.text:0000000140009618                 mov     [r11-58h], rdx
.text:000000014000961C                 lea     rdx, [r11+48h]
.text:0000000140009620                 mov     [r11-60h], r15
.text:0000000140009624                 mov     [r11-68h], rdx
.text:0000000140009628                 lea     rdx, [r11+40h]
.text:000000014000962C                 mov     [r11-70h], r15
.text:0000000140009630                 mov     [r11-78h], rdx
.text:0000000140009634                 lea     rdx, [r11+38h]
.text:0000000140009638                 mov     [r11-80h], r15
.text:000000014000963C                 mov     [rsp+0B8h+var_88], rdx
.text:0000000140009641                 lea     rdx, [r11+30h]
.text:0000000140009645                 mov     [rsp+0B8h+var_90], r15
.text:000000014000964A                 mov     [rsp+0B8h+var_98], rdx
.text:000000014000964F                 lea     edx, [r15+27h]
.text:0000000140009653                 call    cs:__guard_dispatch_icall_fptr
.text:0000000140009659
.text:0000000140009659 loc_140009659:                          ; CODE XREF: sub_140009588+61↑j
.text:0000000140009659                                         ; sub_140009588+6F↑j
.text:0000000140009659                 and     [rsp+0B8h+var_40], 0
.text:000000014000965F                 lea     rax, [rsp+0B8h+arg_48]
.text:0000000140009667                 mov     [rsp+0B8h+var_48], r15
.text:000000014000966C                 mov     r9, rsi
.text:000000014000966F                 mov     [rsp+0B8h+var_50], rax
.text:0000000140009674                 mov     r8d, ebp
.text:0000000140009677                 mov     [rsp+0B8h+var_58], r15
.text:000000014000967C                 lea     rax, [rsp+0B8h+arg_40]
.text:0000000140009684                 mov     [rsp+0B8h+var_60], rax
.text:0000000140009689                 mov     edx, ebx
.text:000000014000968B                 mov     [rsp+0B8h+var_68], r15
.text:0000000140009690                 lea     rax, [rsp+0B8h+arg_38]
.text:0000000140009698                 mov     [rsp+0B8h+var_70], rax
.text:000000014000969D                 mov     rcx, r14
.text:00000001400096A0                 mov     [rsp+0B8h+var_78], r15
.text:00000001400096A5                 lea     rax, [rsp+0B8h+arg_30]
.text:00000001400096AD                 mov     [rsp+0B8h+var_80], rax
.text:00000001400096B2                 lea     rax, [rsp+0B8h+arg_28]
.text:00000001400096BA                 mov     [rsp+0B8h+var_88], r15
.text:00000001400096BF                 mov     [rsp+0B8h+var_90], rax
.text:00000001400096C4                 mov     word ptr [rsp+0B8h+var_98], di
.text:00000001400096C9                 call    WppAutoLogTrace
.text:00000001400096CE                 add     rsp, 88h
.text:00000001400096D5                 pop     r15
.text:00000001400096D7                 pop     r14
.text:00000001400096D9                 pop     rdi
.text:00000001400096DA                 pop     rsi
.text:00000001400096DB                 pop     rbp
.text:00000001400096DC                 pop     rbx
.text:00000001400096DD                 retn
.text:00000001400096DD sub_140009588   endp
.text:00000001400096DD
.text:00000001400096DD ; ---------------------------------------------------------------------------
.text:00000001400096DE algn_1400096DE:                         ; DATA XREF: .pdata:000000014000E234↓o
.text:00000001400096DE                 align 20h
.text:00000001400096E0
.text:00000001400096E0 ; =============== S U B R O U T I N E =======================================
.text:00000001400096E0
.text:00000001400096E0 ; Attributes: bp-based frame fpd=37h
.text:00000001400096E0
.text:00000001400096E0 ; __int64 __fastcall sub_1400096E0(__int64, unsigned __int8, unsigned int, unsigned __int16, __int64, char, __int64, __int64, __int64)
.text:00000001400096E0 sub_1400096E0   proc near               ; CODE XREF: sub_140007E98+2A0↑p
.text:00000001400096E0                                         ; DATA XREF: .pdata:000000014000E240↓o
.text:00000001400096E0
.text:00000001400096E0 var_A8          = qword ptr -0A8h
.text:00000001400096E0 var_A0          = qword ptr -0A0h
.text:00000001400096E0 var_98          = qword ptr -98h
.text:00000001400096E0 var_90          = qword ptr -90h
.text:00000001400096E0 var_88          = qword ptr -88h
.text:00000001400096E0 var_80          = qword ptr -80h
.text:00000001400096E0 var_78          = qword ptr -78h
.text:00000001400096E0 var_70          = qword ptr -70h
.text:00000001400096E0 var_68          = qword ptr -68h
.text:00000001400096E0 var_60          = qword ptr -60h
.text:00000001400096E0 var_50          = qword ptr -50h
.text:00000001400096E0 var_48          = qword ptr -48h
.text:00000001400096E0 var_40          = qword ptr -40h
.text:00000001400096E0 var_38          = qword ptr -38h
.text:00000001400096E0 arg_20          = qword ptr  30h
.text:00000001400096E0 arg_28          = byte ptr  38h
.text:00000001400096E0 arg_30          = qword ptr  40h
.text:00000001400096E0 arg_38          = qword ptr  48h
.text:00000001400096E0 arg_40          = qword ptr  50h
.text:00000001400096E0
.text:00000001400096E0 ; __unwind { // __GSHandlerCheck
.text:00000001400096E0                 mov     r11, rsp
.text:00000001400096E3                 push    rbp
.text:00000001400096E4                 push    rbx
.text:00000001400096E5                 push    rsi
.text:00000001400096E6                 push    rdi
.text:00000001400096E7                 push    r12
.text:00000001400096E9                 push    r14
.text:00000001400096EB                 push    r15
.text:00000001400096ED                 lea     rbp, [r11-3Fh]
.text:00000001400096F1                 sub     rsp, 90h
.text:00000001400096F8                 mov     rax, cs:__security_cookie
.text:00000001400096FF                 xor     rax, rsp
.text:0000000140009702                 mov     [rbp+37h+var_38], rax
.text:0000000140009706                 mov     rax, [rbp+37h+arg_30]
.text:000000014000970A                 mov     r15, rcx
.text:000000014000970D                 mov     r10, cs:DeviceObject
.text:0000000140009714                 mov     r12d, 8
.text:000000014000971A                 mov     rsi, [rbp+37h+arg_20]
.text:000000014000971E                 mov     [rbp+37h+var_40], rax
.text:0000000140009722                 mov     rax, [rbp+37h+arg_38]
.text:0000000140009726                 mov     r14d, r8d
.text:0000000140009729                 mov     [rbp+37h+var_48], rax
.text:000000014000972D                 mov     rax, [rbp+37h+arg_40]
.text:0000000140009734                 movzx   edi, r9w
.text:0000000140009738                 mov     r9d, r14d
.text:000000014000973B                 lea     r8d, [r14-1]
.text:000000014000973F                 shr     r9, 10h
.text:0000000140009743                 mov     ecx, r8d
.text:0000000140009746                 mov     [rbp+37h+var_50], rax
.text:000000014000974A                 shr     rcx, 5
.text:000000014000974E                 and     r8d, 1Fh
.text:0000000140009752                 and     ecx, 7FFh
.text:0000000140009758                 movzx   ebx, dl
.text:000000014000975B                 lea     rax, [r9+r9*4]
.text:000000014000975F                 lea     rdx, [rcx+rax*4]
.text:0000000140009763                 mov     eax, [r10+rdx*4+2Ch]
.text:0000000140009768                 bt      eax, r8d
.text:000000014000976C                 jnb     short loc_1400097D7
.text:000000014000976E                 lea     rcx, [r9+r9*4]
.text:0000000140009772                 add     rcx, rcx
.text:0000000140009775                 cmp     [r10+rcx*8+29h], bl
.text:000000014000977A                 jb      short loc_1400097D7
.text:000000014000977C                 and     qword ptr [r11-68h], 0
.text:0000000140009781                 lea     rdx, [rbp+37h+var_50]
.text:0000000140009785                 mov     rax, cs:qword_14000D0E8
.text:000000014000978C                 mov     r9d, edi
.text:000000014000978F                 mov     rcx, [r10+rcx*8+18h]
.text:0000000140009794                 mov     r8, rsi
.text:0000000140009797                 mov     [r11-70h], r12
.text:000000014000979B                 mov     [r11-78h], rdx
.text:000000014000979F                 lea     rdx, [rbp+37h+var_48]
.text:00000001400097A3                 mov     [r11-80h], r12
.text:00000001400097A7                 mov     [rsp+0C0h+var_80], rdx
.text:00000001400097AC                 lea     rdx, [rbp+37h+var_40]
.text:00000001400097B0                 mov     [rsp+0C0h+var_88], r12
.text:00000001400097B5                 mov     [rsp+0C0h+var_90], rdx
.text:00000001400097BA                 lea     rdx, [rbp+37h+arg_28]
.text:00000001400097BE                 mov     [rsp+0C0h+var_98], 4
.text:00000001400097C7                 mov     [rsp+0C0h+var_A0], rdx
.text:00000001400097CC                 lea     edx, [r12+23h]
.text:00000001400097D1                 call    cs:__guard_dispatch_icall_fptr
.text:00000001400097D7
.text:00000001400097D7 loc_1400097D7:                          ; CODE XREF: sub_1400096E0+8C↑j
.text:00000001400097D7                                         ; sub_1400096E0+9A↑j
.text:00000001400097D7                 and     qword ptr [rsp+68h], 0
.text:00000001400097DD                 lea     rax, [rbp+37h+var_50]
.text:00000001400097E1                 mov     [rsp+0C0h+var_60], r12
.text:00000001400097E6                 mov     r9, rsi
.text:00000001400097E9                 mov     [rsp+0C0h+var_68], rax
.text:00000001400097EE                 mov     r8d, r14d
.text:00000001400097F1                 mov     [rsp+0C0h+var_70], r12
.text:00000001400097F6                 lea     rax, [rbp+37h+var_48]
.text:00000001400097FA                 mov     [rsp+0C0h+var_78], rax
.text:00000001400097FF                 mov     edx, ebx
.text:0000000140009801                 mov     [rsp+0C0h+var_80], r12
.text:0000000140009806                 lea     rax, [rbp+37h+var_40]
.text:000000014000980A                 mov     [rsp+0C0h+var_88], rax
.text:000000014000980F                 mov     rcx, r15
.text:0000000140009812                 lea     rax, [rbp+37h+arg_28]
.text:0000000140009816                 mov     [rsp+0C0h+var_90], 4
.text:000000014000981F                 mov     [rsp+0C0h+var_98], rax
.text:0000000140009824                 mov     word ptr [rsp+0C0h+var_A0], di
.text:0000000140009829                 call    WppAutoLogTrace
.text:000000014000982E                 mov     rcx, [rbp+37h+var_38]
.text:0000000140009832                 xor     rcx, rsp        ; StackCookie
.text:0000000140009835                 call    __security_check_cookie
.text:000000014000983A                 add     rsp, 90h
.text:0000000140009841                 pop     r15
.text:0000000140009843                 pop     r14
.text:0000000140009845                 pop     r12
.text:0000000140009847                 pop     rdi
.text:0000000140009848                 pop     rsi
.text:0000000140009849                 pop     rbx
.text:000000014000984A                 pop     rbp
.text:000000014000984B                 retn
.text:000000014000984B ; } // starts at 1400096E0
.text:000000014000984B sub_1400096E0   endp
.text:000000014000984B
.text:000000014000984C
.text:000000014000984C ; =============== S U B R O U T I N E =======================================
.text:000000014000984C
.text:000000014000984C
.text:000000014000984C ; __int64 sub_14000984C(__int64, unsigned __int8, unsigned int, unsigned __int16, __int64, ...)
.text:000000014000984C sub_14000984C   proc near               ; CODE XREF: sub_1400065E0+1F9↑p
.text:000000014000984C                                         ; sub_140006D60+1D5↑p
.text:000000014000984C                                         ; DATA XREF: ...
.text:000000014000984C
.text:000000014000984C var_68          = word ptr -68h
.text:000000014000984C var_60          = qword ptr -60h
.text:000000014000984C var_58          = qword ptr -58h
.text:000000014000984C var_50          = qword ptr -50h
.text:000000014000984C var_48          = qword ptr -48h
.text:000000014000984C var_40          = qword ptr -40h
.text:000000014000984C arg_20          = qword ptr  28h
.text:000000014000984C arg_28          = qword ptr  30h
.text:000000014000984C arg_30          = byte ptr  38h
.text:000000014000984C
.text:000000014000984C                 mov     r11, rsp
.text:000000014000984F                 push    rbx
.text:0000000140009850                 push    rbp
.text:0000000140009851                 push    rsi
.text:0000000140009852                 push    rdi
.text:0000000140009853                 push    r14
.text:0000000140009855                 push    r15
.text:0000000140009857                 sub     rsp, 58h
.text:000000014000985B                 mov     r10, cs:DeviceObject
.text:0000000140009862                 mov     r14, rcx
.text:0000000140009865                 mov     rsi, [rsp+88h+arg_20]
.text:000000014000986D                 mov     r15d, 8
.text:0000000140009873                 mov     ebp, r8d
.text:0000000140009876                 movzx   edi, r9w
.text:000000014000987A                 mov     r9d, ebp
.text:000000014000987D                 shr     r9, 10h
.text:0000000140009881                 movzx   ebx, dl
.text:0000000140009884                 lea     r8d, [rbp-1]
.text:0000000140009888                 mov     ecx, r8d
.text:000000014000988B                 and     r8d, 1Fh
.text:000000014000988F                 shr     rcx, 5
.text:0000000140009893                 lea     rax, [r9+r9*4]
.text:0000000140009897                 and     ecx, 7FFh
.text:000000014000989D                 lea     rdx, [rcx+rax*4]
.text:00000001400098A1                 mov     eax, [r10+rdx*4+2Ch]
.text:00000001400098A6                 bt      eax, r8d
.text:00000001400098AA                 jnb     short loc_1400098F3
.text:00000001400098AC                 lea     rcx, [r9+r9*4]
.text:00000001400098B0                 add     rcx, rcx
.text:00000001400098B3                 cmp     [r10+rcx*8+29h], bl
.text:00000001400098B8                 jb      short loc_1400098F3
.text:00000001400098BA                 and     qword ptr [r11-48h], 0
.text:00000001400098BF                 lea     rdx, [r11+38h]
.text:00000001400098C3                 mov     rax, cs:qword_14000D0E8
.text:00000001400098CA                 mov     r9d, edi
.text:00000001400098CD                 mov     rcx, [r10+rcx*8+18h]
.text:00000001400098D2                 mov     r8, rsi
.text:00000001400098D5                 mov     [r11-50h], r15
.text:00000001400098D9                 mov     [r11-58h], rdx
.text:00000001400098DD                 lea     rdx, [r11+30h]
.text:00000001400098E1                 mov     [r11-60h], r15
.text:00000001400098E5                 mov     [r11-68h], rdx
.text:00000001400098E9                 lea     edx, [r15+23h]
.text:00000001400098ED                 call    cs:__guard_dispatch_icall_fptr
.text:00000001400098F3
.text:00000001400098F3 loc_1400098F3:                          ; CODE XREF: sub_14000984C+5E↑j
.text:00000001400098F3                                         ; sub_14000984C+6C↑j
.text:00000001400098F3                 and     [rsp+88h+var_40], 0
.text:00000001400098F9                 lea     rax, [rsp+88h+arg_30]
.text:0000000140009901                 mov     [rsp+88h+var_48], r15
.text:0000000140009906                 mov     r9, rsi
.text:0000000140009909                 mov     [rsp+88h+var_50], rax
.text:000000014000990E                 mov     r8d, ebp
.text:0000000140009911                 lea     rax, [rsp+88h+arg_28]
.text:0000000140009919                 mov     [rsp+88h+var_58], r15
.text:000000014000991E                 mov     [rsp+88h+var_60], rax
.text:0000000140009923                 mov     edx, ebx
.text:0000000140009925                 mov     rcx, r14
.text:0000000140009928                 mov     [rsp+88h+var_68], di
.text:000000014000992D                 call    WppAutoLogTrace
.text:0000000140009932                 add     rsp, 58h
.text:0000000140009936                 pop     r15
.text:0000000140009938                 pop     r14
.text:000000014000993A                 pop     rdi
.text:000000014000993B                 pop     rsi
.text:000000014000993C                 pop     rbp
.text:000000014000993D                 pop     rbx
.text:000000014000993E                 retn
.text:000000014000993E sub_14000984C   endp
.text:000000014000993E
.text:000000014000993E ; ---------------------------------------------------------------------------
.text:000000014000993F algn_14000993F:                         ; DATA XREF: .pdata:000000014000E24C↓o
.text:000000014000993F                 align 20h
.text:0000000140009940
.text:0000000140009940 ; =============== S U B R O U T I N E =======================================
.text:0000000140009940
.text:0000000140009940
.text:0000000140009940 ; __int64 sub_140009940(__int64, unsigned __int8, unsigned int, unsigned __int16, __int64, __int64, __int64, ...)
.text:0000000140009940 sub_140009940   proc near               ; CODE XREF: sub_140007B20+9E↑p
.text:0000000140009940                                         ; DATA XREF: .pdata:000000014000E258↓o
.text:0000000140009940
.text:0000000140009940 var_98          = qword ptr -98h
.text:0000000140009940 var_90          = qword ptr -90h
.text:0000000140009940 var_88          = qword ptr -88h
.text:0000000140009940 var_80          = qword ptr -80h
.text:0000000140009940 var_78          = qword ptr -78h
.text:0000000140009940 var_70          = qword ptr -70h
.text:0000000140009940 var_68          = qword ptr -68h
.text:0000000140009940 var_60          = qword ptr -60h
.text:0000000140009940 var_58          = qword ptr -58h
.text:0000000140009940 var_50          = qword ptr -50h
.text:0000000140009940 var_48          = qword ptr -48h
.text:0000000140009940 arg_20          = qword ptr  28h
.text:0000000140009940 arg_28          = qword ptr  30h
.text:0000000140009940 arg_30          = qword ptr  38h
.text:0000000140009940 arg_38          = byte ptr  40h
.text:0000000140009940
.text:0000000140009940 ; __unwind { // __GSHandlerCheck
.text:0000000140009940                 mov     r11, rsp
.text:0000000140009943                 push    rbx
.text:0000000140009944                 push    rbp
.text:0000000140009945                 push    rsi
.text:0000000140009946                 push    rdi
.text:0000000140009947                 push    r14
.text:0000000140009949                 push    r15
.text:000000014000994B                 sub     rsp, 88h
.text:0000000140009952                 mov     rax, cs:__security_cookie
.text:0000000140009959                 xor     rax, rsp
.text:000000014000995C                 mov     [rsp+0B8h+var_48], rax
.text:0000000140009961                 mov     rax, [rsp+0B8h+arg_28]
.text:0000000140009969                 mov     r14, rcx
.text:000000014000996C                 mov     rsi, [rsp+0B8h+arg_20]
.text:0000000140009974                 mov     r15d, 8
.text:000000014000997A                 mov     [r11-50h], rax
.text:000000014000997E                 mov     rax, [rsp+0B8h+arg_30]
.text:0000000140009986                 mov     ebp, r8d
.text:0000000140009989                 mov     [r11-58h], rax
.text:000000014000998D                 mov     r10, cs:DeviceObject
.text:0000000140009994                 movzx   edi, r9w
.text:0000000140009998                 mov     r9d, ebp
.text:000000014000999B                 lea     r8d, [rbp-1]
.text:000000014000999F                 shr     r9, 10h
.text:00000001400099A3                 mov     ecx, r8d
.text:00000001400099A6                 movzx   ebx, dl
.text:00000001400099A9                 shr     rcx, 5
.text:00000001400099AD                 and     r8d, 1Fh
.text:00000001400099B1                 and     ecx, 7FFh
.text:00000001400099B7                 lea     rax, [r9+r9*4]
.text:00000001400099BB                 lea     rdx, [rcx+rax*4]
.text:00000001400099BF                 mov     eax, [r10+rdx*4+2Ch]
.text:00000001400099C4                 bt      eax, r8d
.text:00000001400099C8                 jnb     short loc_140009A20
.text:00000001400099CA                 lea     rcx, [r9+r9*4]
.text:00000001400099CE                 add     rcx, rcx
.text:00000001400099D1                 cmp     [r10+rcx*8+29h], bl
.text:00000001400099D6                 jb      short loc_140009A20
.text:00000001400099D8                 and     qword ptr [r11-68h], 0
.text:00000001400099DD                 lea     rdx, [r11+40h]
.text:00000001400099E1                 mov     rax, cs:qword_14000D0E8
.text:00000001400099E8                 mov     r9d, edi
.text:00000001400099EB                 mov     rcx, [r10+rcx*8+18h]
.text:00000001400099F0                 mov     r8, rsi
.text:00000001400099F3                 mov     [r11-70h], r15
.text:00000001400099F7                 mov     [r11-78h], rdx
.text:00000001400099FB                 lea     rdx, [r11-58h]
.text:00000001400099FF                 mov     [r11-80h], r15
.text:0000000140009A03                 mov     [rsp+0B8h+var_88], rdx
.text:0000000140009A08                 lea     rdx, [r11-50h]
.text:0000000140009A0C                 mov     [rsp+0B8h+var_90], r15
.text:0000000140009A11                 mov     [rsp+0B8h+var_98], rdx
.text:0000000140009A16                 lea     edx, [r15+23h]
.text:0000000140009A1A                 call    cs:__guard_dispatch_icall_fptr
.text:0000000140009A20
.text:0000000140009A20 loc_140009A20:                          ; CODE XREF: sub_140009940+88↑j
.text:0000000140009A20                                         ; sub_140009940+96↑j
.text:0000000140009A20                 and     [rsp+0B8h+var_60], 0
.text:0000000140009A26                 lea     rax, [rsp+0B8h+arg_38]
.text:0000000140009A2E                 mov     [rsp+0B8h+var_68], r15
.text:0000000140009A33                 mov     r9, rsi
.text:0000000140009A36                 mov     [rsp+0B8h+var_70], rax
.text:0000000140009A3B                 mov     r8d, ebp
.text:0000000140009A3E                 mov     [rsp+0B8h+var_78], r15
.text:0000000140009A43                 lea     rax, [rsp+0B8h+var_58]
.text:0000000140009A48                 mov     [rsp+0B8h+var_80], rax
.text:0000000140009A4D                 mov     edx, ebx
.text:0000000140009A4F                 lea     rax, [rsp+0B8h+var_50]
.text:0000000140009A54                 mov     [rsp+0B8h+var_88], r15
.text:0000000140009A59                 mov     [rsp+0B8h+var_90], rax
.text:0000000140009A5E                 mov     rcx, r14
.text:0000000140009A61                 mov     word ptr [rsp+0B8h+var_98], di
.text:0000000140009A66                 call    WppAutoLogTrace
.text:0000000140009A6B                 mov     rcx, [rsp+0B8h+var_48]
.text:0000000140009A70                 xor     rcx, rsp        ; StackCookie
.text:0000000140009A73                 call    __security_check_cookie
.text:0000000140009A78                 add     rsp, 88h
.text:0000000140009A7F                 pop     r15
.text:0000000140009A81                 pop     r14
.text:0000000140009A83                 pop     rdi
.text:0000000140009A84                 pop     rsi
.text:0000000140009A85                 pop     rbp
.text:0000000140009A86                 pop     rbx
.text:0000000140009A87                 retn
.text:0000000140009A87 ; } // starts at 140009940
.text:0000000140009A87 sub_140009940   endp
.text:0000000140009A87
.text:0000000140009A88
.text:0000000140009A88 ; =============== S U B R O U T I N E =======================================
.text:0000000140009A88
.text:0000000140009A88 ; Attributes: bp-based frame fpd=3Fh
.text:0000000140009A88
.text:0000000140009A88 ; __int64 sub_140009A88(__int64, unsigned __int8, unsigned int, unsigned __int16, __int64, __int64, __int64, ...)
.text:0000000140009A88 sub_140009A88   proc near               ; CODE XREF: sub_140007610+DF↑p
.text:0000000140009A88                                         ; DATA XREF: .pdata:000000014000E258↓o ...
.text:0000000140009A88
.text:0000000140009A88 var_E0          = qword ptr -0E0h
.text:0000000140009A88 var_D8          = qword ptr -0D8h
.text:0000000140009A88 var_D0          = qword ptr -0D0h
.text:0000000140009A88 var_C8          = qword ptr -0C8h
.text:0000000140009A88 var_C0          = qword ptr -0C0h
.text:0000000140009A88 var_B8          = qword ptr -0B8h
.text:0000000140009A88 var_B0          = qword ptr -0B0h
.text:0000000140009A88 var_A8          = qword ptr -0A8h
.text:0000000140009A88 var_A0          = qword ptr -0A0h
.text:0000000140009A88 var_98          = qword ptr -98h
.text:0000000140009A88 var_90          = qword ptr -90h
.text:0000000140009A88 var_88          = qword ptr -88h
.text:0000000140009A88 var_80          = qword ptr -80h
.text:0000000140009A88 var_78          = qword ptr -78h
.text:0000000140009A88 var_70          = dword ptr -70h
.text:0000000140009A88 var_68          = qword ptr -68h
.text:0000000140009A88 var_60          = qword ptr -60h
.text:0000000140009A88 var_58          = qword ptr -58h
.text:0000000140009A88 var_50          = qword ptr -50h
.text:0000000140009A88 arg_20          = qword ptr  30h
.text:0000000140009A88 arg_28          = qword ptr  38h
.text:0000000140009A88 arg_30          = qword ptr  40h
.text:0000000140009A88 arg_38          = qword ptr  48h
.text:0000000140009A88 arg_40          = qword ptr  50h
.text:0000000140009A88 arg_48          = qword ptr  58h
.text:0000000140009A88 arg_50          = byte ptr  60h
.text:0000000140009A88
.text:0000000140009A88 ; __unwind { // __GSHandlerCheck
.text:0000000140009A88                 push    rbp
.text:0000000140009A8A                 push    rbx
.text:0000000140009A8B                 push    rsi
.text:0000000140009A8C                 push    rdi
.text:0000000140009A8D                 push    r12
.text:0000000140009A8F                 push    r13
.text:0000000140009A91                 push    r14
.text:0000000140009A93                 push    r15
.text:0000000140009A95                 lea     rbp, [rsp-7]
.text:0000000140009A9A                 sub     rsp, 0C8h
.text:0000000140009AA1                 mov     rax, cs:__security_cookie
.text:0000000140009AA8                 xor     rax, rsp
.text:0000000140009AAB                 mov     [rbp+3Fh+var_50], rax
.text:0000000140009AAF                 mov     rax, [rbp+3Fh+arg_28]
.text:0000000140009AB3                 lea     rsi, aNull_0    ; "NULL"
.text:0000000140009ABA                 mov     r14, cs:DeviceObject
.text:0000000140009AC1                 mov     r11, rcx
.text:0000000140009AC4                 mov     r13, [rbp+3Fh+arg_20]
.text:0000000140009AC8                 or      rbx, 0FFFFFFFFFFFFFFFFh
.text:0000000140009ACC                 mov     rdi, [rbp+3Fh+arg_48]
.text:0000000140009AD3                 mov     r10d, r8d
.text:0000000140009AD6                 mov     [rbp+3Fh+var_68], rcx
.text:0000000140009ADA                 mov     [rbp+3Fh+var_58], rax
.text:0000000140009ADE                 mov     rax, [rbp+3Fh+arg_30]
.text:0000000140009AE2                 lea     r8d, [r10-1]
.text:0000000140009AE6                 movzx   r12d, r9w
.text:0000000140009AEA                 mov     ecx, r8d
.text:0000000140009AED                 mov     [rbp+3Fh+var_60], rax
.text:0000000140009AF1                 shr     rcx, 5
.text:0000000140009AF5                 and     r8d, 1Fh
.text:0000000140009AF9                 and     ecx, 7FFh
.text:0000000140009AFF                 movzx   r15d, dl
.text:0000000140009B03                 mov     r9d, r10d
.text:0000000140009B06                 mov     [rbp+3Fh+var_70], r10d
.text:0000000140009B0A                 shr     r9, 10h
.text:0000000140009B0E                 lea     rax, [r9+r9*4]
.text:0000000140009B12                 lea     rdx, [rcx+rax*4]
.text:0000000140009B16                 mov     ecx, r8d
.text:0000000140009B19                 mov     eax, [r14+rdx*4+2Ch]
.text:0000000140009B1E                 lea     r8d, [rbx+9]
.text:0000000140009B22                 bt      eax, ecx
.text:0000000140009B25                 jnb     loc_140009BF3
.text:0000000140009B2B                 lea     r11, [r9+r9*4]
.text:0000000140009B2F                 add     r11, r11
.text:0000000140009B32                 cmp     [r14+r11*8+29h], r15b
.text:0000000140009B37                 jb      loc_140009BEF
.text:0000000140009B3D                 test    rdi, rdi
.text:0000000140009B40                 jz      short loc_140009B53
.text:0000000140009B42                 mov     rcx, rbx
.text:0000000140009B45
.text:0000000140009B45 loc_140009B45:                          ; CODE XREF: sub_140009A88+C4↓j
.text:0000000140009B45                 inc     rcx
.text:0000000140009B48                 cmp     byte ptr [rdi+rcx], 0
.text:0000000140009B4C                 jnz     short loc_140009B45
.text:0000000140009B4E                 inc     rcx
.text:0000000140009B51                 jmp     short loc_140009B58
.text:0000000140009B53 ; ---------------------------------------------------------------------------
.text:0000000140009B53
.text:0000000140009B53 loc_140009B53:                          ; CODE XREF: sub_140009A88+B8↑j
.text:0000000140009B53                 mov     ecx, 5
.text:0000000140009B58
.text:0000000140009B58 loc_140009B58:                          ; CODE XREF: sub_140009A88+C9↑j
.text:0000000140009B58                 lea     rdx, [rbp+3Fh+arg_50]
.text:0000000140009B5F                 test    rdi, rdi
.text:0000000140009B62                 mov     rax, rsi
.text:0000000140009B65                 mov     r9d, r12d
.text:0000000140009B68                 cmovnz  rax, rdi
.text:0000000140009B6C                 and     [rsp+100h+var_80], 0
.text:0000000140009B75                 mov     [rsp+100h+var_88], 4
.text:0000000140009B7E                 mov     [rsp+100h+var_90], rdx
.text:0000000140009B83                 mov     edx, 2Bh ; '+'
.text:0000000140009B88                 mov     [rsp+100h+var_98], rcx
.text:0000000140009B8D                 mov     rcx, [r14+r11*8+18h]
.text:0000000140009B92                 mov     [rsp+100h+var_A0], rax
.text:0000000140009B97                 lea     rax, [rbp+3Fh+arg_40]
.text:0000000140009B9E                 mov     [rsp+100h+var_A8], r8
.text:0000000140009BA3                 mov     [rsp+100h+var_B0], rax
.text:0000000140009BA8                 lea     rax, [rbp+3Fh+arg_38]
.text:0000000140009BAF                 mov     [rsp+100h+var_B8], r8
.text:0000000140009BB4                 mov     [rsp+100h+var_C0], rax
.text:0000000140009BB9                 lea     rax, [rbp+3Fh+var_60]
.text:0000000140009BBD                 mov     [rsp+100h+var_C8], r8
.text:0000000140009BC2                 mov     [rsp+100h+var_D0], rax
.text:0000000140009BC7                 lea     rax, [rbp+3Fh+var_58]
.text:0000000140009BCB                 mov     [rsp+100h+var_D8], r8
.text:0000000140009BD0                 mov     r8, r13
.text:0000000140009BD3                 mov     [rsp+100h+var_E0], rax
.text:0000000140009BD8                 mov     rax, cs:qword_14000D0E8
.text:0000000140009BDF                 call    cs:__guard_dispatch_icall_fptr
.text:0000000140009BE5                 mov     r10d, [rbp+3Fh+var_70]
.text:0000000140009BE9                 mov     r8d, 8
.text:0000000140009BEF
.text:0000000140009BEF loc_140009BEF:                          ; CODE XREF: sub_140009A88+AF↑j
.text:0000000140009BEF                 mov     r11, [rbp+3Fh+var_68]
.text:0000000140009BF3
.text:0000000140009BF3 loc_140009BF3:                          ; CODE XREF: sub_140009A88+9D↑j
.text:0000000140009BF3                 test    rdi, rdi
.text:0000000140009BF6                 jz      short loc_140009C06
.text:0000000140009BF8
.text:0000000140009BF8 loc_140009BF8:                          ; CODE XREF: sub_140009A88+177↓j
.text:0000000140009BF8                 inc     rbx
.text:0000000140009BFB                 cmp     byte ptr [rdi+rbx], 0
.text:0000000140009BFF                 jnz     short loc_140009BF8
.text:0000000140009C01                 inc     rbx
.text:0000000140009C04                 jmp     short loc_140009C0B
.text:0000000140009C06 ; ---------------------------------------------------------------------------
.text:0000000140009C06
.text:0000000140009C06 loc_140009C06:                          ; CODE XREF: sub_140009A88+16E↑j
.text:0000000140009C06                 mov     ebx, 5
.text:0000000140009C0B
.text:0000000140009C0B loc_140009C0B:                          ; CODE XREF: sub_140009A88+17C↑j
.text:0000000140009C0B                 test    rdi, rdi
.text:0000000140009C0E                 lea     rax, [rbp+3Fh+arg_50]
.text:0000000140009C15                 mov     r9, r13
.text:0000000140009C18                 mov     edx, r15d
.text:0000000140009C1B                 cmovnz  rsi, rdi
.text:0000000140009C1F                 mov     rcx, r11
.text:0000000140009C22                 and     [rsp+100h+var_78], 0
.text:0000000140009C2B                 mov     [rsp+100h+var_80], 4
.text:0000000140009C37                 mov     [rsp+100h+var_88], rax
.text:0000000140009C3C                 lea     rax, [rbp+3Fh+arg_40]
.text:0000000140009C43                 mov     [rsp+100h+var_90], rbx
.text:0000000140009C48                 mov     [rsp+100h+var_98], rsi
.text:0000000140009C4D                 mov     [rsp+100h+var_A0], r8
.text:0000000140009C52                 mov     [rsp+100h+var_A8], rax
.text:0000000140009C57                 lea     rax, [rbp+3Fh+arg_38]
.text:0000000140009C5E                 mov     [rsp+100h+var_B0], r8
.text:0000000140009C63                 mov     [rsp+100h+var_B8], rax
.text:0000000140009C68                 lea     rax, [rbp+3Fh+var_60]
.text:0000000140009C6C                 mov     [rsp+100h+var_C0], r8
.text:0000000140009C71                 mov     [rsp+100h+var_C8], rax
.text:0000000140009C76                 lea     rax, [rbp+3Fh+var_58]
.text:0000000140009C7A                 mov     [rsp+100h+var_D0], r8
.text:0000000140009C7F                 mov     r8d, r10d
.text:0000000140009C82                 mov     [rsp+100h+var_D8], rax
.text:0000000140009C87                 mov     word ptr [rsp+100h+var_E0], r12w
.text:0000000140009C8D                 call    WppAutoLogTrace
.text:0000000140009C92                 mov     rcx, [rbp+3Fh+var_50]
.text:0000000140009C96                 xor     rcx, rsp        ; StackCookie
.text:0000000140009C99                 call    __security_check_cookie
.text:0000000140009C9E                 add     rsp, 0C8h
.text:0000000140009CA5                 pop     r15
.text:0000000140009CA7                 pop     r14
.text:0000000140009CA9                 pop     r13
.text:0000000140009CAB                 pop     r12
.text:0000000140009CAD                 pop     rdi
.text:0000000140009CAE                 pop     rsi
.text:0000000140009CAF                 pop     rbx
.text:0000000140009CB0                 pop     rbp
.text:0000000140009CB1                 retn
.text:0000000140009CB1 ; } // starts at 140009A88
.text:0000000140009CB1 sub_140009A88   endp
.text:0000000140009CB1
.text:0000000140009CB1 ; ---------------------------------------------------------------------------
.text:0000000140009CB2 algn_140009CB2:                         ; DATA XREF: .pdata:000000014000E264↓o
.text:0000000140009CB2                 align 4
.text:0000000140009CB4
.text:0000000140009CB4 ; =============== S U B R O U T I N E =======================================
.text:0000000140009CB4
.text:0000000140009CB4
.text:0000000140009CB4 ; __int64 sub_140009CB4(__int64, unsigned __int8, unsigned int, unsigned __int16, __int64, const char *, ...)
.text:0000000140009CB4 sub_140009CB4   proc near               ; CODE XREF: sub_140007610+23B↑p
.text:0000000140009CB4                                         ; DATA XREF: .pdata:000000014000E270↓o
.text:0000000140009CB4
.text:0000000140009CB4 var_88          = qword ptr -88h
.text:0000000140009CB4 var_80          = qword ptr -80h
.text:0000000140009CB4 var_78          = qword ptr -78h
.text:0000000140009CB4 var_70          = qword ptr -70h
.text:0000000140009CB4 var_68          = qword ptr -68h
.text:0000000140009CB4 var_60          = qword ptr -60h
.text:0000000140009CB4 var_58          = qword ptr -58h
.text:0000000140009CB4 var_50          = qword ptr -50h
.text:0000000140009CB4 arg_20          = qword ptr  28h
.text:0000000140009CB4 arg_28          = qword ptr  30h
.text:0000000140009CB4 arg_30          = qword ptr  38h
.text:0000000140009CB4 arg_38          = byte ptr  40h
.text:0000000140009CB4
.text:0000000140009CB4                 push    rbx
.text:0000000140009CB6                 push    rbp
.text:0000000140009CB7                 push    rsi
.text:0000000140009CB8                 push    rdi
.text:0000000140009CB9                 push    r12
.text:0000000140009CBB                 push    r13
.text:0000000140009CBD                 push    r14
.text:0000000140009CBF                 push    r15
.text:0000000140009CC1                 sub     rsp, 68h
.text:0000000140009CC5                 mov     r11, cs:DeviceObject
.text:0000000140009CCC                 lea     rsi, aNull_0    ; "NULL"
.text:0000000140009CD3                 mov     r15, [rsp+0A8h+arg_20]
.text:0000000140009CDB                 mov     r12, rcx
.text:0000000140009CDE                 mov     rdi, [rsp+0A8h+arg_28]
.text:0000000140009CE6                 or      rbx, 0FFFFFFFFFFFFFFFFh
.text:0000000140009CEA                 mov     r13d, r8d
.text:0000000140009CED                 movzx   r14d, r9w
.text:0000000140009CF1                 mov     r9d, r13d
.text:0000000140009CF4                 shr     r9, 10h
.text:0000000140009CF8                 movzx   ebp, dl
.text:0000000140009CFB                 lea     r8d, [r13-1]
.text:0000000140009CFF                 mov     ecx, r8d
.text:0000000140009D02                 and     r8d, 1Fh
.text:0000000140009D06                 shr     rcx, 5
.text:0000000140009D0A                 lea     rax, [r9+r9*4]
.text:0000000140009D0E                 and     ecx, 7FFh
.text:0000000140009D14                 lea     rdx, [rcx+rax*4]
.text:0000000140009D18                 mov     ecx, r8d
.text:0000000140009D1B                 mov     eax, [r11+rdx*4+2Ch]
.text:0000000140009D20                 lea     r8d, [rbx+5]
.text:0000000140009D24                 bt      eax, ecx
.text:0000000140009D27                 jnb     loc_140009DBF
.text:0000000140009D2D                 lea     r10, [r9+r9*4]
.text:0000000140009D31                 add     r10, r10
.text:0000000140009D34                 cmp     [r11+r10*8+29h], bpl
.text:0000000140009D39                 jb      loc_140009DBF
.text:0000000140009D3F                 test    rdi, rdi
.text:0000000140009D42                 jz      short loc_140009D55
.text:0000000140009D44                 mov     rdx, rbx
.text:0000000140009D47
.text:0000000140009D47 loc_140009D47:                          ; CODE XREF: sub_140009CB4+9A↓j
.text:0000000140009D47                 inc     rdx
.text:0000000140009D4A                 cmp     byte ptr [rdi+rdx], 0
.text:0000000140009D4E                 jnz     short loc_140009D47
.text:0000000140009D50                 inc     rdx
.text:0000000140009D53                 jmp     short loc_140009D5A
.text:0000000140009D55 ; ---------------------------------------------------------------------------
.text:0000000140009D55
.text:0000000140009D55 loc_140009D55:                          ; CODE XREF: sub_140009CB4+8E↑j
.text:0000000140009D55                 mov     edx, 5
.text:0000000140009D5A
.text:0000000140009D5A loc_140009D5A:                          ; CODE XREF: sub_140009CB4+9F↑j
.text:0000000140009D5A                 mov     rax, cs:qword_14000D0E8
.text:0000000140009D61                 test    rdi, rdi
.text:0000000140009D64                 mov     rcx, rsi
.text:0000000140009D67                 mov     r9d, r14d
.text:0000000140009D6A                 cmovnz  rcx, rdi
.text:0000000140009D6E                 and     [rsp+0A8h+var_58], 0
.text:0000000140009D74                 mov     [rsp+0A8h+var_60], r8
.text:0000000140009D79                 lea     r8, [rsp+0A8h+arg_38]
.text:0000000140009D81                 mov     [rsp+0A8h+var_68], r8
.text:0000000140009D86                 lea     r8, [rsp+0A8h+arg_30]
.text:0000000140009D8E                 mov     [rsp+0A8h+var_70], 4
.text:0000000140009D97                 mov     [rsp+0A8h+var_78], r8
.text:0000000140009D9C                 mov     r8, r15
.text:0000000140009D9F                 mov     [rsp+0A8h+var_80], rdx
.text:0000000140009DA4                 mov     edx, 2Bh ; '+'
.text:0000000140009DA9                 mov     [rsp+0A8h+var_88], rcx
.text:0000000140009DAE                 mov     rcx, [r11+r10*8+18h]
.text:0000000140009DB3                 call    cs:__guard_dispatch_icall_fptr
.text:0000000140009DB9                 mov     r8d, 4
.text:0000000140009DBF
.text:0000000140009DBF loc_140009DBF:                          ; CODE XREF: sub_140009CB4+73↑j
.text:0000000140009DBF                                         ; sub_140009CB4+85↑j
.text:0000000140009DBF                 test    rdi, rdi
.text:0000000140009DC2                 jz      short loc_140009DD2
.text:0000000140009DC4
.text:0000000140009DC4 loc_140009DC4:                          ; CODE XREF: sub_140009CB4+117↓j
.text:0000000140009DC4                 inc     rbx
.text:0000000140009DC7                 cmp     byte ptr [rdi+rbx], 0
.text:0000000140009DCB                 jnz     short loc_140009DC4
.text:0000000140009DCD                 inc     rbx
.text:0000000140009DD0                 jmp     short loc_140009DD7
.text:0000000140009DD2 ; ---------------------------------------------------------------------------
.text:0000000140009DD2
.text:0000000140009DD2 loc_140009DD2:                          ; CODE XREF: sub_140009CB4+10E↑j
.text:0000000140009DD2                 mov     ebx, 5
.text:0000000140009DD7
.text:0000000140009DD7 loc_140009DD7:                          ; CODE XREF: sub_140009CB4+11C↑j
.text:0000000140009DD7                 test    rdi, rdi
.text:0000000140009DDA                 lea     rax, [rsp+0A8h+arg_38]
.text:0000000140009DE2                 mov     r9, r15
.text:0000000140009DE5                 mov     edx, ebp
.text:0000000140009DE7                 cmovnz  rsi, rdi
.text:0000000140009DEB                 mov     rcx, r12
.text:0000000140009DEE                 and     [rsp+0A8h+var_50], 0
.text:0000000140009DF4                 mov     [rsp+0A8h+var_58], r8
.text:0000000140009DF9                 mov     [rsp+0A8h+var_60], rax
.text:0000000140009DFE                 lea     rax, [rsp+0A8h+arg_30]
.text:0000000140009E06                 mov     [rsp+0A8h+var_68], r8
.text:0000000140009E0B                 mov     r8d, r13d
.text:0000000140009E0E                 mov     [rsp+0A8h+var_70], rax
.text:0000000140009E13                 mov     [rsp+0A8h+var_78], rbx
.text:0000000140009E18                 mov     [rsp+0A8h+var_80], rsi
.text:0000000140009E1D                 mov     word ptr [rsp+0A8h+var_88], r14w
.text:0000000140009E23                 call    WppAutoLogTrace
.text:0000000140009E28                 add     rsp, 68h
.text:0000000140009E2C                 pop     r15
.text:0000000140009E2E                 pop     r14
.text:0000000140009E30                 pop     r13
.text:0000000140009E32                 pop     r12
.text:0000000140009E34                 pop     rdi
.text:0000000140009E35                 pop     rsi
.text:0000000140009E36                 pop     rbp
.text:0000000140009E37                 pop     rbx
.text:0000000140009E38                 retn
.text:0000000140009E38 sub_140009CB4   endp
.text:0000000140009E38
.text:0000000140009E38 ; ---------------------------------------------------------------------------
.text:0000000140009E39 algn_140009E39:                         ; DATA XREF: .pdata:000000014000E270↓o
.text:0000000140009E39                 align 20h
.text:0000000140009E40
.text:0000000140009E40 ; =============== S U B R O U T I N E =======================================
.text:0000000140009E40
.text:0000000140009E40
.text:0000000140009E40 _guard_check_icall_nop proc near        ; DATA XREF: .rdata:__guard_check_icall_fptr↓o
.text:0000000140009E40                                         ; .rdata:000000014000B178↓o
.text:0000000140009E40                 retn    0
.text:0000000140009E40 _guard_check_icall_nop endp
.text:0000000140009E40
.text:0000000140009E40 ; ---------------------------------------------------------------------------
.text:0000000140009E43                 align 20h
.text:0000000140009E60 ; [0000001E BYTES: COLLAPSED FUNCTION __security_check_cookie. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:0000000140009E7E algn_140009E7E:                         ; DATA XREF: .pdata:000000014000E27C↓o
.text:0000000140009E7E                 align 20h
.text:0000000140009E80 ; [00000007 BYTES: COLLAPSED FUNCTION __report_gsfailure. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:0000000140009E87                 align 8
.text:0000000140009E88 ; [0000001E BYTES: COLLAPSED FUNCTION __GSHandlerCheck. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:0000000140009EA6 algn_140009EA6:                         ; DATA XREF: .pdata:000000014000E288↓o
.text:0000000140009EA6                 align 8
.text:0000000140009EA8
.text:0000000140009EA8 ; =============== S U B R O U T I N E =======================================
.text:0000000140009EA8
.text:0000000140009EA8
.text:0000000140009EA8 ; __int64 __fastcall sub_140009EA8(__int64, __int64)
.text:0000000140009EA8 sub_140009EA8   proc near               ; CODE XREF: __GSHandlerCheck+E↑p
.text:0000000140009EA8                                         ; DATA XREF: .pdata:000000014000E294↓o
.text:0000000140009EA8                 sub     rsp, 28h
.text:0000000140009EAC                 mov     eax, [r8]
.text:0000000140009EAF                 mov     r9, rcx
.text:0000000140009EB2                 mov     r11d, eax
.text:0000000140009EB5                 mov     r10, rcx
.text:0000000140009EB8                 and     r11d, 0FFFFFFF8h
.text:0000000140009EBC                 test    al, 4
.text:0000000140009EBE                 jz      short loc_140009ED3
.text:0000000140009EC0                 mov     eax, [r8+8]
.text:0000000140009EC4                 movsxd  r10, dword ptr [r8+4]
.text:0000000140009EC8                 neg     eax
.text:0000000140009ECA                 add     r10, rcx
.text:0000000140009ECD                 movsxd  rcx, eax
.text:0000000140009ED0                 and     r10, rcx
.text:0000000140009ED3
.text:0000000140009ED3 loc_140009ED3:                          ; CODE XREF: sub_140009EA8+16↑j
.text:0000000140009ED3                 movsxd  rax, r11d
.text:0000000140009ED6                 mov     r8, [rax+r10]
.text:0000000140009EDA                 mov     rax, [rdx+10h]
.text:0000000140009EDE                 mov     ecx, [rax+8]
.text:0000000140009EE1                 mov     rax, [rdx+8]
.text:0000000140009EE5                 movzx   edx, byte ptr [rcx+rax+3]
.text:0000000140009EEA                 test    dl, 0Fh
.text:0000000140009EED                 jz      short loc_140009EF7
.text:0000000140009EEF                 mov     eax, edx
.text:0000000140009EF1                 and     eax, 0FFFFFFF0h
.text:0000000140009EF4                 add     r9, rax
.text:0000000140009EF7
.text:0000000140009EF7 loc_140009EF7:                          ; CODE XREF: sub_140009EA8+45↑j
.text:0000000140009EF7                 xor     r9, r8
.text:0000000140009EFA                 mov     rcx, r9         ; StackCookie
.text:0000000140009EFD                 call    __security_check_cookie
.text:0000000140009F02                 add     rsp, 28h
.text:0000000140009F06                 retn
.text:0000000140009F06 ; ---------------------------------------------------------------------------
.text:0000000140009F07                 db 0CCh
.text:0000000140009F07 sub_140009EA8   endp
.text:0000000140009F07
.text:0000000140009F08 algn_140009F08:                         ; DATA XREF: .pdata:000000014000E294↓o
.text:0000000140009F08                 align 10h
.text:0000000140009F10
.text:0000000140009F10 ; =============== S U B R O U T I N E =======================================
.text:0000000140009F10
.text:0000000140009F10
.text:0000000140009F10 ; __int64 sub_140009F10()
.text:0000000140009F10 sub_140009F10   proc near               ; CODE XREF: sub_140009F6C:loc_14000A051↓p
.text:0000000140009F10                                         ; sub_14000A0C0+4↓p ...
.text:0000000140009F10                 sub     rsp, 28h
.text:0000000140009F14                 lea     rcx, unk_14000D070
.text:0000000140009F1B                 call    sub_14000A388
.text:0000000140009F20                 mov     r8, cs:qword_14000D390
.text:0000000140009F27                 lea     rdx, unk_14000D070
.text:0000000140009F2E                 lea     rcx, DestinationString
.text:0000000140009F35                 call    WdfVersionUnbind
.text:0000000140009F3A                 add     rsp, 28h
.text:0000000140009F3E                 retn
.text:0000000140009F3E ; ---------------------------------------------------------------------------
.text:0000000140009F3F                 align 20h
.text:0000000140009F3F sub_140009F10   endp
.text:0000000140009F3F
.text:0000000140009F40
.text:0000000140009F40 ; =============== S U B R O U T I N E =======================================
.text:0000000140009F40
.text:0000000140009F40
.text:0000000140009F40 ; NTSTATUS __stdcall DriverEntry(PDRIVER_OBJECT DriverObject, PUNICODE_STRING RegistryPath)
.text:0000000140009F40                 public DriverEntry
.text:0000000140009F40 DriverEntry     proc near               ; DATA XREF: .rdata:000000014000B180↓o
.text:0000000140009F40                                         ; .pdata:000000014000E2A0↓o ...
.text:0000000140009F40
.text:0000000140009F40 arg_0           = qword ptr  8
.text:0000000140009F40
.text:0000000140009F40                 mov     [rsp+arg_0], rbx
.text:0000000140009F45                 push    rdi
.text:0000000140009F46                 sub     rsp, 20h
.text:0000000140009F4A                 mov     rbx, rdx
.text:0000000140009F4D                 mov     rdi, rcx
.text:0000000140009F50                 call    sub_140010200
.text:0000000140009F55                 mov     rdx, rbx
.text:0000000140009F58                 mov     rcx, rdi
.text:0000000140009F5B                 call    sub_140009F6C
.text:0000000140009F60                 mov     rbx, [rsp+28h+arg_0]
.text:0000000140009F65                 add     rsp, 20h
.text:0000000140009F69                 pop     rdi
.text:0000000140009F6A                 retn
.text:0000000140009F6A ; ---------------------------------------------------------------------------
.text:0000000140009F6B                 align 4
.text:0000000140009F6B DriverEntry     endp
.text:0000000140009F6B
.text:0000000140009F6C
.text:0000000140009F6C ; =============== S U B R O U T I N E =======================================
.text:0000000140009F6C
.text:0000000140009F6C
.text:0000000140009F6C ; __int64 __fastcall sub_140009F6C(__int64, const UNICODE_STRING *)
.text:0000000140009F6C sub_140009F6C   proc near               ; CODE XREF: DriverEntry+1B↑p
.text:0000000140009F6C                                         ; DATA XREF: .pdata:000000014000E2AC↓o ...
.text:0000000140009F6C
.text:0000000140009F6C var_18          = qword ptr -18h
.text:0000000140009F6C arg_0           = qword ptr  8
.text:0000000140009F6C arg_8           = qword ptr  10h
.text:0000000140009F6C arg_10          = qword ptr  18h
.text:0000000140009F6C arg_18          = qword ptr  20h
.text:0000000140009F6C
.text:0000000140009F6C                 mov     rax, rsp
.text:0000000140009F6F                 mov     [rax+8], rbx
.text:0000000140009F73                 mov     [rax+10h], rbp
.text:0000000140009F77                 mov     [rax+18h], rsi
.text:0000000140009F7B                 mov     [rax+20h], rdi
.text:0000000140009F7F                 push    r14
.text:0000000140009F81                 sub     rsp, 30h
.text:0000000140009F85                 xor     ebp, ebp
.text:0000000140009F87                 mov     rsi, rdx
.text:0000000140009F8A                 mov     rdi, rcx
.text:0000000140009F8D                 test    rcx, rcx
.text:0000000140009F90                 jnz     short loc_140009F9C
.text:0000000140009F92                 call    sub_140010000
.text:0000000140009F97                 jmp     loc_14000A058
.text:0000000140009F9C ; ---------------------------------------------------------------------------
.text:0000000140009F9C
.text:0000000140009F9C loc_140009F9C:                          ; CODE XREF: sub_140009F6C+24↑j
.text:0000000140009F9C                 lea     rax, stru_14000D110.Queue
.text:0000000140009FA3                 mov     cs:qword_14000D398, rdi
.text:0000000140009FAA                 lea     r14, DestinationString
.text:0000000140009FB1                 mov     dword ptr cs:DestinationString.Length, 2080000h
.text:0000000140009FBB                 mov     rcx, r14        ; DestinationString
.text:0000000140009FBE                 mov     cs:DestinationString.Buffer, rax
.text:0000000140009FC5                 call    cs:RtlCopyUnicodeString
.text:0000000140009FCC                 nop     dword ptr [rax+rax+00h]
.text:0000000140009FD1                 lea     r9, qword_14000D390
.text:0000000140009FD8                 mov     rdx, r14
.text:0000000140009FDB                 lea     r8, unk_14000D070
.text:0000000140009FE2                 mov     rcx, rdi
.text:0000000140009FE5                 call    WdfVersionBind
.text:0000000140009FEA                 test    eax, eax
.text:0000000140009FEC                 js      short loc_14000A058
.text:0000000140009FEE                 mov     rax, cs:qword_14000D388
.text:0000000140009FF5                 lea     rcx, unk_14000D070
.text:0000000140009FFC                 mov     rdx, [rax+648h]
.text:000000014000A003                 mov     cs:qword_14000D368, rdx
.text:000000014000A00A                 call    sub_14000A1B8
.text:000000014000A00F                 mov     ebx, eax
.text:000000014000A011                 test    eax, eax
.text:000000014000A013                 js      short loc_14000A051
.text:000000014000A015                 call    sub_14000A100
.text:000000014000A01A                 mov     ebx, eax
.text:000000014000A01C                 test    eax, eax
.text:000000014000A01E                 js      short loc_14000A051
.text:000000014000A020                 mov     rdx, rsi
.text:000000014000A023                 mov     rcx, rdi
.text:000000014000A026                 call    sub_140010000
.text:000000014000A02B                 mov     ebx, eax
.text:000000014000A02D                 test    eax, eax
.text:000000014000A02F                 jns     short loc_14000A074
.text:000000014000A031                 xor     edx, edx        ; Level
.text:000000014000A033                 mov     [rsp+38h+var_18], r14
.text:000000014000A038                 mov     r9d, eax
.text:000000014000A03B                 lea     r8, Format      ; "DriverEntry failed 0x%x for driver %wZ"...
.text:000000014000A042                 lea     ecx, [rdx+4Dh]  ; ComponentId
.text:000000014000A045                 call    cs:DbgPrintEx
.text:000000014000A04C                 nop     dword ptr [rax+rax+00h]
.text:000000014000A051
.text:000000014000A051 loc_14000A051:                          ; CODE XREF: sub_140009F6C+A7↑j
.text:000000014000A051                                         ; sub_140009F6C+B2↑j
.text:000000014000A051                 call    sub_140009F10
.text:000000014000A056                 mov     eax, ebx
.text:000000014000A058
.text:000000014000A058 loc_14000A058:                          ; CODE XREF: sub_140009F6C+2B↑j
.text:000000014000A058                                         ; sub_140009F6C+80↑j ...
.text:000000014000A058                 mov     rbx, [rsp+38h+arg_0]
.text:000000014000A05D                 mov     rbp, [rsp+38h+arg_8]
.text:000000014000A062                 mov     rsi, [rsp+38h+arg_10]
.text:000000014000A067                 mov     rdi, [rsp+38h+arg_18]
.text:000000014000A06C                 add     rsp, 30h
.text:000000014000A070                 pop     r14
.text:000000014000A072                 retn
.text:000000014000A072 ; ---------------------------------------------------------------------------
.text:000000014000A073                 align 4
.text:000000014000A074
.text:000000014000A074 loc_14000A074:                          ; CODE XREF: sub_140009F6C+C3↑j
.text:000000014000A074                 mov     rax, cs:qword_14000D390
.text:000000014000A07B                 cmp     [rax+30h], bpl
.text:000000014000A07F                 jz      short loc_14000A0A7
.text:000000014000A081                 mov     rcx, [rdi+68h]
.text:000000014000A085                 mov     rax, cs:qword_14000D3A0
.text:000000014000A08C                 test    rcx, rcx
.text:000000014000A08F                 cmovnz  rax, rcx
.text:000000014000A093                 mov     cs:qword_14000D3A0, rax
.text:000000014000A09A                 lea     rax, sub_14000A0D0
.text:000000014000A0A1                 mov     [rdi+68h], rax
.text:000000014000A0A5                 jmp     short loc_14000A0BC
.text:000000014000A0A7 ; ---------------------------------------------------------------------------
.text:000000014000A0A7
.text:000000014000A0A7 loc_14000A0A7:                          ; CODE XREF: sub_140009F6C+113↑j
.text:000000014000A0A7                 mov     eax, [rax+8]
.text:000000014000A0AA                 test    al, 2
.text:000000014000A0AC                 jz      short loc_14000A0BC
.text:000000014000A0AE                 lea     rax, sub_14000A0C0
.text:000000014000A0B5                 mov     cs:qword_14000D368, rax
.text:000000014000A0BC
.text:000000014000A0BC loc_14000A0BC:                          ; CODE XREF: sub_140009F6C+139↑j
.text:000000014000A0BC                                         ; sub_140009F6C+140↑j
.text:000000014000A0BC                 xor     eax, eax
.text:000000014000A0BE                 jmp     short loc_14000A058
.text:000000014000A0BE sub_140009F6C   endp
.text:000000014000A0BE
.text:000000014000A0C0
.text:000000014000A0C0 ; =============== S U B R O U T I N E =======================================
.text:000000014000A0C0
.text:000000014000A0C0
.text:000000014000A0C0 ; __int64 sub_14000A0C0()
.text:000000014000A0C0 sub_14000A0C0   proc near               ; DATA XREF: sub_140009F6C+142↑o
.text:000000014000A0C0                                         ; .rdata:000000014000B184↓o ...
.text:000000014000A0C0                 sub     rsp, 28h
.text:000000014000A0C4                 call    sub_140009F10
.text:000000014000A0C9                 add     rsp, 28h
.text:000000014000A0CD                 retn
.text:000000014000A0CD ; ---------------------------------------------------------------------------
.text:000000014000A0CE                 db 0CCh
.text:000000014000A0CE sub_14000A0C0   endp
.text:000000014000A0CE
.text:000000014000A0CF algn_14000A0CF:                         ; DATA XREF: .pdata:000000014000E2C4↓o
.text:000000014000A0CF                 align 10h
.text:000000014000A0D0
.text:000000014000A0D0 ; =============== S U B R O U T I N E =======================================
.text:000000014000A0D0
.text:000000014000A0D0
.text:000000014000A0D0 ; __int64 sub_14000A0D0()
.text:000000014000A0D0 sub_14000A0D0   proc near               ; DATA XREF: sub_140009F6C+12E↑o
.text:000000014000A0D0                                         ; sub_14000A0D0+10↓o ...
.text:000000014000A0D0                 sub     rsp, 28h
.text:000000014000A0D4                 mov     rax, cs:qword_14000D3A0
.text:000000014000A0DB                 test    rax, rax
.text:000000014000A0DE                 jz      short loc_14000A0F2
.text:000000014000A0E0                 lea     rdx, sub_14000A0D0
.text:000000014000A0E7                 cmp     rax, rdx
.text:000000014000A0EA                 jz      short loc_14000A0F2
.text:000000014000A0EC                 call    cs:__guard_dispatch_icall_fptr
.text:000000014000A0F2
.text:000000014000A0F2 loc_14000A0F2:                          ; CODE XREF: sub_14000A0D0+E↑j
.text:000000014000A0F2                                         ; sub_14000A0D0+1A↑j
.text:000000014000A0F2                 call    sub_140009F10
.text:000000014000A0F7                 add     rsp, 28h
.text:000000014000A0FB                 retn
.text:000000014000A0FB ; ---------------------------------------------------------------------------
.text:000000014000A0FC                 db 0CCh
.text:000000014000A0FC sub_14000A0D0   endp
.text:000000014000A0FC
.text:000000014000A0FD algn_14000A0FD:                         ; DATA XREF: .pdata:000000014000E2D0↓o
.text:000000014000A0FD                 align 20h
.text:000000014000A100
.text:000000014000A100 ; =============== S U B R O U T I N E =======================================
.text:000000014000A100
.text:000000014000A100
.text:000000014000A100 ; __int64 sub_14000A100()
.text:000000014000A100 sub_14000A100   proc near               ; CODE XREF: sub_140009F6C+A9↑p
.text:000000014000A100                                         ; DATA XREF: .pdata:000000014000E2DC↓o
.text:000000014000A100
.text:000000014000A100 var_28          = qword ptr -28h
.text:000000014000A100 var_20          = dword ptr -20h
.text:000000014000A100 var_18          = dword ptr -18h
.text:000000014000A100 arg_0           = qword ptr  8
.text:000000014000A100
.text:000000014000A100                 mov     [rsp+arg_0], rbx
.text:000000014000A105                 push    rdi
.text:000000014000A106                 sub     rsp, 40h
.text:000000014000A10A                 lea     r9, unk_14000D0C0
.text:000000014000A111                 lea     rdi, byte_14000D0D0
.text:000000014000A118                 cmp     r9, rdi
.text:000000014000A11B                 jbe     short loc_14000A147
.text:000000014000A11D                 xor     edx, edx        ; Level
.text:000000014000A11F                 lea     r8, aFxstubinittype ; "FxStubInitTypes: invalid driver image, "...
.text:000000014000A126                 mov     ebx, 0C000007Bh
.text:000000014000A12B                 mov     [rsp+48h+var_20], ebx
.text:000000014000A12F                 mov     [rsp+48h+var_28], rdi
.text:000000014000A134                 lea     ecx, [rdx+4Dh]  ; ComponentId
.text:000000014000A137                 call    cs:DbgPrintEx
.text:000000014000A13E                 nop     dword ptr [rax+rax+00h]
.text:000000014000A143                 mov     eax, ebx
.text:000000014000A145                 jmp     short loc_14000A175
.text:000000014000A147 ; ---------------------------------------------------------------------------
.text:000000014000A147
.text:000000014000A147 loc_14000A147:                          ; CODE XREF: sub_14000A100+1B↑j
.text:000000014000A147                 lea     rbx, byte_14000D0D0
.text:000000014000A14E                 jmp     short loc_14000A16E
.text:000000014000A150 ; ---------------------------------------------------------------------------
.text:000000014000A150
.text:000000014000A150 loc_14000A150:                          ; CODE XREF: sub_14000A100+71↓j
.text:000000014000A150                 mov     eax, [rbx]
.text:000000014000A152                 cmp     eax, 28h ; '('
.text:000000014000A155                 jnz     short loc_14000A181
.text:000000014000A157                 mov     rax, [rbx+20h]
.text:000000014000A15B                 test    rax, rax
.text:000000014000A15E                 jz      short loc_14000A16A
.text:000000014000A160                 call    cs:__guard_dispatch_icall_fptr
.text:000000014000A166                 mov     [rbx+18h], rax
.text:000000014000A16A
.text:000000014000A16A loc_14000A16A:                          ; CODE XREF: sub_14000A100+5E↑j
.text:000000014000A16A                 add     rbx, 28h ; '('
.text:000000014000A16E
.text:000000014000A16E loc_14000A16E:                          ; CODE XREF: sub_14000A100+4E↑j
.text:000000014000A16E                 cmp     rbx, rdi
.text:000000014000A171                 jb      short loc_14000A150
.text:000000014000A173                 xor     eax, eax
.text:000000014000A175
.text:000000014000A175 loc_14000A175:                          ; CODE XREF: sub_14000A100+45↑j
.text:000000014000A175                                         ; sub_14000A100+B3↓j
.text:000000014000A175                 mov     rbx, [rsp+48h+arg_0]
.text:000000014000A17A                 add     rsp, 40h
.text:000000014000A17E                 pop     rdi
.text:000000014000A17F                 retn
.text:000000014000A17F ; ---------------------------------------------------------------------------
.text:000000014000A180                 db 0CCh
.text:000000014000A181 ; ---------------------------------------------------------------------------
.text:000000014000A181
.text:000000014000A181 loc_14000A181:                          ; CODE XREF: sub_14000A100+55↑j
.text:000000014000A181                 xor     edx, edx        ; Level
.text:000000014000A183                 lea     r8, aFxstubinittype_0 ; "FxStubInitTypes: WDF_OBJECT_CONTEXT_TYP"...
.text:000000014000A18A                 mov     edi, 0C0000004h
.text:000000014000A18F                 mov     r9, rbx
.text:000000014000A192                 mov     [rsp+48h+var_18], edi
.text:000000014000A196                 mov     [rsp+48h+var_20], 28h ; '('
.text:000000014000A19E                 lea     ecx, [rdx+4Dh]  ; ComponentId
.text:000000014000A1A1                 mov     dword ptr [rsp+48h+var_28], eax
.text:000000014000A1A5                 call    cs:DbgPrintEx
.text:000000014000A1AC                 nop     dword ptr [rax+rax+00h]
.text:000000014000A1B1                 mov     eax, edi
.text:000000014000A1B3                 jmp     short loc_14000A175
.text:000000014000A1B3 sub_14000A100   endp
.text:000000014000A1B3
.text:000000014000A1B3 ; ---------------------------------------------------------------------------
.text:000000014000A1B5 algn_14000A1B5:                         ; DATA XREF: .pdata:000000014000E2DC↓o
.text:000000014000A1B5                 align 8
.text:000000014000A1B8
.text:000000014000A1B8 ; =============== S U B R O U T I N E =======================================
.text:000000014000A1B8
.text:000000014000A1B8
.text:000000014000A1B8 ; __int64 __fastcall sub_14000A1B8(__int64)
.text:000000014000A1B8 sub_14000A1B8   proc near               ; CODE XREF: sub_140009F6C+9E↑p
.text:000000014000A1B8                                         ; DATA XREF: .pdata:000000014000E2E8↓o
.text:000000014000A1B8
.text:000000014000A1B8 var_28          = qword ptr -28h
.text:000000014000A1B8 var_20          = qword ptr -20h
.text:000000014000A1B8 var_18          = qword ptr -18h
.text:000000014000A1B8 var_10          = dword ptr -10h
.text:000000014000A1B8 arg_0           = qword ptr  8
.text:000000014000A1B8 arg_8           = qword ptr  10h
.text:000000014000A1B8 arg_10          = qword ptr  18h
.text:000000014000A1B8 arg_18          = qword ptr  20h
.text:000000014000A1B8
.text:000000014000A1B8                 mov     rax, rsp
.text:000000014000A1BB                 mov     [rax+8], rbx
.text:000000014000A1BF                 mov     [rax+10h], rbp
.text:000000014000A1C3                 mov     [rax+18h], rsi
.text:000000014000A1C7                 mov     [rax+20h], rdi
.text:000000014000A1CB                 push    r14
.text:000000014000A1CD                 sub     rsp, 40h
.text:000000014000A1D1                 xor     edi, edi
.text:000000014000A1D3                 lea     r9, unk_14000D0A0
.text:000000014000A1DA                 lea     r14, byte_14000D0B0
.text:000000014000A1E1                 mov     rbp, rcx
.text:000000014000A1E4                 cmp     r9, r14
.text:000000014000A1E7                 jbe     short loc_14000A216
.text:000000014000A1E9                 mov     dword ptr [rax-20h], 0C000007Bh
.text:000000014000A1F0                 lea     r8, aFxstubbindclas ; "FxStubBindClasses: invalid driver image"...
.text:000000014000A1F7                 xor     edx, edx        ; Level
.text:000000014000A1F9                 mov     [rax-28h], r14
.text:000000014000A1FD                 lea     ecx, [rdi+4Dh]  ; ComponentId
.text:000000014000A200                 call    cs:DbgPrintEx
.text:000000014000A207                 nop     dword ptr [rax+rax+00h]
.text:000000014000A20C
.text:000000014000A20C loc_14000A20C:                          ; CODE XREF: sub_14000A1B8+1CA↓j
.text:000000014000A20C                 mov     eax, 0C000007Bh
.text:000000014000A211                 jmp     loc_14000A2AB
.text:000000014000A216 ; ---------------------------------------------------------------------------
.text:000000014000A216
.text:000000014000A216 loc_14000A216:                          ; CODE XREF: sub_14000A1B8+2F↑j
.text:000000014000A216                 lea     rbx, byte_14000D0B0
.text:000000014000A21D                 cmp     rbx, r14
.text:000000014000A220
.text:000000014000A220 loc_14000A220:                          ; CODE XREF: sub_14000A1B8+12D↓j
.text:000000014000A220                 jnb     loc_14000A2A9
.text:000000014000A226                 lea     rax, [rbx+4]
.text:000000014000A22A                 cmp     rax, r14
.text:000000014000A22D                 ja      loc_14000A36A
.text:000000014000A233                 mov     edx, [rbx]
.text:000000014000A235                 cmp     edx, 50h ; 'P'
.text:000000014000A238                 jnz     loc_14000A31D
.text:000000014000A23E                 lea     rsi, [rbx+50h]
.text:000000014000A242                 cmp     rsi, r14
.text:000000014000A245                 ja      loc_14000A314
.text:000000014000A24B                 mov     rax, [rbx+38h]
.text:000000014000A24F                 mov     cs:off_14000D0B8, rbx
.text:000000014000A256                 test    rax, rax
.text:000000014000A259                 jz      short loc_14000A2C7
.text:000000014000A25B                 mov     r8, cs:qword_14000D390
.text:000000014000A262                 lea     rcx, WdfVersionBindClass
.text:000000014000A269                 mov     r9, rbx
.text:000000014000A26C                 mov     rdx, rbp
.text:000000014000A26F                 call    cs:__guard_dispatch_icall_fptr
.text:000000014000A275                 mov     edi, eax
.text:000000014000A277                 test    eax, eax
.text:000000014000A279                 jns     short loc_14000A2DF
.text:000000014000A27B                 mov     r9, [rbx+38h]
.text:000000014000A27F                 lea     r8, aFxstubbindclas_0 ; "FxStubBindClasses: ClientBindClass %p, "...
.text:000000014000A286                 mov     dword ptr [rsp+48h+var_18], eax
.text:000000014000A28A                 xor     edx, edx        ; Level
.text:000000014000A28C                 mov     rax, [rbx+8]
.text:000000014000A290                 mov     [rsp+48h+var_20], rax
.text:000000014000A295                 mov     [rsp+48h+var_28], rbx
.text:000000014000A29A                 lea     ecx, [rdx+4Dh]  ; ComponentId
.text:000000014000A29D                 call    cs:DbgPrintEx
.text:000000014000A2A4                 nop     dword ptr [rax+rax+00h]
.text:000000014000A2A9
.text:000000014000A2A9 loc_14000A2A9:                          ; CODE XREF: sub_14000A1B8:loc_14000A220↑j
.text:000000014000A2A9                                         ; sub_14000A1B8+15A↓j ...
.text:000000014000A2A9                 mov     eax, edi
.text:000000014000A2AB
.text:000000014000A2AB loc_14000A2AB:                          ; CODE XREF: sub_14000A1B8+59↑j
.text:000000014000A2AB                 mov     rbx, [rsp+48h+arg_0]
.text:000000014000A2B0                 mov     rbp, [rsp+48h+arg_8]
.text:000000014000A2B5                 mov     rsi, [rsp+48h+arg_10]
.text:000000014000A2BA                 mov     rdi, [rsp+48h+arg_18]
.text:000000014000A2BF                 add     rsp, 40h
.text:000000014000A2C3                 pop     r14
.text:000000014000A2C5                 retn
.text:000000014000A2C5 ; ---------------------------------------------------------------------------
.text:000000014000A2C6                 db 0CCh
.text:000000014000A2C7 ; ---------------------------------------------------------------------------
.text:000000014000A2C7
.text:000000014000A2C7 loc_14000A2C7:                          ; CODE XREF: sub_14000A1B8+A1↑j
.text:000000014000A2C7                 mov     rdx, cs:qword_14000D390
.text:000000014000A2CE                 mov     r8, rbx
.text:000000014000A2D1                 mov     rcx, rbp
.text:000000014000A2D4                 call    WdfVersionBindClass
.text:000000014000A2D9                 mov     edi, eax
.text:000000014000A2DB                 test    eax, eax
.text:000000014000A2DD                 js      short loc_14000A2EA
.text:000000014000A2DF
.text:000000014000A2DF loc_14000A2DF:                          ; CODE XREF: sub_14000A1B8+C1↑j
.text:000000014000A2DF                 mov     rbx, rsi
.text:000000014000A2E2                 cmp     rsi, r14
.text:000000014000A2E5                 jmp     loc_14000A220
.text:000000014000A2EA ; ---------------------------------------------------------------------------
.text:000000014000A2EA
.text:000000014000A2EA loc_14000A2EA:                          ; CODE XREF: sub_14000A1B8+125↑j
.text:000000014000A2EA                 mov     rax, [rbx+8]
.text:000000014000A2EE                 lea     r8, aFxstubbindclas_1 ; "FxStubBindClasses: VersionBindClass WDF"...
.text:000000014000A2F5                 xor     edx, edx        ; Level
.text:000000014000A2F7                 mov     dword ptr [rsp+48h+var_20], edi
.text:000000014000A2FB                 mov     r9, rbx
.text:000000014000A2FE                 mov     [rsp+48h+var_28], rax
.text:000000014000A303                 lea     ecx, [rdx+4Dh]  ; ComponentId
.text:000000014000A306                 call    cs:DbgPrintEx
.text:000000014000A30D                 nop     dword ptr [rax+rax+00h]
.text:000000014000A312                 jmp     short loc_14000A2A9
.text:000000014000A314 ; ---------------------------------------------------------------------------
.text:000000014000A314
.text:000000014000A314 loc_14000A314:                          ; CODE XREF: sub_14000A1B8+8D↑j
.text:000000014000A314                 lea     r8, aFxstubbindclas_2 ; "FxStubBindClasses: invalid driver image"...
.text:000000014000A31B                 jmp     short loc_14000A371
.text:000000014000A31D ; ---------------------------------------------------------------------------
.text:000000014000A31D
.text:000000014000A31D loc_14000A31D:                          ; CODE XREF: sub_14000A1B8+80↑j
.text:000000014000A31D                 mov     rax, [rbx+8]
.text:000000014000A321                 lea     rcx, aNull_1    ; "(null)"
.text:000000014000A328                 test    rax, rax
.text:000000014000A32B                 lea     r8, aFxstubbindclas_3 ; "FxStubBindClasses: WDF_CLASS_BIND_INFO "...
.text:000000014000A332                 mov     edi, 0C0000004h
.text:000000014000A337                 mov     r9, rbx
.text:000000014000A33A                 cmovnz  rcx, rax
.text:000000014000A33E                 mov     [rsp+48h+var_10], edi
.text:000000014000A342                 mov     [rsp+48h+var_18], 50h ; 'P'
.text:000000014000A34B                 mov     dword ptr [rsp+48h+var_20], edx
.text:000000014000A34F                 xor     edx, edx        ; Level
.text:000000014000A351                 mov     [rsp+48h+var_28], rcx
.text:000000014000A356                 lea     ecx, [rdx+4Dh]  ; ComponentId
.text:000000014000A359                 call    cs:DbgPrintEx
.text:000000014000A360                 nop     dword ptr [rax+rax+00h]
.text:000000014000A365                 jmp     loc_14000A2A9
.text:000000014000A36A ; ---------------------------------------------------------------------------
.text:000000014000A36A
.text:000000014000A36A loc_14000A36A:                          ; CODE XREF: sub_14000A1B8+75↑j
.text:000000014000A36A                 lea     r8, aFxstubbindclas_4 ; "FxStubBindClasses: invalid driver image"...
.text:000000014000A371
.text:000000014000A371 loc_14000A371:                          ; CODE XREF: sub_14000A1B8+163↑j
.text:000000014000A371                 xor     edx, edx        ; Level
.text:000000014000A373                 lea     ecx, [rdx+4Dh]  ; ComponentId
.text:000000014000A376                 call    cs:DbgPrintEx
.text:000000014000A37D                 nop     dword ptr [rax+rax+00h]
.text:000000014000A382                 jmp     loc_14000A20C
.text:000000014000A382 sub_14000A1B8   endp
.text:000000014000A382
.text:000000014000A382 ; ---------------------------------------------------------------------------
.text:000000014000A387 algn_14000A387:                         ; DATA XREF: .pdata:000000014000E2E8↓o
.text:000000014000A387                 align 8
.text:000000014000A388
.text:000000014000A388 ; =============== S U B R O U T I N E =======================================
.text:000000014000A388
.text:000000014000A388
.text:000000014000A388 ; void *__fastcall sub_14000A388(__int64)
.text:000000014000A388 sub_14000A388   proc near               ; CODE XREF: sub_140009F10+B↑p
.text:000000014000A388                                         ; DATA XREF: .pdata:000000014000E2F4↓o
.text:000000014000A388
.text:000000014000A388 arg_0           = qword ptr  8
.text:000000014000A388
.text:000000014000A388                 mov     [rsp+arg_0], rbx
.text:000000014000A38D                 push    rdi
.text:000000014000A38E                 sub     rsp, 30h
.text:000000014000A392                 mov     rax, cs:off_14000D0B8
.text:000000014000A399                 lea     rbx, byte_14000D0B0
.text:000000014000A3A0                 mov     rdi, rcx
.text:000000014000A3A3                 lea     rcx, unk_14000D0A0
.text:000000014000A3AA                 cmp     rax, rcx
.text:000000014000A3AD                 jz      short loc_14000A3F8
.text:000000014000A3AF                 cmp     rbx, rax
.text:000000014000A3B2                 ja      short loc_14000A3F8
.text:000000014000A3B4
.text:000000014000A3B4 loc_14000A3B4:                          ; CODE XREF: sub_14000A388+6E↓j
.text:000000014000A3B4                 mov     rax, [rbx+40h]
.text:000000014000A3B8                 test    rax, rax
.text:000000014000A3BB                 jz      short loc_14000A3D9
.text:000000014000A3BD                 mov     r8, cs:qword_14000D390
.text:000000014000A3C4                 lea     rcx, WdfVersionUnbindClass
.text:000000014000A3CB                 mov     r9, rbx
.text:000000014000A3CE                 mov     rdx, rdi
.text:000000014000A3D1                 call    cs:__guard_dispatch_icall_fptr
.text:000000014000A3D7                 jmp     short loc_14000A3EB
.text:000000014000A3D9 ; ---------------------------------------------------------------------------
.text:000000014000A3D9
.text:000000014000A3D9 loc_14000A3D9:                          ; CODE XREF: sub_14000A388+33↑j
.text:000000014000A3D9                 mov     rdx, cs:qword_14000D390
.text:000000014000A3E0                 mov     r8, rbx
.text:000000014000A3E3                 mov     rcx, rdi
.text:000000014000A3E6                 call    WdfVersionUnbindClass
.text:000000014000A3EB
.text:000000014000A3EB loc_14000A3EB:                          ; CODE XREF: sub_14000A388+4F↑j
.text:000000014000A3EB                 add     rbx, 50h ; 'P'
.text:000000014000A3EF                 cmp     rbx, cs:off_14000D0B8
.text:000000014000A3F6                 jbe     short loc_14000A3B4
.text:000000014000A3F8
.text:000000014000A3F8 loc_14000A3F8:                          ; CODE XREF: sub_14000A388+25↑j
.text:000000014000A3F8                                         ; sub_14000A388+2A↑j
.text:000000014000A3F8                 mov     rbx, [rsp+38h+arg_0]
.text:000000014000A3FD                 add     rsp, 30h
.text:000000014000A401                 pop     rdi
.text:000000014000A402                 retn
.text:000000014000A402 ; ---------------------------------------------------------------------------
.text:000000014000A403                 align 4
.text:000000014000A403 sub_14000A388   endp
.text:000000014000A403
.text:000000014000A404 ; [00000006 BYTES: COLLAPSED FUNCTION HidP_GetCollectionDescription. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:000000014000A40A ; [00000006 BYTES: COLLAPSED FUNCTION HidP_FreeCollectionDescription. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:000000014000A410 ; [00000006 BYTES: COLLAPSED FUNCTION HidP_GetCaps. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:000000014000A416 ; [00000006 BYTES: COLLAPSED FUNCTION HidP_GetSpecificValueCaps. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:000000014000A41C ; [00000006 BYTES: COLLAPSED FUNCTION HidP_SetUsages. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:000000014000A422 ; [00000006 BYTES: COLLAPSED FUNCTION HidP_GetUsages. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:000000014000A428 ; [00000006 BYTES: COLLAPSED FUNCTION HidP_SetUsageValue. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:000000014000A42E ; [00000006 BYTES: COLLAPSED FUNCTION HidP_GetUsageValue. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:000000014000A434 ; [00000006 BYTES: COLLAPSED FUNCTION WppAutoLogTrace. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:000000014000A43A ; [00000006 BYTES: COLLAPSED FUNCTION WppAutoLogStart. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:000000014000A440 ; [00000006 BYTES: COLLAPSED FUNCTION WppAutoLogStop. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:000000014000A446 ; [00000006 BYTES: COLLAPSED FUNCTION imp_WppRecorderReplay. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:000000014000A44C ; [00000006 BYTES: COLLAPSED FUNCTION WdfVersionBind. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:000000014000A452 ; [00000006 BYTES: COLLAPSED FUNCTION WdfVersionUnbind. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:000000014000A458                 align 20h
.text:000000014000A460 ; [00000006 BYTES: COLLAPSED FUNCTION WdfVersionBindClass. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:000000014000A466                 align 10h
.text:000000014000A470 ; [00000006 BYTES: COLLAPSED FUNCTION WdfVersionUnbindClass. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:000000014000A476                 db 10h dup(0CCh)
.text:000000014000A486                 align 10h
.text:000000014000A490
.text:000000014000A490 ; =============== S U B R O U T I N E =======================================
.text:000000014000A490
.text:000000014000A490
.text:000000014000A490 _guard_dispatch_icall_nop proc near     ; CODE XREF: sub_140001058+13F↑p
.text:000000014000A490                                         ; sub_1400016A8+87↑p ...
.text:000000014000A490                 jmp     rax
.text:000000014000A490 _guard_dispatch_icall_nop endp
.text:000000014000A490
.text:000000014000A490 ; ---------------------------------------------------------------------------
.text:000000014000A492                 db 3 dup(0CCh)
.text:000000014000A495 algn_14000A495:                         ; DATA XREF: .pdata:000000014000E300↓o
.text:000000014000A495                 align 40h
.text:000000014000A4C0
.text:000000014000A4C0 ; =============== S U B R O U T I N E =======================================
.text:000000014000A4C0
.text:000000014000A4C0
.text:000000014000A4C0 ; __m128 *__fastcall sub_14000A4C0(__m128 *, unsigned __int8, unsigned __int64)
.text:000000014000A4C0 sub_14000A4C0   proc near               ; CODE XREF: sub_140001240+62↑p
.text:000000014000A4C0                                         ; sub_140001EE4+F9↑p ...
.text:000000014000A4C0                 mov     rax, rcx
.text:000000014000A4C3                 cmp     r8, 8
.text:000000014000A4C7                 jb      short loc_14000A510
.text:000000014000A4C9                 movzx   edx, dl
.text:000000014000A4CC                 mov     r9, 101010101010101h
.text:000000014000A4D6                 imul    rdx, r9
.text:000000014000A4DA                 cmp     r8, 4Fh ; 'O'
.text:000000014000A4DE                 jnb     short loc_14000A530
.text:000000014000A4E0                 mov     r9, r8
.text:000000014000A4E3                 and     r9, 0FFFFFFFFFFFFFFF8h
.text:000000014000A4E7                 add     rcx, r9
.text:000000014000A4EA                 nop     word ptr [rax+rax+00h]
.text:000000014000A4F0
.text:000000014000A4F0 loc_14000A4F0:                          ; CODE XREF: sub_14000A4C0+39↓j
.text:000000014000A4F0                 mov     [rax+r9-8], rdx
.text:000000014000A4F5                 sub     r9, 8
.text:000000014000A4F9                 jnz     short loc_14000A4F0
.text:000000014000A4FB                 and     r8, 7
.text:000000014000A4FF                 jz      short locret_14000A506
.text:000000014000A501                 mov     [rcx+r8-8], rdx
.text:000000014000A506
.text:000000014000A506 locret_14000A506:                       ; CODE XREF: sub_14000A4C0+3F↑j
.text:000000014000A506                 retn
.text:000000014000A506 ; ---------------------------------------------------------------------------
.text:000000014000A507                 align 10h
.text:000000014000A510
.text:000000014000A510 loc_14000A510:                          ; CODE XREF: sub_14000A4C0+7↑j
.text:000000014000A510                 and     r8, 7
.text:000000014000A514                 jz      short locret_14000A520
.text:000000014000A516
.text:000000014000A516 loc_14000A516:                          ; CODE XREF: sub_14000A4C0+5E↓j
.text:000000014000A516                 mov     [rax+r8-1], dl
.text:000000014000A51B                 dec     r8
.text:000000014000A51E                 jnz     short loc_14000A516
.text:000000014000A520
.text:000000014000A520 locret_14000A520:                       ; CODE XREF: sub_14000A4C0+54↑j
.text:000000014000A520                 retn
.text:000000014000A520 ; ---------------------------------------------------------------------------
.text:000000014000A521                 align 10h
.text:000000014000A530
.text:000000014000A530 loc_14000A530:                          ; CODE XREF: sub_14000A4C0+1E↑j
.text:000000014000A530                 movq    xmm0, rdx
.text:000000014000A535                 movlhps xmm0, xmm0
.text:000000014000A538                 movups  xmmword ptr [rcx], xmm0
.text:000000014000A53B                 add     r8, rcx
.text:000000014000A53E                 add     rcx, 10h
.text:000000014000A542                 and     rcx, 0FFFFFFFFFFFFFFF0h
.text:000000014000A546                 sub     r8, rcx
.text:000000014000A549                 mov     r9, r8
.text:000000014000A54C                 shr     r9, 7
.text:000000014000A550                 jz      short loc_14000A581
.text:000000014000A552
.text:000000014000A552 loc_14000A552:                          ; CODE XREF: sub_14000A4C0+BB↓j
.text:000000014000A552                 movaps  xmmword ptr [rcx], xmm0
.text:000000014000A555                 movaps  xmmword ptr [rcx+10h], xmm0
.text:000000014000A559                 add     rcx, 80h
.text:000000014000A560                 movaps  xmmword ptr [rcx-60h], xmm0
.text:000000014000A564                 movaps  xmmword ptr [rcx-50h], xmm0
.text:000000014000A568                 dec     r9
.text:000000014000A56B                 movaps  xmmword ptr [rcx-40h], xmm0
.text:000000014000A56F                 movaps  xmmword ptr [rcx-30h], xmm0
.text:000000014000A573                 movaps  xmmword ptr [rcx-20h], xmm0
.text:000000014000A577                 movaps  xmmword ptr [rcx-10h], xmm0
.text:000000014000A57B                 jnz     short loc_14000A552
.text:000000014000A57D                 and     r8, 7Fh
.text:000000014000A581
.text:000000014000A581 loc_14000A581:                          ; CODE XREF: sub_14000A4C0+90↑j
.text:000000014000A581                 mov     r9, r8
.text:000000014000A584                 shr     r9, 4
.text:000000014000A588                 jz      short loc_14000A59C
.text:000000014000A58A                 nop     word ptr [rax+rax+00h]
.text:000000014000A590
.text:000000014000A590 loc_14000A590:                          ; CODE XREF: sub_14000A4C0+DA↓j
.text:000000014000A590                 movups  xmmword ptr [rcx], xmm0
.text:000000014000A593                 add     rcx, 10h
.text:000000014000A597                 dec     r9
.text:000000014000A59A                 jnz     short loc_14000A590
.text:000000014000A59C
.text:000000014000A59C loc_14000A59C:                          ; CODE XREF: sub_14000A4C0+C8↑j
.text:000000014000A59C                 and     r8, 0Fh
.text:000000014000A5A0                 jz      short locret_14000A5A8
.text:000000014000A5A2                 movups  xmmword ptr [rcx+r8-10h], xmm0
.text:000000014000A5A8
.text:000000014000A5A8 locret_14000A5A8:                       ; CODE XREF: sub_14000A4C0+E0↑j
.text:000000014000A5A8                 retn
.text:000000014000A5A8 sub_14000A4C0   endp
.text:000000014000A5A8
.text:000000014000A5A8 ; ---------------------------------------------------------------------------
.text:000000014000A5A9 algn_14000A5A9:                         ; DATA XREF: .pdata:000000014000E30C↓o
.text:000000014000A5A9                 align 20h
.text:000000014000A5C0
.text:000000014000A5C0 ; =============== S U B R O U T I N E =======================================
.text:000000014000A5C0
.text:000000014000A5C0
.text:000000014000A5C0 ; __m128 *__fastcall sub_14000A5C0(_OWORD *, char *, unsigned __int64)
.text:000000014000A5C0 sub_14000A5C0   proc near               ; CODE XREF: sub_14000F420+E0↓p
.text:000000014000A5C0                                         ; DATA XREF: .pdata:000000014000E318↓o
.text:000000014000A5C0                 mov     rax, rcx
.text:000000014000A5C3                 cmp     r8, 8
.text:000000014000A5C7                 jb      short loc_14000A600
.text:000000014000A5C9                 cmp     r8, 10h
.text:000000014000A5CD                 ja      short loc_14000A5E0
.text:000000014000A5CF                 mov     r11, [rdx]
.text:000000014000A5D2                 mov     rdx, [rdx+r8-8]
.text:000000014000A5D7                 mov     [rcx], r11
.text:000000014000A5DA                 mov     [rcx+r8-8], rdx
.text:000000014000A5DF                 retn
.text:000000014000A5E0 ; ---------------------------------------------------------------------------
.text:000000014000A5E0
.text:000000014000A5E0 loc_14000A5E0:                          ; CODE XREF: sub_14000A5C0+D↑j
.text:000000014000A5E0                 cmp     r8, 20h ; ' '
.text:000000014000A5E4                 ja      short loc_14000A640
.text:000000014000A5E6                 movups  xmm0, xmmword ptr [rdx]
.text:000000014000A5E9                 movups  xmm1, xmmword ptr [rdx+r8-10h]
.text:000000014000A5EF                 movups  xmmword ptr [rcx], xmm0
.text:000000014000A5F2                 movups  xmmword ptr [rcx+r8-10h], xmm1
.text:000000014000A5F8                 retn
.text:000000014000A5F8 ; ---------------------------------------------------------------------------
.text:000000014000A5F9                 align 20h
.text:000000014000A600
.text:000000014000A600 loc_14000A600:                          ; CODE XREF: sub_14000A5C0+7↑j
.text:000000014000A600                 test    r8, r8
.text:000000014000A603                 jz      short locret_14000A61A
.text:000000014000A605                 sub     rdx, rcx
.text:000000014000A608                 jb      short loc_14000A620
.text:000000014000A60A
.text:000000014000A60A loc_14000A60A:                          ; CODE XREF: sub_14000A5C0+58↓j
.text:000000014000A60A                 mov     r11b, [rcx+rdx]
.text:000000014000A60E                 inc     rcx
.text:000000014000A611                 dec     r8
.text:000000014000A614                 mov     [rcx-1], r11b
.text:000000014000A618                 jnz     short loc_14000A60A
.text:000000014000A61A
.text:000000014000A61A locret_14000A61A:                       ; CODE XREF: sub_14000A5C0+43↑j
.text:000000014000A61A                 retn
.text:000000014000A61A ; ---------------------------------------------------------------------------
.text:000000014000A61B                 align 20h
.text:000000014000A620
.text:000000014000A620 loc_14000A620:                          ; CODE XREF: sub_14000A5C0+48↑j
.text:000000014000A620                 add     rcx, r8
.text:000000014000A623
.text:000000014000A623 loc_14000A623:                          ; CODE XREF: sub_14000A5C0+71↓j
.text:000000014000A623                 mov     r11b, [rcx+rdx-1]
.text:000000014000A628                 dec     rcx
.text:000000014000A62B                 dec     r8
.text:000000014000A62E                 mov     [rcx], r11b
.text:000000014000A631                 jnz     short loc_14000A623
.text:000000014000A633                 retn
.text:000000014000A633 ; ---------------------------------------------------------------------------
.text:000000014000A634                 align 20h
.text:000000014000A640
.text:000000014000A640 loc_14000A640:                          ; CODE XREF: sub_14000A5C0+24↑j
.text:000000014000A640                 lea     r11, [rdx+r8]
.text:000000014000A644                 sub     rdx, rcx
.text:000000014000A647                 jnb     short loc_14000A652
.text:000000014000A649                 cmp     r11, rcx
.text:000000014000A64C                 ja      loc_14000A7C0
.text:000000014000A652
.text:000000014000A652 loc_14000A652:                          ; CODE XREF: sub_14000A5C0+87↑j
.text:000000014000A652                 movups  xmm0, xmmword ptr [rcx+rdx]
.text:000000014000A656                 add     rcx, 10h
.text:000000014000A65A                 test    cl, 0Fh
.text:000000014000A65D                 jz      short loc_14000A671
.text:000000014000A65F                 and     rcx, 0FFFFFFFFFFFFFFF0h
.text:000000014000A663                 movups  xmm1, xmmword ptr [rcx+rdx]
.text:000000014000A667                 movups  xmmword ptr [rax], xmm0
.text:000000014000A66A                 movaps  xmm0, xmm1
.text:000000014000A66D                 add     rcx, 10h
.text:000000014000A671
.text:000000014000A671 loc_14000A671:                          ; CODE XREF: sub_14000A5C0+9D↑j
.text:000000014000A671                 add     r8, rax
.text:000000014000A674                 sub     r8, rcx
.text:000000014000A677                 mov     r9, r8
.text:000000014000A67A                 shr     r9, 6
.text:000000014000A67E                 jz      short loc_14000A6EF
.text:000000014000A680                 cmp     r9, 1000h
.text:000000014000A687                 ja      loc_14000A740
.text:000000014000A68D                 and     r8, 3Fh
.text:000000014000A691                 jmp     short loc_14000A6C0
.text:000000014000A691 ; ---------------------------------------------------------------------------
.text:000000014000A693                 align 40h
.text:000000014000A6C0
.text:000000014000A6C0 loc_14000A6C0:                          ; CODE XREF: sub_14000A5C0+D1↑j
.text:000000014000A6C0                                         ; sub_14000A5C0+12D↓j
.text:000000014000A6C0                 movups  xmm1, xmmword ptr [rcx+rdx]
.text:000000014000A6C4                 movups  xmm2, xmmword ptr [rcx+rdx+10h]
.text:000000014000A6C9                 movups  xmm3, xmmword ptr [rcx+rdx+20h]
.text:000000014000A6CE                 movups  xmm4, xmmword ptr [rcx+rdx+30h]
.text:000000014000A6D3                 movaps  xmmword ptr [rcx-10h], xmm0
.text:000000014000A6D7                 add     rcx, 40h ; '@'
.text:000000014000A6DB                 dec     r9
.text:000000014000A6DE                 movaps  xmmword ptr [rcx-40h], xmm1
.text:000000014000A6E2                 movaps  xmmword ptr [rcx-30h], xmm2
.text:000000014000A6E6                 movaps  xmmword ptr [rcx-20h], xmm3
.text:000000014000A6EA                 movaps  xmm0, xmm4
.text:000000014000A6ED                 jnz     short loc_14000A6C0
.text:000000014000A6EF
.text:000000014000A6EF loc_14000A6EF:                          ; CODE XREF: sub_14000A5C0+BE↑j
.text:000000014000A6EF                                         ; sub_14000A5C0+1F7↓j
.text:000000014000A6EF                 mov     r9, r8
.text:000000014000A6F2                 shr     r9, 4
.text:000000014000A6F6                 jz      short loc_14000A711
.text:000000014000A6F8                 nop     dword ptr [rax+rax+00000000h]
.text:000000014000A700
.text:000000014000A700 loc_14000A700:                          ; CODE XREF: sub_14000A5C0+14F↓j
.text:000000014000A700                 movaps  xmmword ptr [rcx-10h], xmm0
.text:000000014000A704                 movups  xmm0, xmmword ptr [rcx+rdx]
.text:000000014000A708                 add     rcx, 10h
.text:000000014000A70C                 dec     r9
.text:000000014000A70F                 jnz     short loc_14000A700
.text:000000014000A711
.text:000000014000A711 loc_14000A711:                          ; CODE XREF: sub_14000A5C0+136↑j
.text:000000014000A711                 and     r8, 0Fh
.text:000000014000A715                 jz      short loc_14000A725
.text:000000014000A717                 lea     r11, [rcx+r8-10h]
.text:000000014000A71C                 movups  xmm1, xmmword ptr [r11+rdx]
.text:000000014000A721                 movups  xmmword ptr [r11], xmm1
.text:000000014000A725
.text:000000014000A725 loc_14000A725:                          ; CODE XREF: sub_14000A5C0+155↑j
.text:000000014000A725                 movaps  xmmword ptr [rcx-10h], xmm0
.text:000000014000A729                 retn
.text:000000014000A729 ; ---------------------------------------------------------------------------
.text:000000014000A72A                 align 20h
.text:000000014000A740
.text:000000014000A740 loc_14000A740:                          ; CODE XREF: sub_14000A5C0+C7↑j
.text:000000014000A740                 mov     r9, r8
.text:000000014000A743                 shr     r9, 6
.text:000000014000A747                 and     r8, 3Fh
.text:000000014000A74B                 prefetchnta byte ptr [rcx+rdx+40h]
.text:000000014000A750                 jmp     short loc_14000A780
.text:000000014000A750 ; ---------------------------------------------------------------------------
.text:000000014000A752                 align 40h
.text:000000014000A780
.text:000000014000A780 loc_14000A780:                          ; CODE XREF: sub_14000A5C0+190↑j
.text:000000014000A780                                         ; sub_14000A5C0+1F2↓j
.text:000000014000A780                 movups  xmm1, xmmword ptr [rcx+rdx]
.text:000000014000A784                 movups  xmm2, xmmword ptr [rcx+rdx+10h]
.text:000000014000A789                 movups  xmm3, xmmword ptr [rcx+rdx+20h]
.text:000000014000A78E                 movups  xmm4, xmmword ptr [rcx+rdx+30h]
.text:000000014000A793                 movntps xmmword ptr [rcx-10h], xmm0
.text:000000014000A797                 add     rcx, 40h ; '@'
.text:000000014000A79B                 prefetchnta byte ptr [rcx+rdx+40h]
.text:000000014000A7A0                 dec     r9
.text:000000014000A7A3                 movntps xmmword ptr [rcx-40h], xmm1
.text:000000014000A7A7                 movntps xmmword ptr [rcx-30h], xmm2
.text:000000014000A7AB                 movntps xmmword ptr [rcx-20h], xmm3
.text:000000014000A7AF                 movaps  xmm0, xmm4
.text:000000014000A7B2                 jnz     short loc_14000A780
.text:000000014000A7B4                 sfence
.text:000000014000A7B7                 jmp     loc_14000A6EF
.text:000000014000A7B7 ; ---------------------------------------------------------------------------
.text:000000014000A7BC                 align 20h
.text:000000014000A7C0
.text:000000014000A7C0 loc_14000A7C0:                          ; CODE XREF: sub_14000A5C0+8C↑j
.text:000000014000A7C0                 add     rcx, r8
.text:000000014000A7C3                 movups  xmm0, xmmword ptr [rcx+rdx-10h]
.text:000000014000A7C8                 sub     rcx, 10h
.text:000000014000A7CC                 sub     r8, 10h
.text:000000014000A7D0                 test    cl, 0Fh
.text:000000014000A7D3                 jz      short loc_14000A7ED
.text:000000014000A7D5                 mov     r11, rcx
.text:000000014000A7D8                 and     rcx, 0FFFFFFFFFFFFFFF0h
.text:000000014000A7DC                 movups  xmm1, xmmword ptr [rcx+rdx]
.text:000000014000A7E0                 movups  xmmword ptr [r11], xmm0
.text:000000014000A7E4                 movaps  xmm0, xmm1
.text:000000014000A7E7                 mov     r8, rcx
.text:000000014000A7EA                 sub     r8, rax
.text:000000014000A7ED
.text:000000014000A7ED loc_14000A7ED:                          ; CODE XREF: sub_14000A5C0+213↑j
.text:000000014000A7ED                 mov     r9, r8
.text:000000014000A7F0                 shr     r9, 6
.text:000000014000A7F4                 jz      short loc_14000A82F
.text:000000014000A7F6                 and     r8, 3Fh
.text:000000014000A7FA                 jmp     short loc_14000A800
.text:000000014000A7FA ; ---------------------------------------------------------------------------
.text:000000014000A7FC                 align 20h
.text:000000014000A800
.text:000000014000A800 loc_14000A800:                          ; CODE XREF: sub_14000A5C0+23A↑j
.text:000000014000A800                                         ; sub_14000A5C0+26D↓j
.text:000000014000A800                 movups  xmm1, xmmword ptr [rcx+rdx-10h]
.text:000000014000A805                 movups  xmm2, xmmword ptr [rcx+rdx-20h]
.text:000000014000A80A                 movups  xmm3, xmmword ptr [rcx+rdx-30h]
.text:000000014000A80F                 movups  xmm4, xmmword ptr [rcx+rdx-40h]
.text:000000014000A814                 movaps  xmmword ptr [rcx], xmm0
.text:000000014000A817                 sub     rcx, 40h ; '@'
.text:000000014000A81B                 dec     r9
.text:000000014000A81E                 movaps  xmmword ptr [rcx+30h], xmm1
.text:000000014000A822                 movaps  xmmword ptr [rcx+20h], xmm2
.text:000000014000A826                 movaps  xmmword ptr [rcx+10h], xmm3
.text:000000014000A82A                 movaps  xmm0, xmm4
.text:000000014000A82D                 jnz     short loc_14000A800
.text:000000014000A82F
.text:000000014000A82F loc_14000A82F:                          ; CODE XREF: sub_14000A5C0+234↑j
.text:000000014000A82F                 mov     r9, r8
.text:000000014000A832                 shr     r9, 4
.text:000000014000A836                 jz      short loc_14000A851
.text:000000014000A838                 nop     dword ptr [rax+rax+00000000h]
.text:000000014000A840
.text:000000014000A840 loc_14000A840:                          ; CODE XREF: sub_14000A5C0+28F↓j
.text:000000014000A840                 movaps  xmmword ptr [rcx], xmm0
.text:000000014000A843                 movups  xmm0, xmmword ptr [rcx+rdx-10h]
.text:000000014000A848                 sub     rcx, 10h
.text:000000014000A84C                 dec     r9
.text:000000014000A84F                 jnz     short loc_14000A840
.text:000000014000A851
.text:000000014000A851 loc_14000A851:                          ; CODE XREF: sub_14000A5C0+276↑j
.text:000000014000A851                 and     r8, 0Fh
.text:000000014000A855                 jz      short loc_14000A866
.text:000000014000A857                 mov     r11, rcx
.text:000000014000A85A                 sub     r11, r8
.text:000000014000A85D                 movups  xmm1, xmmword ptr [r11+rdx]
.text:000000014000A862                 movups  xmmword ptr [r11], xmm1
.text:000000014000A866
.text:000000014000A866 loc_14000A866:                          ; CODE XREF: sub_14000A5C0+295↑j
.text:000000014000A866                 movaps  xmmword ptr [rcx], xmm0
.text:000000014000A869                 retn
.text:000000014000A869 sub_14000A5C0   endp
.text:000000014000A869
.text:000000014000A869 ; ---------------------------------------------------------------------------
.text:000000014000A86A algn_14000A86A:                         ; DATA XREF: .pdata:000000014000E318↓o
.text:000000014000A86A                 align 10h
.text:000000014000A870 aNull:                                  ; DATA XREF: sub_140001058+1B↑o
.text:000000014000A870                                         ; sub_140005D44+33↑o ...
.text:000000014000A870                 text "UTF-16LE", 'NULL',0
.text:000000014000A87A                 align 20h
.text:000000014000A880 aNull_0         db 'NULL',0             ; DATA XREF: sub_140001058+2A↑o
.text:000000014000A880                                         ; sub_140009A88+2B↑o ...
.text:000000014000A885                 align 10h
.text:000000014000A890 qword_14000A890 dq 0CCCCCCCC00000008h, 0CCCCCCCCCCCCCCCCh
.text:000000014000A890                                         ; DATA XREF: sub_140005E90+27↑o
.text:000000014000A890                                         ; sub_140006018+2A↑o
.text:000000014000A8A0 aRepositorydirS db 'REPOSITORYDIR\sys\Device.cpp',0
.text:000000014000A8A0                                         ; DATA XREF: sub_140001B58+D2↑o
.text:000000014000A8A0                                         ; sub_14000597C+12C↑o
.text:000000014000A8BD                 align 20h
.text:000000014000A8C0 aPdevicecontext:                        ; DATA XREF: sub_140007610+24E↑o
.text:000000014000A8C0                                         ; sub_140007B20+F2↑o
.text:000000014000A8C0                 text "UTF-16LE", 'pDeviceContext->hIncomingQueue != NULL',0
.text:000000014000A90E                 align 10h
.text:000000014000A910 aEvtioread      db 'EvtIoRead',0        ; DATA XREF: sub_140007B20+FF↑o
.text:000000014000A91A                 align 20h
.text:000000014000A920 aEvtiodevicecon db 'EvtIoDeviceControl',0
.text:000000014000A920                                         ; DATA XREF: sub_140007610+25B↑o
.text:000000014000A933                 align 20h
.text:000000014000A940 aIoctlHidGetDri db 'IOCTL_HID_GET_DRIVER_CONFIG',0
.text:000000014000A940                                         ; DATA XREF: sub_140007D50:loc_140007DC8↑o
.text:000000014000A95C                 align 20h
.text:000000014000A960 aIoctlHidSetDri db 'IOCTL_HID_SET_DRIVER_CONFIG',0
.text:000000014000A960                                         ; DATA XREF: sub_140007D50:loc_140007DA8↑o
.text:000000014000A97C                 align 20h
.text:000000014000A980 aIoctlHidGetPol db 'IOCTL_HID_GET_POLL_FREQUENCY_MSEC',0
.text:000000014000A980                                         ; DATA XREF: sub_140007D50:loc_140007DD0↑o
.text:000000014000A9A2                 align 10h
.text:000000014000A9B0 aIoctlHidSetPol db 'IOCTL_HID_SET_POLL_FREQUENCY_MSEC',0
.text:000000014000A9B0                                         ; DATA XREF: sub_140007D50:loc_140007E19↑o
.text:000000014000A9D2                 align 20h
.text:000000014000A9E0 aIoctlGetNumDev db 'IOCTL_GET_NUM_DEVICE_INPUT_BUFFERS',0
.text:000000014000A9E0                                         ; DATA XREF: sub_140007D50:loc_140007E09↑o
.text:000000014000AA03                 align 10h
.text:000000014000AA10 aIoctlSetNumDev db 'IOCTL_SET_NUM_DEVICE_INPUT_BUFFERS',0
.text:000000014000AA10                                         ; DATA XREF: sub_140007D50+A9↑o
.text:000000014000AA33                 align 20h
.text:000000014000AA40 aIoctlHidFlushQ db 'IOCTL_HID_FLUSH_QUEUE',0
.text:000000014000AA40                                         ; DATA XREF: sub_140007D50+48↑o
.text:000000014000AA56                 align 20h
.text:000000014000AA60 aIoctlHidSetFea db 'IOCTL_HID_SET_FEATURE',0
.text:000000014000AA60                                         ; DATA XREF: sub_140007D50:loc_140007DC0↑o
.text:000000014000AA76                 align 20h
.text:000000014000AA80 aIoctlHidSetOut db 'IOCTL_HID_SET_OUTPUT_REPORT',0
.text:000000014000AA80                                         ; DATA XREF: sub_140007D50:loc_140007DA0↑o
.text:000000014000AA9C                 align 20h
.text:000000014000AAA0 aIoctlHidGetFea db 'IOCTL_HID_GET_FEATURE',0
.text:000000014000AAA0                                         ; DATA XREF: sub_140007D50:loc_140007DB8↑o
.text:000000014000AAB6                 align 20h
.text:000000014000AAC0 aIoctlGetPhysic db 'IOCTL_GET_PHYSICAL_DESCRIPTOR',0
.text:000000014000AAC0                                         ; DATA XREF: sub_140007D50:loc_140007E21↑o
.text:000000014000AADE                 align 20h
.text:000000014000AAE0 aIoctlHidGetHar db 'IOCTL_HID_GET_HARDWARE_ID',0
.text:000000014000AAE0                                         ; DATA XREF: sub_140007D50:loc_140007E11↑o
.text:000000014000AAFA                 align 20h
.text:000000014000AB00 aIoctlHidGetMan db 'IOCTL_HID_GET_MANUFACTURER_STRING',0
.text:000000014000AB00                                         ; DATA XREF: sub_140007D50:loc_140007E8F↑o
.text:000000014000AB22                 align 10h
.text:000000014000AB30 aIoctlHidGetPro db 'IOCTL_HID_GET_PRODUCT_STRING',0
.text:000000014000AB30                                         ; DATA XREF: sub_140007D50:loc_140007E87↑o
.text:000000014000AB4D                 align 10h
.text:000000014000AB50 aIoctlHidGetSer db 'IOCTL_HID_GET_SERIALNUMBER_STRING',0
.text:000000014000AB50                                         ; DATA XREF: sub_140007D50:loc_140007E7F↑o
.text:000000014000AB72                 align 20h
.text:000000014000AB80 aIoctlHidGetInd db 'IOCTL_HID_GET_INDEXED_STRING',0
.text:000000014000AB80                                         ; DATA XREF: sub_140007D50:loc_140007E77↑o
.text:000000014000AB9D                 align 20h
.text:000000014000ABA0 aIoctlHidGetMsG db 'IOCTL_HID_GET_MS_GENRE_DESCRIPTOR',0
.text:000000014000ABA0                                         ; DATA XREF: sub_140007D50:loc_140007E6F↑o
.text:000000014000ABC2                 align 10h
.text:000000014000ABD0 aIoctlHidEnable db 'IOCTL_HID_ENABLE_SECURE_READ',0
.text:000000014000ABD0                                         ; DATA XREF: sub_140007D50:loc_140007E67↑o
.text:000000014000ABED                 align 10h
.text:000000014000ABF0 aIoctlHidDisabl db 'IOCTL_HID_DISABLE_SECURE_READ',0
.text:000000014000ABF0                                         ; DATA XREF: sub_140007D50:loc_140007E5F↑o
.text:000000014000AC0E                 align 10h
.text:000000014000AC10 aIoctlHidGetCol db 'IOCTL_HID_GET_COLLECTION_INFORMATION',0
.text:000000014000AC10                                         ; DATA XREF: sub_140007D50:loc_140007E29↑o
.text:000000014000AC35                 align 20h
.text:000000014000AC40 aIoctlHidGetCol_0 db 'IOCTL_HID_GET_COLLECTION_DESCRIPTOR',0
.text:000000014000AC40                                         ; DATA XREF: sub_140007D50:loc_140007DB0↑o
.text:000000014000AC64                 align 10h
.text:000000014000AC70 aIoctlHidGetInp db 'IOCTL_HID_GET_INPUT_REPORT',0
.text:000000014000AC70                                         ; DATA XREF: sub_140007D50:loc_140007E01↑o
.text:000000014000AC8B                 align 10h
.text:000000014000AC90 aUnknown        db 'Unknown',0          ; DATA XREF: sub_140007D50:loc_140007E57↑o
.text:000000014000AC98                 align 200h
.text:000000014000AE00                 dq 40h dup(?)
.text:000000014000AE00 _text           ends
.text:000000014000AE00
.idata:000000014000B000 ; Section 2. (virtual address 0000B000)
.idata:000000014000B000 ; Virtual size                  : 0000121C (   4636.)
.idata:000000014000B000 ; Section size in file          : 00001400 (   5120.)
.idata:000000014000B000 ; Offset to raw data for section: 0000A200
.idata:000000014000B000 ; Flags 48000040: Data Not pageable Readable
.idata:000000014000B000 ; Alignment     : default
.idata:000000014000B000 ;
.idata:000000014000B000 ; Imports from HIDPARSE.SYS
.idata:000000014000B000 ;
.idata:000000014000B000 ; ===========================================================================
.idata:000000014000B000
.idata:000000014000B000 ; Segment type: Externs
.idata:000000014000B000 ; _idata
.idata:000000014000B000 ; NTSTATUS (__stdcall *HidP_GetCaps)(PHIDP_PREPARSED_DATA PreparsedData, PHIDP_CAPS Capabilities)
.idata:000000014000B000                 extrn __imp_HidP_GetCaps:qword
.idata:000000014000B000                                         ; DATA XREF: HidP_GetCaps↑r
.idata:000000014000B000                                         ; INIT:0000000140010254↓o
.idata:000000014000B008 ; void (__stdcall *HidP_FreeCollectionDescription)(PHIDP_DEVICE_DESC DeviceDescription)
.idata:000000014000B008                 extrn __imp_HidP_FreeCollectionDescription:qword
.idata:000000014000B008                                         ; DATA XREF: HidP_FreeCollectionDescription↑r
.idata:000000014000B010 ; NTSTATUS (__stdcall *HidP_GetSpecificValueCaps)(HIDP_REPORT_TYPE ReportType, USAGE UsagePage, USHORT LinkCollection, USAGE Usage, PHIDP_VALUE_CAPS ValueCaps, PUSHORT ValueCapsLength, PHIDP_PREPARSED_DATA PreparsedData)
.idata:000000014000B010                 extrn __imp_HidP_GetSpecificValueCaps:qword
.idata:000000014000B010                                         ; DATA XREF: HidP_GetSpecificValueCaps↑r
.idata:000000014000B018 ; NTSTATUS (__stdcall *HidP_SetUsages)(HIDP_REPORT_TYPE ReportType, USAGE UsagePage, USHORT LinkCollection, PUSAGE UsageList, PULONG UsageLength, PHIDP_PREPARSED_DATA PreparsedData, PCHAR Report, ULONG ReportLength)
.idata:000000014000B018                 extrn __imp_HidP_SetUsages:qword
.idata:000000014000B018                                         ; DATA XREF: HidP_SetUsages↑r
.idata:000000014000B020 ; NTSTATUS (__stdcall *HidP_GetUsages)(HIDP_REPORT_TYPE ReportType, USAGE UsagePage, USHORT LinkCollection, PUSAGE UsageList, PULONG UsageLength, PHIDP_PREPARSED_DATA PreparsedData, PCHAR Report, ULONG ReportLength)
.idata:000000014000B020                 extrn __imp_HidP_GetUsages:qword
.idata:000000014000B020                                         ; DATA XREF: HidP_GetUsages↑r
.idata:000000014000B028 ; NTSTATUS (__stdcall *HidP_SetUsageValue)(HIDP_REPORT_TYPE ReportType, USAGE UsagePage, USHORT LinkCollection, USAGE Usage, ULONG UsageValue, PHIDP_PREPARSED_DATA PreparsedData, PCHAR Report, ULONG ReportLength)
.idata:000000014000B028                 extrn __imp_HidP_SetUsageValue:qword
.idata:000000014000B028                                         ; DATA XREF: HidP_SetUsageValue↑r
.idata:000000014000B030 ; NTSTATUS (__stdcall *HidP_GetUsageValue)(HIDP_REPORT_TYPE ReportType, USAGE UsagePage, USHORT LinkCollection, USAGE Usage, PULONG UsageValue, PHIDP_PREPARSED_DATA PreparsedData, PCHAR Report, ULONG ReportLength)
.idata:000000014000B030                 extrn __imp_HidP_GetUsageValue:qword
.idata:000000014000B030                                         ; DATA XREF: HidP_GetUsageValue↑r
.idata:000000014000B038 ; NTSTATUS (__stdcall *HidP_GetCollectionDescription)(PHIDP_REPORT_DESCRIPTOR ReportDesc, ULONG DescLength, POOL_TYPE PoolType, PHIDP_DEVICE_DESC DeviceDescription)
.idata:000000014000B038                 extrn __imp_HidP_GetCollectionDescription:qword
.idata:000000014000B038                                         ; DATA XREF: HidP_GetCollectionDescription↑r
.idata:000000014000B040
.idata:000000014000B048 ;
.idata:000000014000B048 ; Imports from WDFLDR.SYS
.idata:000000014000B048 ;
.idata:000000014000B048                 extrn __imp_WdfVersionBindClass:qword
.idata:000000014000B048                                         ; DATA XREF: WdfVersionBindClass↑r
.idata:000000014000B048                                         ; INIT:000000014001027C↓o
.idata:000000014000B050                 extrn __imp_WdfVersionUnbind:qword
.idata:000000014000B050                                         ; DATA XREF: WdfVersionUnbind↑r
.idata:000000014000B058                 extrn __imp_WdfVersionUnbindClass:qword
.idata:000000014000B058                                         ; DATA XREF: WdfVersionUnbindClass↑r
.idata:000000014000B060                 extrn __imp_WdfVersionBind:qword
.idata:000000014000B060                                         ; DATA XREF: WdfVersionBind↑r
.idata:000000014000B068
.idata:000000014000B070 ;
.idata:000000014000B070 ; Imports from WppRecorder.sys
.idata:000000014000B070 ;
.idata:000000014000B070                 extrn __imp_imp_WppRecorderReplay:qword
.idata:000000014000B070                                         ; DATA XREF: imp_WppRecorderReplay↑r
.idata:000000014000B070                                         ; INIT:0000000140010268↓o
.idata:000000014000B078                 extrn __imp_WppAutoLogStop:qword
.idata:000000014000B078                                         ; DATA XREF: WppAutoLogStop↑r
.idata:000000014000B080                 extrn __imp_WppAutoLogStart:qword
.idata:000000014000B080                                         ; DATA XREF: WppAutoLogStart↑r
.idata:000000014000B088                 extrn __imp_WppAutoLogTrace:qword
.idata:000000014000B088                                         ; DATA XREF: WppAutoLogTrace↑r
.idata:000000014000B090
.idata:000000014000B098 ;
.idata:000000014000B098 ; Imports from ntoskrnl.exe
.idata:000000014000B098 ;
.idata:000000014000B098 ; void (__stdcall *RtlInitUnicodeString)(PUNICODE_STRING DestinationString, PCWSTR SourceString)
.idata:000000014000B098                 extrn RtlInitUnicodeString:qword
.idata:000000014000B098                                         ; CODE XREF: sub_14000F308+26↓p
.idata:000000014000B098                                         ; sub_14000F308+48↓p ...
.idata:000000014000B0A0 ; POBJECT_TYPE *PsThreadType
.idata:000000014000B0A0                 extrn PsThreadType:qword
.idata:000000014000B0A0                                         ; DATA XREF: DoScreenSave+459↑r
.idata:000000014000B0A0                                         ; DoScreenSave+58B↑r
.idata:000000014000B0A8 ; NTSTATUS (__stdcall *ZwClose)(HANDLE Handle)
.idata:000000014000B0A8                 extrn ZwClose:qword     ; CODE XREF: DoScreenSave+4C8↑p
.idata:000000014000B0A8                                         ; DoScreenSave+4F3↑p ...
.idata:000000014000B0B0 ; PVOID (__stdcall *MmGetSystemRoutineAddress)(PUNICODE_STRING SystemRoutineName)
.idata:000000014000B0B0                 extrn MmGetSystemRoutineAddress:qword
.idata:000000014000B0B0                                         ; CODE XREF: sub_14000F308+30↓p
.idata:000000014000B0B0                                         ; sub_14000F308+52↓p ...
.idata:000000014000B0B8 ; NTSTATUS (__stdcall *ObReferenceObjectByHandle)(HANDLE Handle, ACCESS_MASK DesiredAccess, POBJECT_TYPE ObjectType, KPROCESSOR_MODE AccessMode, PVOID *Object, POBJECT_HANDLE_INFORMATION HandleInformation)
.idata:000000014000B0B8                 extrn ObReferenceObjectByHandle:qword
.idata:000000014000B0B8                                         ; CODE XREF: DoScreenSave+47F↑p
.idata:000000014000B0B8                                         ; DoScreenSave+5B1↑p
.idata:000000014000B0B8                                         ; DATA XREF: ...
.idata:000000014000B0C0 ; NTSTATUS (__stdcall *IoUnregisterPlugPlayNotification)(PVOID NotificationEntry)
.idata:000000014000B0C0                 extrn IoUnregisterPlugPlayNotification:qword
.idata:000000014000B0C0                                         ; CODE XREF: sub_140001B58+96↑p
.idata:000000014000B0C0                                         ; DATA XREF: sub_140001B58+96↑r
.idata:000000014000B0C8 ; NTSTATUS (__stdcall *IoRegisterPlugPlayNotification)(IO_NOTIFICATION_EVENT_CATEGORY EventCategory, ULONG EventCategoryFlags, PVOID EventCategoryData, PDRIVER_OBJECT DriverObject, PDRIVER_NOTIFICATION_CALLBACK_ROUTINE CallbackRoutine, PVOID Context, PVOID *NotificationEntry)
.idata:000000014000B0C8                 extrn IoRegisterPlugPlayNotification:qword
.idata:000000014000B0C8                                         ; CODE XREF: sub_14000597C+DF↑p
.idata:000000014000B0C8                                         ; DATA XREF: sub_14000597C+DF↑r
.idata:000000014000B0D0 ; NTSTATUS (__stdcall *KeWaitForMultipleObjects)(ULONG Count, PVOID Object[], WAIT_TYPE WaitType, KWAIT_REASON WaitReason, KPROCESSOR_MODE WaitMode, BOOLEAN Alertable, PLARGE_INTEGER Timeout, PKWAIT_BLOCK WaitBlockArray)
.idata:000000014000B0D0                 extrn KeWaitForMultipleObjects:qword
.idata:000000014000B0D0                                         ; CODE XREF: sub_140008B90+132↑p
.idata:000000014000B0D0                                         ; sub_140008B90+1FE↑p ...
.idata:000000014000B0D8 ; NTSTATUS (__stdcall *IoWMIRegistrationControl)(PDEVICE_OBJECT DeviceObject, ULONG Action)
.idata:000000014000B0D8                 extrn IoWMIRegistrationControl:qword
.idata:000000014000B0D8                                         ; CODE XREF: sub_14000F1A0+3D↓p
.idata:000000014000B0D8                                         ; sub_14000F240+93↓p
.idata:000000014000B0D8                                         ; DATA XREF: ...
.idata:000000014000B0E0 ; void (__stdcall *KeClearEvent)(PRKEVENT Event)
.idata:000000014000B0E0                 extrn KeClearEvent:qword
.idata:000000014000B0E0                                         ; CODE XREF: sub_14000190C+A1↑p
.idata:000000014000B0E0                                         ; sub_14000190C+112↑p ...
.idata:000000014000B0E8 ; NTSTATUS (__stdcall *PsTerminateSystemThread)(NTSTATUS ExitStatus)
.idata:000000014000B0E8                 extrn PsTerminateSystemThread:qword
.idata:000000014000B0E8                                         ; CODE XREF: sub_140008B90+35D↑p
.idata:000000014000B0E8                                         ; StartRoutine+3B8↑p
.idata:000000014000B0E8                                         ; DATA XREF: ...
.idata:000000014000B0F0 ; LONG_PTR (__stdcall *ObfDereferenceObject)(PVOID Object)
.idata:000000014000B0F0                 extrn ObfDereferenceObject:qword
.idata:000000014000B0F0                                         ; CODE XREF: sub_140002DF0+12D↑p
.idata:000000014000B0F0                                         ; sub_140002DF0+190↑p
.idata:000000014000B0F0                                         ; DATA XREF: ...
.idata:000000014000B0F8 ; void (__stdcall *RtlCopyUnicodeString)(PUNICODE_STRING DestinationString, PCUNICODE_STRING SourceString)
.idata:000000014000B0F8                 extrn RtlCopyUnicodeString:qword
.idata:000000014000B0F8                                         ; CODE XREF: sub_140009F6C+59↑p
.idata:000000014000B0F8                                         ; DATA XREF: sub_140009F6C+59↑r
.idata:000000014000B100 ; ULONG (*DbgPrintEx)(ULONG ComponentId, ULONG Level, PCSTR Format, ...)
.idata:000000014000B100                 extrn DbgPrintEx:qword  ; CODE XREF: sub_140009F6C+D9↑p
.idata:000000014000B100                                         ; sub_14000A100+37↑p ...
.idata:000000014000B108 ; NTSTATUS (__stdcall *PsCreateSystemThread)(PHANDLE ThreadHandle, ULONG DesiredAccess, POBJECT_ATTRIBUTES ObjectAttributes, HANDLE ProcessHandle, PCLIENT_ID ClientId, PKSTART_ROUTINE StartRoutine, PVOID StartContext)
.idata:000000014000B108                 extrn PsCreateSystemThread:qword
.idata:000000014000B108                                         ; CODE XREF: DoScreenSave+432↑p
.idata:000000014000B108                                         ; DoScreenSave+564↑p
.idata:000000014000B108                                         ; DATA XREF: ...
.idata:000000014000B110 ; NTSTATUS (__stdcall *KeWaitForSingleObject)(PVOID Object, KWAIT_REASON WaitReason, KPROCESSOR_MODE WaitMode, BOOLEAN Alertable, PLARGE_INTEGER Timeout)
.idata:000000014000B110                 extrn KeWaitForSingleObject:qword
.idata:000000014000B110                                         ; CODE XREF: sub_140002DF0+E9↑p
.idata:000000014000B110                                         ; sub_140002DF0+14C↑p ...
.idata:000000014000B118 ; LONG (__stdcall *KeSetEvent)(PRKEVENT Event, KPRIORITY Increment, BOOLEAN Wait)
.idata:000000014000B118                 extrn KeSetEvent:qword  ; CODE XREF: sub_140002DF0+CA↑p
.idata:000000014000B118                                         ; sub_140004958+2EC↑p ...
.idata:000000014000B120 ; void (__stdcall *KeInitializeEvent)(PRKEVENT Event, EVENT_TYPE Type, BOOLEAN State)
.idata:000000014000B120                 extrn KeInitializeEvent:qword
.idata:000000014000B120                                         ; CODE XREF: DoScreenSave+367↑p
.idata:000000014000B120                                         ; DoScreenSave+379↑p ...
.idata:000000014000B128
.idata:000000014000B128
.rdata:000000014000B130 ; ===========================================================================
.rdata:000000014000B130
.rdata:000000014000B130 ; Segment type: Pure data
.rdata:000000014000B130 ; Segment permissions: Read
.rdata:000000014000B130 _rdata          segment para public 'DATA' use64
.rdata:000000014000B130                 assume cs:_rdata
.rdata:000000014000B130                 ;org 14000B130h
.rdata:000000014000B130 __guard_check_icall_fptr dq offset _guard_check_icall_nop
.rdata:000000014000B130                                         ; DATA XREF: .rdata:000000014000B7E0↓o
.rdata:000000014000B138 __guard_dispatch_icall_fptr dq offset _guard_dispatch_icall_nop
.rdata:000000014000B138                                         ; DATA XREF: sub_140001058+13F↑r
.rdata:000000014000B138                                         ; sub_1400016A8+87↑r ...
.rdata:000000014000B140 __guard_fids_table dd rva sub_140002830 ; DATA XREF: .rdata:000000014000B7F0↓o
.rdata:000000014000B144                 dd rva sub_140002950
.rdata:000000014000B148                 dd rva sub_140002C50
.rdata:000000014000B14C                 dd rva sub_140002DF0
.rdata:000000014000B150                 dd rva sub_140002FE0
.rdata:000000014000B154                 dd rva sub_140003290
.rdata:000000014000B158                 dd rva CallbackRoutine
.rdata:000000014000B15C                 dd rva sub_1400063F0
.rdata:000000014000B160                 dd rva sub_1400065E0
.rdata:000000014000B164                 dd rva sub_140006D60
.rdata:000000014000B168                 dd rva sub_140007610
.rdata:000000014000B16C                 dd rva sub_140007B20
.rdata:000000014000B170                 dd rva sub_140008B90
.rdata:000000014000B174                 dd rva StartRoutine
.rdata:000000014000B178                 dd rva _guard_check_icall_nop
.rdata:000000014000B17C                 dd rva __report_gsfailure
.rdata:000000014000B180                 dd rva DriverEntry
.rdata:000000014000B184                 dd rva sub_14000A0C0
.rdata:000000014000B188                 dd rva sub_14000A0D0
.rdata:000000014000B18C                 dd rva WdfVersionBindClass
.rdata:000000014000B190                 dd rva WdfVersionUnbindClass
.rdata:000000014000B194                 dd rva sub_14000F000
.rdata:000000014000B198                 dd rva sub_14000F0C0
.rdata:000000014000B19C                 dd rva sub_14000F420
.rdata:000000014000B1A0 unk_14000B1A0   db 0A2h                 ; DATA XREF: sub_140010000+33↓o
.rdata:000000014000B1A1                 db 0AEh
.rdata:000000014000B1A2                 db  7Fh ; 
.rdata:000000014000B1A3                 db 0C1h
.rdata:000000014000B1A4                 db  33h ; 3
.rdata:000000014000B1A5                 db  2Bh ; +
.rdata:000000014000B1A6                 db  7Fh ; 
.rdata:000000014000B1A7                 db  4Fh ; O
.rdata:000000014000B1A8                 db 0B2h
.rdata:000000014000B1A9                 db 0C8h
.rdata:000000014000B1AA                 db  57h ; W
.rdata:000000014000B1AB                 db  35h ; 5
.rdata:000000014000B1AC                 db 0A0h
.rdata:000000014000B1AD                 db 0ECh
.rdata:000000014000B1AE                 db  88h
.rdata:000000014000B1AF                 db  0Ch
.rdata:000000014000B1B0 unk_14000B1B0   db  8Bh                 ; DATA XREF: sub_140001000+2F↑o
.rdata:000000014000B1B1                 db 0BFh
.rdata:000000014000B1B2                 db  7Ah ; z
.rdata:000000014000B1B3                 db 0DAh
.rdata:000000014000B1B4                 db  97h
.rdata:000000014000B1B5                 db 0B5h
.rdata:000000014000B1B6                 db  19h
.rdata:000000014000B1B7                 db  32h ; 2
.rdata:000000014000B1B8                 db  24h ; $
.rdata:000000014000B1B9                 db 0E7h
.rdata:000000014000B1BA                 db 0C9h
.rdata:000000014000B1BB                 db    2
.rdata:000000014000B1BC                 db 0CFh
.rdata:000000014000B1BD                 db  52h ; R
.rdata:000000014000B1BE                 db  46h ; F
.rdata:000000014000B1BF                 db  2Bh ; +
.rdata:000000014000B1C0 unk_14000B1C0   db  30h ; 0             ; DATA XREF: sub_140001240+20↑o
.rdata:000000014000B1C0                                         ; sub_1400012E8+4B↑o ...
.rdata:000000014000B1C1                 db 0B5h
.rdata:000000014000B1C2                 db  7Fh ; 
.rdata:000000014000B1C3                 db  73h ; s
.rdata:000000014000B1C4                 db 0A8h
.rdata:000000014000B1C5                 db 0E6h
.rdata:000000014000B1C6                 db  8Bh
.rdata:000000014000B1C7                 db  3Fh ; ?
.rdata:000000014000B1C8                 db 0D8h
.rdata:000000014000B1C9                 db  57h ; W
.rdata:000000014000B1CA                 db  44h ; D
.rdata:000000014000B1CB                 db  50h ; P
.rdata:000000014000B1CC                 db  86h
.rdata:000000014000B1CD                 db  27h ; '
.rdata:000000014000B1CE                 db  34h ; 4
.rdata:000000014000B1CF                 db 0B6h
.rdata:000000014000B1D0 aXphysicalmax:                          ; DATA XREF: .rdata:000000014000B1F8↓o
.rdata:000000014000B1D0                 text "UTF-16LE", 'XPhysicalMax',0
.rdata:000000014000B1EA                 db    0
.rdata:000000014000B1EB                 db    0
.rdata:000000014000B1EC                 db    0
.rdata:000000014000B1ED                 db    0
.rdata:000000014000B1EE                 db    0
.rdata:000000014000B1EF                 db    0
.rdata:000000014000B1F0 ; unsigned __int16 word_14000B1F0[4]
.rdata:000000014000B1F0 word_14000B1F0  dw 18h, 1Ah, 2 dup(0)   ; DATA XREF: sub_140004958+1F6↑o
.rdata:000000014000B1F0                                         ; sub_1400057AC+84↑o
.rdata:000000014000B1F8                 dq offset aXphysicalmax ; "XPhysicalMax"
.rdata:000000014000B200 aXlogicalmax:                           ; DATA XREF: .rdata:000000014000B220↓o
.rdata:000000014000B200                 text "UTF-16LE", 'XLogicalMax',0
.rdata:000000014000B218 ; unsigned __int16 word_14000B218[4]
.rdata:000000014000B218 word_14000B218  dw 16h, 18h, 2 dup(0)   ; DATA XREF: sub_140004958+234↑o
.rdata:000000014000B218                                         ; sub_1400057AC+DD↑o
.rdata:000000014000B220                 dq offset aXlogicalmax  ; "XLogicalMax"
.rdata:000000014000B228 aYphysicalmax:                          ; DATA XREF: .rdata:000000014000B250↓o
.rdata:000000014000B228                 text "UTF-16LE", 'YPhysicalMax',0
.rdata:000000014000B242                 align 8
.rdata:000000014000B248 ; unsigned __int16 word_14000B248[4]
.rdata:000000014000B248 word_14000B248  dw 18h, 1Ah, 2 dup(0)   ; DATA XREF: sub_140004958+26E↑o
.rdata:000000014000B248                                         ; sub_1400057AC+108↑o
.rdata:000000014000B250                 dq offset aYphysicalmax ; "YPhysicalMax"
.rdata:000000014000B258 aYlogicalmax:                           ; DATA XREF: .rdata:000000014000B278↓o
.rdata:000000014000B258                 text "UTF-16LE", 'YLogicalMax',0
.rdata:000000014000B270 ; unsigned __int16 word_14000B270[4]
.rdata:000000014000B270 word_14000B270  dw 16h, 18h, 2 dup(0)   ; DATA XREF: sub_140004958+2A8↑o
.rdata:000000014000B270                                         ; sub_1400057AC+136↑o
.rdata:000000014000B278                 dq offset aYlogicalmax  ; "YLogicalMax"
.rdata:000000014000B280 qword_14000B280 dq 11D046F0CB3A4004h    ; DATA XREF: CallbackRoutine+B7↑r
.rdata:000000014000B288 qword_14000B288 dq 3F05139760008FB0h    ; DATA XREF: CallbackRoutine+C8↑r
.rdata:000000014000B290 unk_14000B290   db 0B2h                 ; DATA XREF: sub_14000597C+C0↑o
.rdata:000000014000B291                 db  55h ; U
.rdata:000000014000B292                 db  1Eh
.rdata:000000014000B293                 db  4Dh ; M
.rdata:000000014000B294                 db  6Fh ; o
.rdata:000000014000B295                 db 0F1h
.rdata:000000014000B296                 db 0CFh
.rdata:000000014000B297                 db  11h
.rdata:000000014000B298                 db  88h
.rdata:000000014000B299                 db 0CBh
.rdata:000000014000B29A                 db    0
.rdata:000000014000B29B                 db  11h
.rdata:000000014000B29C                 db  11h
.rdata:000000014000B29D                 db    0
.rdata:000000014000B29E                 db    0
.rdata:000000014000B29F                 db  30h ; 0
.rdata:000000014000B2A0 aDeviceContext  db 'DEVICE_CONTEXT',0   ; DATA XREF: .data:000000014000D018↓o
.rdata:000000014000B2AF                 db    0
.rdata:000000014000B2B0 aRequestContext db 'REQUEST_CONTEXT',0  ; DATA XREF: .data:000000014000D040↓o
.rdata:000000014000B2C0 unk_14000B2C0   db  76h ; v             ; DATA XREF: sub_140001840+28↑o
.rdata:000000014000B2C0                                         ; sub_14000190C+2E↑o ...
.rdata:000000014000B2C1                 db 0BEh
.rdata:000000014000B2C2                 db  76h ; v
.rdata:000000014000B2C3                 db    7
.rdata:000000014000B2C4                 db  74h ; t
.rdata:000000014000B2C5                 db  28h ; (
.rdata:000000014000B2C6                 db  5Bh ; [
.rdata:000000014000B2C7                 db  3Eh ; >
.rdata:000000014000B2C8                 db  22h ; "
.rdata:000000014000B2C9                 db  8Eh
.rdata:000000014000B2CA                 db  7Dh ; }
.rdata:000000014000B2CB                 db  6Ch ; l
.rdata:000000014000B2CC                 db 0E1h
.rdata:000000014000B2CD                 db 0F1h
.rdata:000000014000B2CE                 db 0D8h
.rdata:000000014000B2CF                 db  50h ; P
.rdata:000000014000B2D0 unk_14000B2D0   db  55h ; U             ; DATA XREF: sub_14000F000+29↓o
.rdata:000000014000B2D0                                         ; sub_14000F0C0+28↓o ...
.rdata:000000014000B2D1                 db  37h ; 7
.rdata:000000014000B2D2                 db    9
.rdata:000000014000B2D3                 db  2Ah ; *
.rdata:000000014000B2D4                 db  4Fh ; O
.rdata:000000014000B2D5                 db  9Bh
.rdata:000000014000B2D6                 db  6Bh ; k
.rdata:000000014000B2D7                 db  35h ; 5
.rdata:000000014000B2D8                 db 0D1h
.rdata:000000014000B2D9                 db  2Bh ; +
.rdata:000000014000B2DA                 db 0C6h
.rdata:000000014000B2DB                 db  10h
.rdata:000000014000B2DC                 db 0BEh
.rdata:000000014000B2DD                 db 0E8h
.rdata:000000014000B2DE                 db  11h
.rdata:000000014000B2DF                 db  23h ; #
.rdata:000000014000B2E0 unk_14000B2E0   db 0D1h                 ; DATA XREF: sub_140006434+3E↑o
.rdata:000000014000B2E0                                         ; sub_1400065E0+56↑o ...
.rdata:000000014000B2E1                 db  36h ; 6
.rdata:000000014000B2E2                 db    8
.rdata:000000014000B2E3                 db 0E0h
.rdata:000000014000B2E4                 db 0AEh
.rdata:000000014000B2E5                 db 0BEh
.rdata:000000014000B2E6                 db  44h ; D
.rdata:000000014000B2E7                 db  34h ; 4
.rdata:000000014000B2E8                 db  1Ch
.rdata:000000014000B2E9                 db  5Ch ; \
.rdata:000000014000B2EA                 db  5Fh ; _
.rdata:000000014000B2EB                 db  8Ah
.rdata:000000014000B2EC                 db  22h ; "
.rdata:000000014000B2ED                 db 0D0h
.rdata:000000014000B2EE                 db 0DDh
.rdata:000000014000B2EF                 db    5
.rdata:000000014000B2F0 aKmdflibrary:                           ; DATA XREF: .data:000000014000D078↓o
.rdata:000000014000B2F0                 text "UTF-16LE", 'KmdfLibrary',0
.rdata:000000014000B308 ; const CHAR Format[]
.rdata:000000014000B308 Format          db 'DriverEntry failed 0x%x for driver %wZ',0Ah,0
.rdata:000000014000B308                                         ; DATA XREF: sub_140009F6C+CF↑o
.rdata:000000014000B330 ; const CHAR aFxstubinittype[]
.rdata:000000014000B330 aFxstubinittype db 'FxStubInitTypes: invalid driver image, the address of symbol __KM'
.rdata:000000014000B330                                         ; DATA XREF: sub_14000A100+1F↑o
.rdata:000000014000B330                 db 'DF_TYPE_INIT_START 0x%p is greater than the address of symbol __K'
.rdata:000000014000B330                 db 'MDF_TYPE_INIT_END 0x%p, status 0x%x',0Ah,0
.rdata:000000014000B3D7                 align 20h
.rdata:000000014000B3E0 ; const CHAR aFxstubinittype_0[]
.rdata:000000014000B3E0 aFxstubinittype_0 db 'FxStubInitTypes: WDF_OBJECT_CONTEXT_TYPE_INFO 0x%p, size 0x%x inc'
.rdata:000000014000B3E0                                         ; DATA XREF: sub_14000A100+83↑o
.rdata:000000014000B3E0                 db 'orrect, expected 0x%x, status 0x%x',0Ah,0
.rdata:000000014000B445                 align 10h
.rdata:000000014000B450 ; const CHAR aFxstubbindclas[]
.rdata:000000014000B450 aFxstubbindclas db 'FxStubBindClasses: invalid driver image, the address of symbol __'
.rdata:000000014000B450                                         ; DATA XREF: sub_14000A1B8+38↑o
.rdata:000000014000B450                 db 'KMDF_CLASS_BIND_START 0x%p is greater than the address of symbol '
.rdata:000000014000B450                 db '__KMDF_CLASS_BIND_END 0x%p, status 0x%x',0Ah,0
.rdata:000000014000B4FB                 align 20h
.rdata:000000014000B500 ; const CHAR aFxstubbindclas_4[]
.rdata:000000014000B500 aFxstubbindclas_4 db 'FxStubBindClasses: invalid driver image.',0Ah
.rdata:000000014000B500                                         ; DATA XREF: sub_14000A1B8:loc_14000A36A↑o
.rdata:000000014000B500                 db 'Not enough space for WDF_CLASS_BIND_INFO.Size field.',0Ah,0
.rdata:000000014000B55F                 align 20h
.rdata:000000014000B560 aNull_1:                                ; DATA XREF: sub_14000A1B8+169↑o
.rdata:000000014000B560                 text "UTF-16LE", '(null)',0
.rdata:000000014000B56E                 align 10h
.rdata:000000014000B570 ; const CHAR aFxstubbindclas_3[]
.rdata:000000014000B570 aFxstubbindclas_3 db 'FxStubBindClasses: WDF_CLASS_BIND_INFO 0x%p, class %S, size 0x%x '
.rdata:000000014000B570                                         ; DATA XREF: sub_14000A1B8+173↑o
.rdata:000000014000B570                 db 'incorrect, expected 0x%Ix, status 0x%x',0Ah,0
.rdata:000000014000B5D9                 align 20h
.rdata:000000014000B5E0 aFxstubbindclas_2 db 'FxStubBindClasses: invalid driver image.',0Ah
.rdata:000000014000B5E0                                         ; DATA XREF: sub_14000A1B8:loc_14000A314↑o
.rdata:000000014000B5E0                 db 'Not enough space for WDF_CLASS_BIND_INFO.',0Ah,0
.rdata:000000014000B634                 align 20h
.rdata:000000014000B640 ; const CHAR aFxstubbindclas_0[]
.rdata:000000014000B640 aFxstubbindclas_0 db 'FxStubBindClasses: ClientBindClass %p, WDF_CLASS_BIND_INFO 0x%p, '
.rdata:000000014000B640                                         ; DATA XREF: sub_14000A1B8+C7↑o
.rdata:000000014000B640                 db 'class %S, returned status 0x%x',0Ah,0
.rdata:000000014000B6A1                 align 10h
.rdata:000000014000B6B0 ; const CHAR aFxstubbindclas_1[]
.rdata:000000014000B6B0 aFxstubbindclas_1 db 'FxStubBindClasses: VersionBindClass WDF_CLASS_BIND_INFO 0x%p, cla'
.rdata:000000014000B6B0                                         ; DATA XREF: sub_14000A1B8+136↑o
.rdata:000000014000B6B0                 db 'ss %S, returned status 0x%x',0Ah,0
.rdata:000000014000B70E                 align 10h
.rdata:000000014000B710 ; Debug Directory entries
.rdata:000000014000B710                 dd 0                    ; Characteristics
.rdata:000000014000B714                 dd 0E722D59Dh           ; TimeDateStamp
.rdata:000000014000B718                 dw 0                    ; MajorVersion
.rdata:000000014000B71A                 dw 0                    ; MinorVersion
.rdata:000000014000B71C                 dd 2                    ; Type: IMAGE_DEBUG_TYPE_CODEVIEW
.rdata:000000014000B720                 dd 2Eh                  ; SizeOfData
.rdata:000000014000B724                 dd rva asc_14000B888    ; AddressOfRawData
.rdata:000000014000B728                 dd 0AA88h               ; PointerToRawData
.rdata:000000014000B72C                 dd 0                    ; Characteristics
.rdata:000000014000B730                 dd 0E722D59Dh           ; TimeDateStamp
.rdata:000000014000B734                 dw 0                    ; MajorVersion
.rdata:000000014000B736                 dw 0                    ; MinorVersion
.rdata:000000014000B738                 dd 0Dh                  ; Type: IMAGE_DEBUG_TYPE_POGO
.rdata:000000014000B73C                 dd 218h                 ; SizeOfData
.rdata:000000014000B740                 dd rva unk_14000B8B8    ; AddressOfRawData
.rdata:000000014000B744                 dd 0AAB8h               ; PointerToRawData
.rdata:000000014000B748                 dd 0                    ; Characteristics
.rdata:000000014000B74C                 dd 0E722D59Dh           ; TimeDateStamp
.rdata:000000014000B750                 dw 0                    ; MajorVersion
.rdata:000000014000B752                 dw 0                    ; MinorVersion
.rdata:000000014000B754                 dd 10h                  ; Type: IMAGE_DEBUG_TYPE_REPRO
.rdata:000000014000B758                 dd 24h                  ; SizeOfData
.rdata:000000014000B75C                 dd rva unk_14000BAD0    ; AddressOfRawData
.rdata:000000014000B760                 dd 0ACD0h               ; PointerToRawData
.rdata:000000014000B764                 align 10h
.rdata:000000014000B770 _load_config_used dd 118h               ; Size
.rdata:000000014000B774                 dd 0                    ; Time stamp
.rdata:000000014000B778                 dw 2 dup(0)             ; Version: 0.0
.rdata:000000014000B77C                 dd 0                    ; GlobalFlagsClear
.rdata:000000014000B780                 dd 0                    ; GlobalFlagsSet
.rdata:000000014000B784                 dd 0                    ; CriticalSectionDefaultTimeout
.rdata:000000014000B788                 dq 0                    ; DeCommitFreeBlockThreshold
.rdata:000000014000B790                 dq 0                    ; DeCommitTotalFreeThreshold
.rdata:000000014000B798                 dq 0                    ; LockPrefixTable
.rdata:000000014000B7A0                 dq 0                    ; MaximumAllocationSize
.rdata:000000014000B7A8                 dq 0                    ; VirtualMemoryThreshold
.rdata:000000014000B7B0                 dq 0                    ; ProcessAffinityMask
.rdata:000000014000B7B8                 dd 0                    ; ProcessHeapFlags
.rdata:000000014000B7BC                 dw 0                    ; CSDVersion
.rdata:000000014000B7BE                 dw 0                    ; Reserved1
.rdata:000000014000B7C0                 dq 0                    ; EditList
.rdata:000000014000B7C8                 dq offset __security_cookie ; SecurityCookie
.rdata:000000014000B7D0                 dq 0                    ; SEHandlerTable
.rdata:000000014000B7D8                 dq 0                    ; SEHandlerCount
.rdata:000000014000B7E0                 dq offset __guard_check_icall_fptr ; GuardCFCheckFunctionPointer
.rdata:000000014000B7E8                 dq offset __guard_dispatch_icall_fptr ; GuardCFDispatchFunctionPointer
.rdata:000000014000B7F0                 dq offset __guard_fids_table ; GuardCFFunctionTable
.rdata:000000014000B7F8                 dq 18h                  ; GuardCFFunctionCount
.rdata:000000014000B800                 dd 14500h               ; GuardFlags
.rdata:000000014000B804                 dw 0                    ; CodeIntegrity.Flags
.rdata:000000014000B806                 dw 0                    ; CodeIntegrity.Catalog
.rdata:000000014000B808                 dd 0                    ; CodeIntegrity.CatalogOffset
.rdata:000000014000B80C                 dd 0                    ; CodeIntegrity.Reserved
.rdata:000000014000B810                 dq 0                    ; GuardAddressTakenIatEntryTable
.rdata:000000014000B818                 dq 0                    ; GuardAddressTakenIatEntryCount
.rdata:000000014000B820                 dq 0                    ; GuardLongJumpTargetTable
.rdata:000000014000B828                 dq 0                    ; GuardLongJumpTargetCount
.rdata:000000014000B830                 dq 0                    ; DynamicValueRelocTable
.rdata:000000014000B838                 dq 0                    ; CHPEMetadataPointer
.rdata:000000014000B840                 dq 0                    ; GuardRFFailureRoutine
.rdata:000000014000B848                 dq 0                    ; GuardRFFailureRoutineFunctionPointer
.rdata:000000014000B850                 dd 0                    ; DynamicValueRelocTableOffset
.rdata:000000014000B854                 dw 0                    ; DynamicValueRelocTableSection
.rdata:000000014000B856                 dw 0                    ; Reserved2
.rdata:000000014000B858                 dq 0                    ; GuardRFVerifyStackPointerFunctionPointer
.rdata:000000014000B860                 dd 0                    ; HotPatchTableOffset
.rdata:000000014000B864                 dd 0                    ; Reserved3
.rdata:000000014000B868                 dq 0                    ; EnclaveConfigurationPointer
.rdata:000000014000B870                 dq 0                    ; VolatileMetadataPointer
.rdata:000000014000B878                 dq 0                    ; GuardEHContinuationTable
.rdata:000000014000B880                 dq 0                    ; GuardEHContinuationCount
.rdata:000000014000B888 ; Debug information (IMAGE_DEBUG_TYPE_CODEVIEW)
.rdata:000000014000B888 asc_14000B888   db 'RSDS'               ; DATA XREF: .rdata:000000014000B724↑o
.rdata:000000014000B888                                         ; CV signature
.rdata:000000014000B88C                 dd 0F2DA1E86h           ; Data1 ; GUID
.rdata:000000014000B88C                 dw 1831h                ; Data2
.rdata:000000014000B88C                 dw 5314h                ; Data3
.rdata:000000014000B88C                 db 9Bh, 0DAh, 0F4h, 0CDh, 0A0h, 0BEh, 9Eh, 1Ch; Data4
.rdata:000000014000B89C                 dd 1                    ; Age
.rdata:000000014000B8A0                 text "UTF-8", 'SurfaceDialFilter.pdb',0 ; PdbFileName
.rdata:000000014000B8B6                 align 8
.rdata:000000014000B8B8 ; Debug information (IMAGE_DEBUG_TYPE_POGO)
.rdata:000000014000B8B8 unk_14000B8B8   db    0                 ; DATA XREF: .rdata:000000014000B740↑o
.rdata:000000014000B8B9                 db    0
.rdata:000000014000B8BA                 db    0
.rdata:000000014000B8BB                 db    0
.rdata:000000014000B8BC                 db    0
.rdata:000000014000B8BD                 db  10h
.rdata:000000014000B8BE                 db    0
.rdata:000000014000B8BF                 db    0
.rdata:000000014000B8C0                 db  80h
.rdata:000000014000B8C1                 db  94h
.rdata:000000014000B8C2                 db    0
.rdata:000000014000B8C3                 db    0
.rdata:000000014000B8C4                 db  2Eh ; .
.rdata:000000014000B8C5                 db  74h ; t
.rdata:000000014000B8C6                 db  65h ; e
.rdata:000000014000B8C7                 db  78h ; x
.rdata:000000014000B8C8                 db  74h ; t
.rdata:000000014000B8C9                 db  24h ; $
.rdata:000000014000B8CA                 db  6Dh ; m
.rdata:000000014000B8CB                 db  6Eh ; n
.rdata:000000014000B8CC                 db    0
.rdata:000000014000B8CD                 db    0
.rdata:000000014000B8CE                 db    0
.rdata:000000014000B8CF                 db    0
.rdata:000000014000B8D0                 db  80h
.rdata:000000014000B8D1                 db 0A4h
.rdata:000000014000B8D2                 db    0
.rdata:000000014000B8D3                 db    0
.rdata:000000014000B8D4                 db  40h ; @
.rdata:000000014000B8D5                 db    0
.rdata:000000014000B8D6                 db    0
.rdata:000000014000B8D7                 db    0
.rdata:000000014000B8D8                 db  2Eh ; .
.rdata:000000014000B8D9                 db  74h ; t
.rdata:000000014000B8DA                 db  65h ; e
.rdata:000000014000B8DB                 db  78h ; x
.rdata:000000014000B8DC                 db  74h ; t
.rdata:000000014000B8DD                 db  24h ; $
.rdata:000000014000B8DE                 db  6Dh ; m
.rdata:000000014000B8DF                 db  6Eh ; n
.rdata:000000014000B8E0                 db  24h ; $
.rdata:000000014000B8E1                 db  30h ; 0
.rdata:000000014000B8E2                 db  30h ; 0
.rdata:000000014000B8E3                 db    0
.rdata:000000014000B8E4                 db 0C0h
.rdata:000000014000B8E5                 db 0A4h
.rdata:000000014000B8E6                 db    0
.rdata:000000014000B8E7                 db    0
.rdata:000000014000B8E8                 db 0B0h
.rdata:000000014000B8E9                 db    3
.rdata:000000014000B8EA                 db    0
.rdata:000000014000B8EB                 db    0
.rdata:000000014000B8EC                 db  2Eh ; .
.rdata:000000014000B8ED                 db  74h ; t
.rdata:000000014000B8EE                 db  65h ; e
.rdata:000000014000B8EF                 db  78h ; x
.rdata:000000014000B8F0                 db  74h ; t
.rdata:000000014000B8F1                 db  24h ; $
.rdata:000000014000B8F2                 db  6Dh ; m
.rdata:000000014000B8F3                 db  6Eh ; n
.rdata:000000014000B8F4                 db  24h ; $
.rdata:000000014000B8F5                 db  32h ; 2
.rdata:000000014000B8F6                 db  31h ; 1
.rdata:000000014000B8F7                 db    0
.rdata:000000014000B8F8                 db  70h ; p
.rdata:000000014000B8F9                 db 0A8h
.rdata:000000014000B8FA                 db    0
.rdata:000000014000B8FB                 db    0
.rdata:000000014000B8FC                 db  28h ; (
.rdata:000000014000B8FD                 db    4
.rdata:000000014000B8FE                 db    0
.rdata:000000014000B8FF                 db    0
.rdata:000000014000B900                 db  2Eh ; .
.rdata:000000014000B901                 db  74h ; t
.rdata:000000014000B902                 db  65h ; e
.rdata:000000014000B903                 db  78h ; x
.rdata:000000014000B904                 db  74h ; t
.rdata:000000014000B905                 db  24h ; $
.rdata:000000014000B906                 db  73h ; s
.rdata:000000014000B907                 db    0
.rdata:000000014000B908                 db    0
.rdata:000000014000B909                 db 0B0h
.rdata:000000014000B90A                 db    0
.rdata:000000014000B90B                 db    0
.rdata:000000014000B90C                 db  30h ; 0
.rdata:000000014000B90D                 db    1
.rdata:000000014000B90E                 db    0
.rdata:000000014000B90F                 db    0
.rdata:000000014000B910                 db  2Eh ; .
.rdata:000000014000B911                 db  69h ; i
.rdata:000000014000B912                 db  64h ; d
.rdata:000000014000B913                 db  61h ; a
.rdata:000000014000B914                 db  74h ; t
.rdata:000000014000B915                 db  61h ; a
.rdata:000000014000B916                 db  24h ; $
.rdata:000000014000B917                 db  35h ; 5
.rdata:000000014000B918                 db    0
.rdata:000000014000B919                 db    0
.rdata:000000014000B91A                 db    0
.rdata:000000014000B91B                 db    0
.rdata:000000014000B91C                 db  30h ; 0
.rdata:000000014000B91D                 db 0B1h
.rdata:000000014000B91E                 db    0
.rdata:000000014000B91F                 db    0
.rdata:000000014000B920                 db  10h
.rdata:000000014000B921                 db    0
.rdata:000000014000B922                 db    0
.rdata:000000014000B923                 db    0
.rdata:000000014000B924                 db  2Eh ; .
.rdata:000000014000B925                 db  30h ; 0
.rdata:000000014000B926                 db  30h ; 0
.rdata:000000014000B927                 db  63h ; c
.rdata:000000014000B928                 db  66h ; f
.rdata:000000014000B929                 db  67h ; g
.rdata:000000014000B92A                 db    0
.rdata:000000014000B92B                 db    0
.rdata:000000014000B92C                 db  40h ; @
.rdata:000000014000B92D                 db 0B1h
.rdata:000000014000B92E                 db    0
.rdata:000000014000B92F                 db    0
.rdata:000000014000B930                 db  60h ; `
.rdata:000000014000B931                 db    0
.rdata:000000014000B932                 db    0
.rdata:000000014000B933                 db    0
.rdata:000000014000B934                 db  2Eh ; .
.rdata:000000014000B935                 db  67h ; g
.rdata:000000014000B936                 db  66h ; f
.rdata:000000014000B937                 db  69h ; i
.rdata:000000014000B938                 db  64h ; d
.rdata:000000014000B939                 db  73h ; s
.rdata:000000014000B93A                 db    0
.rdata:000000014000B93B                 db    0
.rdata:000000014000B93C                 db 0A0h
.rdata:000000014000B93D                 db 0B1h
.rdata:000000014000B93E                 db    0
.rdata:000000014000B93F                 db    0
.rdata:000000014000B940                 db 0E8h
.rdata:000000014000B941                 db    6
.rdata:000000014000B942                 db    0
.rdata:000000014000B943                 db    0
.rdata:000000014000B944                 db  2Eh ; .
.rdata:000000014000B945                 db  72h ; r
.rdata:000000014000B946                 db  64h ; d
.rdata:000000014000B947                 db  61h ; a
.rdata:000000014000B948                 db  74h ; t
.rdata:000000014000B949                 db  61h ; a
.rdata:000000014000B94A                 db    0
.rdata:000000014000B94B                 db    0
.rdata:000000014000B94C                 db  88h
.rdata:000000014000B94D                 db 0B8h
.rdata:000000014000B94E                 db    0
.rdata:000000014000B94F                 db    0
.rdata:000000014000B950                 db  70h ; p
.rdata:000000014000B951                 db    2
.rdata:000000014000B952                 db    0
.rdata:000000014000B953                 db    0
.rdata:000000014000B954                 db  2Eh ; .
.rdata:000000014000B955                 db  72h ; r
.rdata:000000014000B956                 db  64h ; d
.rdata:000000014000B957                 db  61h ; a
.rdata:000000014000B958                 db  74h ; t
.rdata:000000014000B959                 db  61h ; a
.rdata:000000014000B95A                 db  24h ; $
.rdata:000000014000B95B                 db  7Ah ; z
.rdata:000000014000B95C                 db  7Ah ; z
.rdata:000000014000B95D                 db  7Ah ; z
.rdata:000000014000B95E                 db  64h ; d
.rdata:000000014000B95F                 db  62h ; b
.rdata:000000014000B960                 db  67h ; g
.rdata:000000014000B961                 db    0
.rdata:000000014000B962                 db    0
.rdata:000000014000B963                 db    0
.rdata:000000014000B964                 db 0F8h
.rdata:000000014000B965                 db 0BAh
.rdata:000000014000B966                 db    0
.rdata:000000014000B967                 db    0
.rdata:000000014000B968                 db  24h ; $
.rdata:000000014000B969                 db    7
.rdata:000000014000B96A                 db    0
.rdata:000000014000B96B                 db    0
.rdata:000000014000B96C                 db  2Eh ; .
.rdata:000000014000B96D                 db  78h ; x
.rdata:000000014000B96E                 db  64h ; d
.rdata:000000014000B96F                 db  61h ; a
.rdata:000000014000B970                 db  74h ; t
.rdata:000000014000B971                 db  61h ; a
.rdata:000000014000B972                 db    0
.rdata:000000014000B973                 db    0
.rdata:000000014000B974                 db    0
.rdata:000000014000B975                 db 0D0h
.rdata:000000014000B976                 db    0
.rdata:000000014000B977                 db    0
.rdata:000000014000B978                 db 0A0h
.rdata:000000014000B979                 db    0
.rdata:000000014000B97A                 db    0
.rdata:000000014000B97B                 db    0
.rdata:000000014000B97C                 db  2Eh ; .
.rdata:000000014000B97D                 db  64h ; d
.rdata:000000014000B97E                 db  61h ; a
.rdata:000000014000B97F                 db  74h ; t
.rdata:000000014000B980                 db  61h ; a
.rdata:000000014000B981                 db    0
.rdata:000000014000B982                 db    0
.rdata:000000014000B983                 db    0
.rdata:000000014000B984                 db 0A0h
.rdata:000000014000B985                 db 0D0h
.rdata:000000014000B986                 db    0
.rdata:000000014000B987                 db    0
.rdata:000000014000B988                 db  10h
.rdata:000000014000B989                 db    0
.rdata:000000014000B98A                 db    0
.rdata:000000014000B98B                 db    0
.rdata:000000014000B98C                 db  2Eh ; .
.rdata:000000014000B98D                 db  6Bh ; k
.rdata:000000014000B98E                 db  6Dh ; m
.rdata:000000014000B98F                 db  64h ; d
.rdata:000000014000B990                 db  66h ; f
.rdata:000000014000B991                 db  63h ; c
.rdata:000000014000B992                 db  6Ch ; l
.rdata:000000014000B993                 db  61h ; a
.rdata:000000014000B994                 db  73h ; s
.rdata:000000014000B995                 db  73h ; s
.rdata:000000014000B996                 db  62h ; b
.rdata:000000014000B997                 db  69h ; i
.rdata:000000014000B998                 db  6Eh ; n
.rdata:000000014000B999                 db  64h ; d
.rdata:000000014000B99A                 db  24h ; $
.rdata:000000014000B99B                 db  61h ; a
.rdata:000000014000B99C                 db    0
.rdata:000000014000B99D                 db    0
.rdata:000000014000B99E                 db    0
.rdata:000000014000B99F                 db    0
.rdata:000000014000B9A0                 db 0B0h
.rdata:000000014000B9A1                 db 0D0h
.rdata:000000014000B9A2                 db    0
.rdata:000000014000B9A3                 db    0
.rdata:000000014000B9A4                 db    8
.rdata:000000014000B9A5                 db    0
.rdata:000000014000B9A6                 db    0
.rdata:000000014000B9A7                 db    0
.rdata:000000014000B9A8                 db  2Eh ; .
.rdata:000000014000B9A9                 db  6Bh ; k
.rdata:000000014000B9AA                 db  6Dh ; m
.rdata:000000014000B9AB                 db  64h ; d
.rdata:000000014000B9AC                 db  66h ; f
.rdata:000000014000B9AD                 db  63h ; c
.rdata:000000014000B9AE                 db  6Ch ; l
.rdata:000000014000B9AF                 db  61h ; a
.rdata:000000014000B9B0                 db  73h ; s
.rdata:000000014000B9B1                 db  73h ; s
.rdata:000000014000B9B2                 db  62h ; b
.rdata:000000014000B9B3                 db  69h ; i
.rdata:000000014000B9B4                 db  6Eh ; n
.rdata:000000014000B9B5                 db  64h ; d
.rdata:000000014000B9B6                 db  24h ; $
.rdata:000000014000B9B7                 db  63h ; c
.rdata:000000014000B9B8                 db    0
.rdata:000000014000B9B9                 db    0
.rdata:000000014000B9BA                 db    0
.rdata:000000014000B9BB                 db    0
.rdata:000000014000B9BC                 db 0B8h
.rdata:000000014000B9BD                 db 0D0h
.rdata:000000014000B9BE                 db    0
.rdata:000000014000B9BF                 db    0
.rdata:000000014000B9C0                 db    8
.rdata:000000014000B9C1                 db    0
.rdata:000000014000B9C2                 db    0
.rdata:000000014000B9C3                 db    0
.rdata:000000014000B9C4                 db  2Eh ; .
.rdata:000000014000B9C5                 db  6Bh ; k
.rdata:000000014000B9C6                 db  6Dh ; m
.rdata:000000014000B9C7                 db  64h ; d
.rdata:000000014000B9C8                 db  66h ; f
.rdata:000000014000B9C9                 db  63h ; c
.rdata:000000014000B9CA                 db  6Ch ; l
.rdata:000000014000B9CB                 db  61h ; a
.rdata:000000014000B9CC                 db  73h ; s
.rdata:000000014000B9CD                 db  73h ; s
.rdata:000000014000B9CE                 db  62h ; b
.rdata:000000014000B9CF                 db  69h ; i
.rdata:000000014000B9D0                 db  6Eh ; n
.rdata:000000014000B9D1                 db  64h ; d
.rdata:000000014000B9D2                 db  24h ; $
.rdata:000000014000B9D3                 db  64h ; d
.rdata:000000014000B9D4                 db    0
.rdata:000000014000B9D5                 db    0
.rdata:000000014000B9D6                 db    0
.rdata:000000014000B9D7                 db    0
.rdata:000000014000B9D8                 db 0C0h
.rdata:000000014000B9D9                 db 0D0h
.rdata:000000014000B9DA                 db    0
.rdata:000000014000B9DB                 db    0
.rdata:000000014000B9DC                 db  10h
.rdata:000000014000B9DD                 db    0
.rdata:000000014000B9DE                 db    0
.rdata:000000014000B9DF                 db    0
.rdata:000000014000B9E0                 db  2Eh ; .
.rdata:000000014000B9E1                 db  6Bh ; k
.rdata:000000014000B9E2                 db  6Dh ; m
.rdata:000000014000B9E3                 db  64h ; d
.rdata:000000014000B9E4                 db  66h ; f
.rdata:000000014000B9E5                 db  74h ; t
.rdata:000000014000B9E6                 db  79h ; y
.rdata:000000014000B9E7                 db  70h ; p
.rdata:000000014000B9E8                 db  65h ; e
.rdata:000000014000B9E9                 db  69h ; i
.rdata:000000014000B9EA                 db  6Eh ; n
.rdata:000000014000B9EB                 db  69h ; i
.rdata:000000014000B9EC                 db  74h ; t
.rdata:000000014000B9ED                 db  24h ; $
.rdata:000000014000B9EE                 db  61h ; a
.rdata:000000014000B9EF                 db    0
.rdata:000000014000B9F0                 db 0D0h
.rdata:000000014000B9F1                 db 0D0h
.rdata:000000014000B9F2                 db    0
.rdata:000000014000B9F3                 db    0
.rdata:000000014000B9F4                 db  10h
.rdata:000000014000B9F5                 db    0
.rdata:000000014000B9F6                 db    0
.rdata:000000014000B9F7                 db    0
.rdata:000000014000B9F8                 db  2Eh ; .
.rdata:000000014000B9F9                 db  6Bh ; k
.rdata:000000014000B9FA                 db  6Dh ; m
.rdata:000000014000B9FB                 db  64h ; d
.rdata:000000014000B9FC                 db  66h ; f
.rdata:000000014000B9FD                 db  74h ; t
.rdata:000000014000B9FE                 db  79h ; y
.rdata:000000014000B9FF                 db  70h ; p
.rdata:000000014000BA00                 db  65h ; e
.rdata:000000014000BA01                 db  69h ; i
.rdata:000000014000BA02                 db  6Eh ; n
.rdata:000000014000BA03                 db  69h ; i
.rdata:000000014000BA04                 db  74h ; t
.rdata:000000014000BA05                 db  24h ; $
.rdata:000000014000BA06                 db  63h ; c
.rdata:000000014000BA07                 db    0
.rdata:000000014000BA08                 db 0E0h
.rdata:000000014000BA09                 db 0D0h
.rdata:000000014000BA0A                 db    0
.rdata:000000014000BA0B                 db    0
.rdata:000000014000BA0C                 db 0C8h
.rdata:000000014000BA0D                 db    2
.rdata:000000014000BA0E                 db    0
.rdata:000000014000BA0F                 db    0
.rdata:000000014000BA10                 db  2Eh ; .
.rdata:000000014000BA11                 db  62h ; b
.rdata:000000014000BA12                 db  73h ; s
.rdata:000000014000BA13                 db  73h ; s
.rdata:000000014000BA14                 db    0
.rdata:000000014000BA15                 db    0
.rdata:000000014000BA16                 db    0
.rdata:000000014000BA17                 db    0
.rdata:000000014000BA18                 db    0
.rdata:000000014000BA19                 db 0E0h
.rdata:000000014000BA1A                 db    0
.rdata:000000014000BA1B                 db    0
.rdata:000000014000BA1C                 db  78h ; x
.rdata:000000014000BA1D                 db    3
.rdata:000000014000BA1E                 db    0
.rdata:000000014000BA1F                 db    0
.rdata:000000014000BA20                 db  2Eh ; .
.rdata:000000014000BA21                 db  70h ; p
.rdata:000000014000BA22                 db  64h ; d
.rdata:000000014000BA23                 db  61h ; a
.rdata:000000014000BA24                 db  74h ; t
.rdata:000000014000BA25                 db  61h ; a
.rdata:000000014000BA26                 db    0
.rdata:000000014000BA27                 db    0
.rdata:000000014000BA28                 db    0
.rdata:000000014000BA29                 db 0F0h
.rdata:000000014000BA2A                 db    0
.rdata:000000014000BA2B                 db    0
.rdata:000000014000BA2C                 db  70h ; p
.rdata:000000014000BA2D                 db    6
.rdata:000000014000BA2E                 db    0
.rdata:000000014000BA2F                 db    0
.rdata:000000014000BA30                 db  50h ; P
.rdata:000000014000BA31                 db  41h ; A
.rdata:000000014000BA32                 db  47h ; G
.rdata:000000014000BA33                 db  45h ; E
.rdata:000000014000BA34                 db    0
.rdata:000000014000BA35                 db    0
.rdata:000000014000BA36                 db    0
.rdata:000000014000BA37                 db    0
.rdata:000000014000BA38                 db  70h ; p
.rdata:000000014000BA39                 db 0F6h
.rdata:000000014000BA3A                 db    0
.rdata:000000014000BA3B                 db    0
.rdata:000000014000BA3C                 db 0DCh
.rdata:000000014000BA3D                 db    0
.rdata:000000014000BA3E                 db    0
.rdata:000000014000BA3F                 db    0
.rdata:000000014000BA40                 db  50h ; P
.rdata:000000014000BA41                 db  41h ; A
.rdata:000000014000BA42                 db  47h ; G
.rdata:000000014000BA43                 db  45h ; E
.rdata:000000014000BA44                 db  24h ; $
.rdata:000000014000BA45                 db  73h ; s
.rdata:000000014000BA46                 db    0
.rdata:000000014000BA47                 db    0
.rdata:000000014000BA48                 db    0
.rdata:000000014000BA49                 db    0
.rdata:000000014000BA4A                 db    1
.rdata:000000014000BA4B                 db    0
.rdata:000000014000BA4C                 db  30h ; 0
.rdata:000000014000BA4D                 db    2
.rdata:000000014000BA4E                 db    0
.rdata:000000014000BA4F                 db    0
.rdata:000000014000BA50                 db  49h ; I
.rdata:000000014000BA51                 db  4Eh ; N
.rdata:000000014000BA52                 db  49h ; I
.rdata:000000014000BA53                 db  54h ; T
.rdata:000000014000BA54                 db    0
.rdata:000000014000BA55                 db    0
.rdata:000000014000BA56                 db    0
.rdata:000000014000BA57                 db    0
.rdata:000000014000BA58                 db  30h ; 0
.rdata:000000014000BA59                 db    2
.rdata:000000014000BA5A                 db    1
.rdata:000000014000BA5B                 db    0
.rdata:000000014000BA5C                 db  50h ; P
.rdata:000000014000BA5D                 db    0
.rdata:000000014000BA5E                 db    0
.rdata:000000014000BA5F                 db    0
.rdata:000000014000BA60                 db  2Eh ; .
.rdata:000000014000BA61                 db  69h ; i
.rdata:000000014000BA62                 db  64h ; d
.rdata:000000014000BA63                 db  61h ; a
.rdata:000000014000BA64                 db  74h ; t
.rdata:000000014000BA65                 db  61h ; a
.rdata:000000014000BA66                 db  24h ; $
.rdata:000000014000BA67                 db  32h ; 2
.rdata:000000014000BA68                 db    0
.rdata:000000014000BA69                 db    0
.rdata:000000014000BA6A                 db    0
.rdata:000000014000BA6B                 db    0
.rdata:000000014000BA6C                 db  80h
.rdata:000000014000BA6D                 db    2
.rdata:000000014000BA6E                 db    1
.rdata:000000014000BA6F                 db    0
.rdata:000000014000BA70                 db  18h
.rdata:000000014000BA71                 db    0
.rdata:000000014000BA72                 db    0
.rdata:000000014000BA73                 db    0
.rdata:000000014000BA74                 db  2Eh ; .
.rdata:000000014000BA75                 db  69h ; i
.rdata:000000014000BA76                 db  64h ; d
.rdata:000000014000BA77                 db  61h ; a
.rdata:000000014000BA78                 db  74h ; t
.rdata:000000014000BA79                 db  61h ; a
.rdata:000000014000BA7A                 db  24h ; $
.rdata:000000014000BA7B                 db  33h ; 3
.rdata:000000014000BA7C                 db    0
.rdata:000000014000BA7D                 db    0
.rdata:000000014000BA7E                 db    0
.rdata:000000014000BA7F                 db    0
.rdata:000000014000BA80                 db  98h
.rdata:000000014000BA81                 db    2
.rdata:000000014000BA82                 db    1
.rdata:000000014000BA83                 db    0
.rdata:000000014000BA84                 db  30h ; 0
.rdata:000000014000BA85                 db    1
.rdata:000000014000BA86                 db    0
.rdata:000000014000BA87                 db    0
.rdata:000000014000BA88                 db  2Eh ; .
.rdata:000000014000BA89                 db  69h ; i
.rdata:000000014000BA8A                 db  64h ; d
.rdata:000000014000BA8B                 db  61h ; a
.rdata:000000014000BA8C                 db  74h ; t
.rdata:000000014000BA8D                 db  61h ; a
.rdata:000000014000BA8E                 db  24h ; $
.rdata:000000014000BA8F                 db  34h ; 4
.rdata:000000014000BA90                 db    0
.rdata:000000014000BA91                 db    0
.rdata:000000014000BA92                 db    0
.rdata:000000014000BA93                 db    0
.rdata:000000014000BA94                 db 0C8h
.rdata:000000014000BA95                 db    3
.rdata:000000014000BA96                 db    1
.rdata:000000014000BA97                 db    0
.rdata:000000014000BA98                 db  3Ah ; :
.rdata:000000014000BA99                 db    3
.rdata:000000014000BA9A                 db    0
.rdata:000000014000BA9B                 db    0
.rdata:000000014000BA9C                 db  2Eh ; .
.rdata:000000014000BA9D                 db  69h ; i
.rdata:000000014000BA9E                 db  64h ; d
.rdata:000000014000BA9F                 db  61h ; a
.rdata:000000014000BAA0                 db  74h ; t
.rdata:000000014000BAA1                 db  61h ; a
.rdata:000000014000BAA2                 db  24h ; $
.rdata:000000014000BAA3                 db  36h ; 6
.rdata:000000014000BAA4                 db    0
.rdata:000000014000BAA5                 db    0
.rdata:000000014000BAA6                 db    0
.rdata:000000014000BAA7                 db    0
.rdata:000000014000BAA8                 db    0
.rdata:000000014000BAA9                 db  10h
.rdata:000000014000BAAA                 db    1
.rdata:000000014000BAAB                 db    0
.rdata:000000014000BAAC                 db 0B0h
.rdata:000000014000BAAD                 db    0
.rdata:000000014000BAAE                 db    0
.rdata:000000014000BAAF                 db    0
.rdata:000000014000BAB0                 db  2Eh ; .
.rdata:000000014000BAB1                 db  72h ; r
.rdata:000000014000BAB2                 db  73h ; s
.rdata:000000014000BAB3                 db  72h ; r
.rdata:000000014000BAB4                 db  63h ; c
.rdata:000000014000BAB5                 db  24h ; $
.rdata:000000014000BAB6                 db  30h ; 0
.rdata:000000014000BAB7                 db  31h ; 1
.rdata:000000014000BAB8                 db    0
.rdata:000000014000BAB9                 db    0
.rdata:000000014000BABA                 db    0
.rdata:000000014000BABB                 db    0
.rdata:000000014000BABC                 db 0B0h
.rdata:000000014000BABD                 db  10h
.rdata:000000014000BABE                 db    1
.rdata:000000014000BABF                 db    0
.rdata:000000014000BAC0                 db  68h ; h
.rdata:000000014000BAC1                 db    3
.rdata:000000014000BAC2                 db    0
.rdata:000000014000BAC3                 db    0
.rdata:000000014000BAC4                 db  2Eh ; .
.rdata:000000014000BAC5                 db  72h ; r
.rdata:000000014000BAC6                 db  73h ; s
.rdata:000000014000BAC7                 db  72h ; r
.rdata:000000014000BAC8                 db  63h ; c
.rdata:000000014000BAC9                 db  24h ; $
.rdata:000000014000BACA                 db  30h ; 0
.rdata:000000014000BACB                 db  32h ; 2
.rdata:000000014000BACC                 db    0
.rdata:000000014000BACD                 db    0
.rdata:000000014000BACE                 db    0
.rdata:000000014000BACF                 db    0
.rdata:000000014000BAD0 ; Debug information (IMAGE_DEBUG_TYPE_REPRO)
.rdata:000000014000BAD0 unk_14000BAD0   db  20h                 ; DATA XREF: .rdata:000000014000B75C↑o
.rdata:000000014000BAD1                 db    0
.rdata:000000014000BAD2                 db    0
.rdata:000000014000BAD3                 db    0
.rdata:000000014000BAD4                 db  86h
.rdata:000000014000BAD5                 db  1Eh
.rdata:000000014000BAD6                 db 0DAh
.rdata:000000014000BAD7                 db 0F2h
.rdata:000000014000BAD8                 db  31h ; 1
.rdata:000000014000BAD9                 db  18h
.rdata:000000014000BADA                 db  14h
.rdata:000000014000BADB                 db  53h ; S
.rdata:000000014000BADC                 db  9Bh
.rdata:000000014000BADD                 db 0DAh
.rdata:000000014000BADE                 db 0F4h
.rdata:000000014000BADF                 db 0CDh
.rdata:000000014000BAE0                 db 0A0h
.rdata:000000014000BAE1                 db 0BEh
.rdata:000000014000BAE2                 db  9Eh
.rdata:000000014000BAE3                 db  1Ch
.rdata:000000014000BAE4                 db  8Dh
.rdata:000000014000BAE5                 db  40h ; @
.rdata:000000014000BAE6                 db  83h
.rdata:000000014000BAE7                 db  5Fh ; _
.rdata:000000014000BAE8                 db 0D6h
.rdata:000000014000BAE9                 db  3Dh ; =
.rdata:000000014000BAEA                 db 0FBh
.rdata:000000014000BAEB                 db  9Bh
.rdata:000000014000BAEC                 db  93h
.rdata:000000014000BAED                 db  42h ; B
.rdata:000000014000BAEE                 db  4Ch ; L
.rdata:000000014000BAEF                 db 0AFh
.rdata:000000014000BAF0                 db  9Dh
.rdata:000000014000BAF1                 db 0D5h
.rdata:000000014000BAF2                 db  22h ; "
.rdata:000000014000BAF3                 db 0E7h
.rdata:000000014000BAF4                 db    0
.rdata:000000014000BAF5                 db    0
.rdata:000000014000BAF6                 db    0
.rdata:000000014000BAF7                 db    0
.rdata:000000014000BAF8 stru_14000BAF8  UNWIND_INFO_HDR <2, 7, 3, 0>
.rdata:000000014000BAF8                                         ; DATA XREF: .pdata:ExceptionDir↓o
.rdata:000000014000BAFC                 UNWIND_CODE <1, 16h>    ; UWOP_EPILOG
.rdata:000000014000BAFE                 UNWIND_CODE <0, 6>      ; UWOP_EPILOG
.rdata:000000014000BB00                 UNWIND_CODE <7, 82h>    ; UWOP_ALLOC_SMALL
.rdata:000000014000BB02                 align 4
.rdata:000000014000BB04 stru_14000BB04  UNWIND_INFO_HDR <2, 14h, 0Ch, 0>
.rdata:000000014000BB04                                         ; DATA XREF: .pdata:000000014000E00C↓o
.rdata:000000014000BB04                                         ; .pdata:000000014000E180↓o
.rdata:000000014000BB08                 UNWIND_CODE <0Dh, 16h>  ; UWOP_EPILOG
.rdata:000000014000BB0A                 UNWIND_CODE <0, 6>      ; UWOP_EPILOG
.rdata:000000014000BB0C                 UNWIND_CODE <14h, 1>    ; UWOP_ALLOC_LARGE
.rdata:000000014000BB0E                 dw 11h
.rdata:000000014000BB10                 UNWIND_CODE <0Dh, 0F0h> ; UWOP_PUSH_NONVOL
.rdata:000000014000BB12                 UNWIND_CODE <0Bh, 0E0h> ; UWOP_PUSH_NONVOL
.rdata:000000014000BB14                 UNWIND_CODE <9, 0D0h>   ; UWOP_PUSH_NONVOL
.rdata:000000014000BB16                 UNWIND_CODE <7, 0C0h>   ; UWOP_PUSH_NONVOL
.rdata:000000014000BB18                 UNWIND_CODE <5, 70h>    ; UWOP_PUSH_NONVOL
.rdata:000000014000BB1A                 UNWIND_CODE <4, 60h>    ; UWOP_PUSH_NONVOL
.rdata:000000014000BB1C                 UNWIND_CODE <3, 50h>    ; UWOP_PUSH_NONVOL
.rdata:000000014000BB1E                 UNWIND_CODE <2, 30h>    ; UWOP_PUSH_NONVOL
.rdata:000000014000BB20 stru_14000BB20  UNWIND_INFO_HDR <1Ah, 25h, 0Bh, 0>
.rdata:000000014000BB20                                         ; DATA XREF: .pdata:000000014000E024↓o
.rdata:000000014000BB24                 UNWIND_CODE <0Bh, 16h>  ; UWOP_EPILOG
.rdata:000000014000BB26                 UNWIND_CODE <0, 6>      ; UWOP_EPILOG
.rdata:000000014000BB28                 UNWIND_CODE <17h, 1>    ; UWOP_ALLOC_LARGE
.rdata:000000014000BB2A                 dw 2Ch
.rdata:000000014000BB2C                 UNWIND_CODE <0Bh, 0F0h> ; UWOP_PUSH_NONVOL
.rdata:000000014000BB2E                 UNWIND_CODE <9, 0E0h>   ; UWOP_PUSH_NONVOL
.rdata:000000014000BB30                 UNWIND_CODE <7, 0D0h>   ; UWOP_PUSH_NONVOL
.rdata:000000014000BB32                 UNWIND_CODE <5, 70h>    ; UWOP_PUSH_NONVOL
.rdata:000000014000BB34                 UNWIND_CODE <4, 60h>    ; UWOP_PUSH_NONVOL
.rdata:000000014000BB36                 UNWIND_CODE <3, 30h>    ; UWOP_PUSH_NONVOL
.rdata:000000014000BB38                 UNWIND_CODE <2, 50h>    ; UWOP_PUSH_NONVOL
.rdata:000000014000BB3A                 align 4
.rdata:000000014000BB3C                 dd rva __GSHandlerCheck
.rdata:000000014000BB40                 dd 150h
.rdata:000000014000BB44 stru_14000BB44  UNWIND_INFO_HDR <2, 0Fh, 8, 0>
.rdata:000000014000BB44                                         ; DATA XREF: .pdata:000000014000E018↓o
.rdata:000000014000BB48                 UNWIND_CODE <2, 16h>    ; UWOP_EPILOG
.rdata:000000014000BB4A                 UNWIND_CODE <0, 6>      ; UWOP_EPILOG
.rdata:000000014000BB4C                 UNWIND_CODE <0Fh, 54h>  ; UWOP_SAVE_NONVOL
.rdata:000000014000BB4E                 dw 9
.rdata:000000014000BB50                 UNWIND_CODE <0Fh, 34h>  ; UWOP_SAVE_NONVOL
.rdata:000000014000BB52                 dw 8
.rdata:000000014000BB54                 UNWIND_CODE <0Fh, 52h>  ; UWOP_ALLOC_SMALL
.rdata:000000014000BB56                 UNWIND_CODE <0Bh, 70h>  ; UWOP_PUSH_NONVOL
.rdata:000000014000BB58 stru_14000BB58  UNWIND_INFO_HDR <2, 18h, 0Ch, 0>
.rdata:000000014000BB58                                         ; DATA XREF: .pdata:000000014000E030↓o
.rdata:000000014000BB58                                         ; .pdata:000000014000E09C↓o
.rdata:000000014000BB5C                 UNWIND_CODE <6, 16h>    ; UWOP_EPILOG
.rdata:000000014000BB5E                 UNWIND_CODE <0, 6>      ; UWOP_EPILOG
.rdata:000000014000BB60                 UNWIND_CODE <18h, 64h>  ; UWOP_SAVE_NONVOL
.rdata:000000014000BB62                 dw 0Ch
.rdata:000000014000BB64                 UNWIND_CODE <18h, 54h>  ; UWOP_SAVE_NONVOL
.rdata:000000014000BB66                 dw 0Bh
.rdata:000000014000BB68                 UNWIND_CODE <18h, 34h>  ; UWOP_SAVE_NONVOL
.rdata:000000014000BB6A                 dw 0Ah
.rdata:000000014000BB6C                 UNWIND_CODE <18h, 52h>  ; UWOP_ALLOC_SMALL
.rdata:000000014000BB6E                 UNWIND_CODE <14h, 0F0h> ; UWOP_PUSH_NONVOL
.rdata:000000014000BB70                 UNWIND_CODE <12h, 0E0h> ; UWOP_PUSH_NONVOL
.rdata:000000014000BB72                 UNWIND_CODE <10h, 70h>  ; UWOP_PUSH_NONVOL
.rdata:000000014000BB74 stru_14000BB74  UNWIND_INFO_HDR <2, 0Dh, 8, 0>
.rdata:000000014000BB74                                         ; DATA XREF: .pdata:000000014000E03C↓o
.rdata:000000014000BB74                                         ; .pdata:000000014000E15C↓o
.rdata:000000014000BB78                 UNWIND_CODE <7, 16h>    ; UWOP_EPILOG
.rdata:000000014000BB7A                 UNWIND_CODE <0, 6>      ; UWOP_EPILOG
.rdata:000000014000BB7C                 UNWIND_CODE <0Dh, 72h>  ; UWOP_ALLOC_SMALL
.rdata:000000014000BB7E                 UNWIND_CODE <9, 0E0h>   ; UWOP_PUSH_NONVOL
.rdata:000000014000BB80                 UNWIND_CODE <7, 70h>    ; UWOP_PUSH_NONVOL
.rdata:000000014000BB82                 UNWIND_CODE <6, 60h>    ; UWOP_PUSH_NONVOL
.rdata:000000014000BB84                 UNWIND_CODE <5, 50h>    ; UWOP_PUSH_NONVOL
.rdata:000000014000BB86                 UNWIND_CODE <4, 30h>    ; UWOP_PUSH_NONVOL
.rdata:000000014000BB88 stru_14000BB88  UNWIND_INFO_HDR <1Ah, 29h, 0Bh, 0>
.rdata:000000014000BB88                                         ; DATA XREF: .pdata:000000014000E06C↓o
.rdata:000000014000BB8C                 UNWIND_CODE <6, 16h>    ; UWOP_EPILOG
.rdata:000000014000BB8E                 UNWIND_CODE <0, 6>      ; UWOP_EPILOG
.rdata:000000014000BB90                 UNWIND_CODE <1Bh, 74h>  ; UWOP_SAVE_NONVOL
.rdata:000000014000BB92                 dw 2Eh
.rdata:000000014000BB94                 UNWIND_CODE <1Bh, 34h>  ; UWOP_SAVE_NONVOL
.rdata:000000014000BB96                 dw 2Dh
.rdata:000000014000BB98                 UNWIND_CODE <1Bh, 1>    ; UWOP_ALLOC_LARGE
.rdata:000000014000BB9A                 dw 28h
.rdata:000000014000BB9C                 UNWIND_CODE <0Fh, 0F0h> ; UWOP_PUSH_NONVOL
.rdata:000000014000BB9E                 UNWIND_CODE <0Dh, 0E0h> ; UWOP_PUSH_NONVOL
.rdata:000000014000BBA0                 UNWIND_CODE <0Bh, 50h>  ; UWOP_PUSH_NONVOL
.rdata:000000014000BBA2                 align 4
.rdata:000000014000BBA4                 dd rva __GSHandlerCheck
.rdata:000000014000BBA8                 dd 138h
.rdata:000000014000BBAC stru_14000BBAC  UNWIND_INFO_HDR <2, 18h, 0Ch, 0>
.rdata:000000014000BBAC                                         ; DATA XREF: .pdata:000000014000E054↓o
.rdata:000000014000BBAC                                         ; .pdata:000000014000E0A8↓o
.rdata:000000014000BBB0                 UNWIND_CODE <6, 16h>    ; UWOP_EPILOG
.rdata:000000014000BBB2                 UNWIND_CODE <0, 6>      ; UWOP_EPILOG
.rdata:000000014000BBB4                 UNWIND_CODE <18h, 64h>  ; UWOP_SAVE_NONVOL
.rdata:000000014000BBB6                 dw 0Ch
.rdata:000000014000BBB8                 UNWIND_CODE <18h, 54h>  ; UWOP_SAVE_NONVOL
.rdata:000000014000BBBA                 dw 0Bh
.rdata:000000014000BBBC                 UNWIND_CODE <18h, 34h>  ; UWOP_SAVE_NONVOL
.rdata:000000014000BBBE                 dw 0Ah
.rdata:000000014000BBC0                 UNWIND_CODE <18h, 52h>  ; UWOP_ALLOC_SMALL
.rdata:000000014000BBC2                 UNWIND_CODE <14h, 0E0h> ; UWOP_PUSH_NONVOL
.rdata:000000014000BBC4                 UNWIND_CODE <12h, 0C0h> ; UWOP_PUSH_NONVOL
.rdata:000000014000BBC6                 UNWIND_CODE <10h, 70h>  ; UWOP_PUSH_NONVOL
.rdata:000000014000BBC8 stru_14000BBC8  UNWIND_INFO_HDR <1Ah, 26h, 0Ch, 0>
.rdata:000000014000BBC8                                         ; DATA XREF: .pdata:000000014000E090↓o
.rdata:000000014000BBCC                 UNWIND_CODE <0Ch, 16h>  ; UWOP_EPILOG
.rdata:000000014000BBCE                 UNWIND_CODE <0, 6>      ; UWOP_EPILOG
.rdata:000000014000BBD0                 UNWIND_CODE <17h, 34h>  ; UWOP_SAVE_NONVOL
.rdata:000000014000BBD2                 dw 1Bh
.rdata:000000014000BBD4                 UNWIND_CODE <17h, 0F2h> ; UWOP_ALLOC_SMALL
.rdata:000000014000BBD6                 UNWIND_CODE <10h, 0F0h> ; UWOP_PUSH_NONVOL
.rdata:000000014000BBD8                 UNWIND_CODE <0Eh, 0E0h> ; UWOP_PUSH_NONVOL
.rdata:000000014000BBDA                 UNWIND_CODE <0Ch, 0D0h> ; UWOP_PUSH_NONVOL
.rdata:000000014000BBDC                 UNWIND_CODE <0Ah, 0C0h> ; UWOP_PUSH_NONVOL
.rdata:000000014000BBDE                 UNWIND_CODE <8, 70h>    ; UWOP_PUSH_NONVOL
.rdata:000000014000BBE0                 UNWIND_CODE <7, 60h>    ; UWOP_PUSH_NONVOL
.rdata:000000014000BBE2                 UNWIND_CODE <6, 50h>    ; UWOP_PUSH_NONVOL
.rdata:000000014000BBE4                 dd rva __GSHandlerCheck
.rdata:000000014000BBE8                 dd 78h
.rdata:000000014000BBEC stru_14000BBEC  UNWIND_INFO_HDR <2, 1Ch, 0Eh, 0>
.rdata:000000014000BBEC                                         ; DATA XREF: .pdata:000000014000E0B4↓o
.rdata:000000014000BBF0                 UNWIND_CODE <0Ah, 16h>  ; UWOP_EPILOG
.rdata:000000014000BBF2                 UNWIND_CODE <0, 6>      ; UWOP_EPILOG
.rdata:000000014000BBF4                 UNWIND_CODE <1Ch, 64h>  ; UWOP_SAVE_NONVOL
.rdata:000000014000BBF6                 dw 10h
.rdata:000000014000BBF8                 UNWIND_CODE <1Ch, 54h>  ; UWOP_SAVE_NONVOL
.rdata:000000014000BBFA                 dw 0Fh
.rdata:000000014000BBFC                 UNWIND_CODE <1Ch, 34h>  ; UWOP_SAVE_NONVOL
.rdata:000000014000BBFE                 dw 0Eh
.rdata:000000014000BC00                 UNWIND_CODE <1Ch, 72h>  ; UWOP_ALLOC_SMALL
.rdata:000000014000BC02                 UNWIND_CODE <18h, 0F0h> ; UWOP_PUSH_NONVOL
.rdata:000000014000BC04                 UNWIND_CODE <16h, 0E0h> ; UWOP_PUSH_NONVOL
.rdata:000000014000BC06                 UNWIND_CODE <14h, 0D0h> ; UWOP_PUSH_NONVOL
.rdata:000000014000BC08                 UNWIND_CODE <12h, 0C0h> ; UWOP_PUSH_NONVOL
.rdata:000000014000BC0A                 UNWIND_CODE <10h, 70h>  ; UWOP_PUSH_NONVOL
.rdata:000000014000BC0C stru_14000BC0C  UNWIND_INFO_HDR <1Ah, 2Ah, 0Dh, 0>
.rdata:000000014000BC0C                                         ; DATA XREF: .pdata:000000014000E0C0↓o
.rdata:000000014000BC10                 UNWIND_CODE <0Ch, 16h>  ; UWOP_EPILOG
.rdata:000000014000BC12                 UNWIND_CODE <0, 6>      ; UWOP_EPILOG
.rdata:000000014000BC14                 UNWIND_CODE <1Ch, 34h>  ; UWOP_SAVE_NONVOL
.rdata:000000014000BC16                 dw 22h
.rdata:000000014000BC18                 UNWIND_CODE <1Ch, 1>    ; UWOP_ALLOC_LARGE
.rdata:000000014000BC1A                 dw 18h
.rdata:000000014000BC1C                 UNWIND_CODE <10h, 0F0h> ; UWOP_PUSH_NONVOL
.rdata:000000014000BC1E                 UNWIND_CODE <0Eh, 0E0h> ; UWOP_PUSH_NONVOL
.rdata:000000014000BC20                 UNWIND_CODE <0Ch, 0D0h> ; UWOP_PUSH_NONVOL
.rdata:000000014000BC22                 UNWIND_CODE <0Ah, 0C0h> ; UWOP_PUSH_NONVOL
.rdata:000000014000BC24                 UNWIND_CODE <8, 70h>    ; UWOP_PUSH_NONVOL
.rdata:000000014000BC26                 UNWIND_CODE <7, 60h>    ; UWOP_PUSH_NONVOL
.rdata:000000014000BC28                 UNWIND_CODE <6, 50h>    ; UWOP_PUSH_NONVOL
.rdata:000000014000BC2A                 align 4
.rdata:000000014000BC2C                 dd rva __GSHandlerCheck
.rdata:000000014000BC30                 dd 0B8h
.rdata:000000014000BC34 stru_14000BC34  UNWIND_INFO_HDR <1Ah, 31h, 0Fh, 0>
.rdata:000000014000BC34                                         ; DATA XREF: .pdata:000000014000E078↓o
.rdata:000000014000BC38                 UNWIND_CODE <0Ah, 16h>  ; UWOP_EPILOG
.rdata:000000014000BC3A                 UNWIND_CODE <0, 6>      ; UWOP_EPILOG
.rdata:000000014000BC3C                 UNWIND_CODE <23h, 74h>  ; UWOP_SAVE_NONVOL
.rdata:000000014000BC3E                 dw 2Dh
.rdata:000000014000BC40                 UNWIND_CODE <23h, 64h>  ; UWOP_SAVE_NONVOL
.rdata:000000014000BC42                 dw 2Ch
.rdata:000000014000BC44                 UNWIND_CODE <23h, 34h>  ; UWOP_SAVE_NONVOL
.rdata:000000014000BC46                 dw 2Bh
.rdata:000000014000BC48                 UNWIND_CODE <23h, 1>    ; UWOP_ALLOC_LARGE
.rdata:000000014000BC4A                 dw 24h
.rdata:000000014000BC4C                 UNWIND_CODE <18h, 0F0h> ; UWOP_PUSH_NONVOL
.rdata:000000014000BC4E                 UNWIND_CODE <16h, 0E0h> ; UWOP_PUSH_NONVOL
.rdata:000000014000BC50                 UNWIND_CODE <14h, 0D0h> ; UWOP_PUSH_NONVOL
.rdata:000000014000BC52                 UNWIND_CODE <12h, 0C0h> ; UWOP_PUSH_NONVOL
.rdata:000000014000BC54                 UNWIND_CODE <10h, 50h>  ; UWOP_PUSH_NONVOL
.rdata:000000014000BC56                 align 4
.rdata:000000014000BC58                 dd rva __GSHandlerCheck
.rdata:000000014000BC5C                 dd 110h
.rdata:000000014000BC60 stru_14000BC60  UNWIND_INFO_HDR <1Ah, 27h, 0Ch, 0>
.rdata:000000014000BC60                                         ; DATA XREF: .pdata:000000014000E0F0↓o
.rdata:000000014000BC64                 UNWIND_CODE <9, 16h>    ; UWOP_EPILOG
.rdata:000000014000BC66                 UNWIND_CODE <0, 6>      ; UWOP_EPILOG
.rdata:000000014000BC68                 UNWIND_CODE <19h, 64h>  ; UWOP_SAVE_NONVOL
.rdata:000000014000BC6A                 dw 12h
.rdata:000000014000BC6C                 UNWIND_CODE <19h, 34h>  ; UWOP_SAVE_NONVOL
.rdata:000000014000BC6E                 dw 11h
.rdata:000000014000BC70                 UNWIND_CODE <19h, 92h>  ; UWOP_ALLOC_SMALL
.rdata:000000014000BC72                 UNWIND_CODE <12h, 0F0h> ; UWOP_PUSH_NONVOL
.rdata:000000014000BC74                 UNWIND_CODE <10h, 0E0h> ; UWOP_PUSH_NONVOL
.rdata:000000014000BC76                 UNWIND_CODE <0Eh, 0C0h> ; UWOP_PUSH_NONVOL
.rdata:000000014000BC78                 UNWIND_CODE <0Ch, 70h>  ; UWOP_PUSH_NONVOL
.rdata:000000014000BC7A                 UNWIND_CODE <0Bh, 50h>  ; UWOP_PUSH_NONVOL
.rdata:000000014000BC7C                 dd rva __GSHandlerCheck
.rdata:000000014000BC80                 dd 48h
.rdata:000000014000BC84 stru_14000BC84  UNWIND_INFO_HDR <1Ah, 22h, 0Bh, 0>
.rdata:000000014000BC84                                         ; DATA XREF: .pdata:000000014000E138↓o
.rdata:000000014000BC88                 UNWIND_CODE <0Dh, 16h>  ; UWOP_EPILOG
.rdata:000000014000BC8A                 UNWIND_CODE <0, 6>      ; UWOP_EPILOG
.rdata:000000014000BC8C                 UNWIND_CODE <14h, 0A2h> ; UWOP_ALLOC_SMALL
.rdata:000000014000BC8E                 UNWIND_CODE <0Dh, 0F0h> ; UWOP_PUSH_NONVOL
.rdata:000000014000BC90                 UNWIND_CODE <0Bh, 0E0h> ; UWOP_PUSH_NONVOL
.rdata:000000014000BC92                 UNWIND_CODE <9, 0D0h>   ; UWOP_PUSH_NONVOL
.rdata:000000014000BC94                 UNWIND_CODE <7, 0C0h>   ; UWOP_PUSH_NONVOL
.rdata:000000014000BC96                 UNWIND_CODE <5, 70h>    ; UWOP_PUSH_NONVOL
.rdata:000000014000BC98                 UNWIND_CODE <4, 60h>    ; UWOP_PUSH_NONVOL
.rdata:000000014000BC9A                 UNWIND_CODE <3, 30h>    ; UWOP_PUSH_NONVOL
.rdata:000000014000BC9C                 UNWIND_CODE <2, 50h>    ; UWOP_PUSH_NONVOL
.rdata:000000014000BC9E                 align 4
.rdata:000000014000BCA0                 dd rva __GSHandlerCheck
.rdata:000000014000BCA4                 dd 40h
.rdata:000000014000BCA8 stru_14000BCA8  UNWIND_INFO_HDR <2, 1Dh, 0Eh, 0>
.rdata:000000014000BCA8                                         ; DATA XREF: .pdata:000000014000E060↓o
.rdata:000000014000BCAC                 UNWIND_CODE <7, 16h>    ; UWOP_EPILOG
.rdata:000000014000BCAE                 UNWIND_CODE <0, 6>      ; UWOP_EPILOG
.rdata:000000014000BCB0                 UNWIND_CODE <1Dh, 74h>  ; UWOP_SAVE_NONVOL
.rdata:000000014000BCB2                 dw 0Dh
.rdata:000000014000BCB4                 UNWIND_CODE <1Dh, 64h>  ; UWOP_SAVE_NONVOL
.rdata:000000014000BCB6                 dw 0Ch
.rdata:000000014000BCB8                 UNWIND_CODE <1Dh, 54h>  ; UWOP_SAVE_NONVOL
.rdata:000000014000BCBA                 dw 0Bh
.rdata:000000014000BCBC                 UNWIND_CODE <1Dh, 34h>  ; UWOP_SAVE_NONVOL
.rdata:000000014000BCBE                 dw 0Ah
.rdata:000000014000BCC0                 UNWIND_CODE <1Dh, 52h>  ; UWOP_ALLOC_SMALL
.rdata:000000014000BCC2                 UNWIND_CODE <19h, 0F0h> ; UWOP_PUSH_NONVOL
.rdata:000000014000BCC4                 UNWIND_CODE <17h, 0E0h> ; UWOP_PUSH_NONVOL
.rdata:000000014000BCC6                 UNWIND_CODE <15h, 0C0h> ; UWOP_PUSH_NONVOL
.rdata:000000014000BCC8 stru_14000BCC8  UNWIND_INFO_HDR <1Ah, 2Ah, 0Dh, 0>
.rdata:000000014000BCC8                                         ; DATA XREF: .pdata:000000014000E114↓o
.rdata:000000014000BCCC                 UNWIND_CODE <0Ch, 16h>  ; UWOP_EPILOG
.rdata:000000014000BCCE                 UNWIND_CODE <0, 6>      ; UWOP_EPILOG
.rdata:000000014000BCD0                 UNWIND_CODE <1Ch, 34h>  ; UWOP_SAVE_NONVOL
.rdata:000000014000BCD2                 dw 29h
.rdata:000000014000BCD4                 UNWIND_CODE <1Ch, 1>    ; UWOP_ALLOC_LARGE
.rdata:000000014000BCD6                 dw 1Eh
.rdata:000000014000BCD8                 UNWIND_CODE <10h, 0F0h> ; UWOP_PUSH_NONVOL
.rdata:000000014000BCDA                 UNWIND_CODE <0Eh, 0E0h> ; UWOP_PUSH_NONVOL
.rdata:000000014000BCDC                 UNWIND_CODE <0Ch, 0D0h> ; UWOP_PUSH_NONVOL
.rdata:000000014000BCDE                 UNWIND_CODE <0Ah, 0C0h> ; UWOP_PUSH_NONVOL
.rdata:000000014000BCE0                 UNWIND_CODE <8, 70h>    ; UWOP_PUSH_NONVOL
.rdata:000000014000BCE2                 UNWIND_CODE <7, 60h>    ; UWOP_PUSH_NONVOL
.rdata:000000014000BCE4                 UNWIND_CODE <6, 50h>    ; UWOP_PUSH_NONVOL
.rdata:000000014000BCE6                 align 4
.rdata:000000014000BCE8                 dd rva __GSHandlerCheck
.rdata:000000014000BCEC                 dd 0E0h
.rdata:000000014000BCF0 stru_14000BCF0  UNWIND_INFO_HDR <1Ah, 2Ah, 0Dh, 0>
.rdata:000000014000BCF0                                         ; DATA XREF: .pdata:000000014000E0FC↓o
.rdata:000000014000BCF4                 UNWIND_CODE <0Ch, 16h>  ; UWOP_EPILOG
.rdata:000000014000BCF6                 UNWIND_CODE <0, 6>      ; UWOP_EPILOG
.rdata:000000014000BCF8                 UNWIND_CODE <1Ch, 34h>  ; UWOP_SAVE_NONVOL
.rdata:000000014000BCFA                 dw 26h
.rdata:000000014000BCFC                 UNWIND_CODE <1Ch, 1>    ; UWOP_ALLOC_LARGE
.rdata:000000014000BCFE                 dw 1Ch
.rdata:000000014000BD00                 UNWIND_CODE <10h, 0F0h> ; UWOP_PUSH_NONVOL
.rdata:000000014000BD02                 UNWIND_CODE <0Eh, 0E0h> ; UWOP_PUSH_NONVOL
.rdata:000000014000BD04                 UNWIND_CODE <0Ch, 0D0h> ; UWOP_PUSH_NONVOL
.rdata:000000014000BD06                 UNWIND_CODE <0Ah, 0C0h> ; UWOP_PUSH_NONVOL
.rdata:000000014000BD08                 UNWIND_CODE <8, 70h>    ; UWOP_PUSH_NONVOL
.rdata:000000014000BD0A                 UNWIND_CODE <7, 60h>    ; UWOP_PUSH_NONVOL
.rdata:000000014000BD0C                 UNWIND_CODE <6, 50h>    ; UWOP_PUSH_NONVOL
.rdata:000000014000BD0E                 align 4
.rdata:000000014000BD10                 dd rva __GSHandlerCheck
.rdata:000000014000BD14                 dd 0D0h
.rdata:000000014000BD18 stru_14000BD18  UNWIND_INFO_HDR <1Ah, 27h, 0Ch, 0>
.rdata:000000014000BD18                                         ; DATA XREF: .pdata:000000014000E144↓o
.rdata:000000014000BD1C                 UNWIND_CODE <6, 16h>    ; UWOP_EPILOG
.rdata:000000014000BD1E                 UNWIND_CODE <0, 6>      ; UWOP_EPILOG
.rdata:000000014000BD20                 UNWIND_CODE <18h, 64h>  ; UWOP_SAVE_NONVOL
.rdata:000000014000BD22                 dw 11h
.rdata:000000014000BD24                 UNWIND_CODE <18h, 54h>  ; UWOP_SAVE_NONVOL
.rdata:000000014000BD26                 dw 10h
.rdata:000000014000BD28                 UNWIND_CODE <18h, 34h>  ; UWOP_SAVE_NONVOL
.rdata:000000014000BD2A                 dw 0Fh
.rdata:000000014000BD2C                 UNWIND_CODE <18h, 92h>  ; UWOP_ALLOC_SMALL
.rdata:000000014000BD2E                 UNWIND_CODE <14h, 0F0h> ; UWOP_PUSH_NONVOL
.rdata:000000014000BD30                 UNWIND_CODE <12h, 0C0h> ; UWOP_PUSH_NONVOL
.rdata:000000014000BD32                 UNWIND_CODE <10h, 70h>  ; UWOP_PUSH_NONVOL
.rdata:000000014000BD34                 dd rva __GSHandlerCheck
.rdata:000000014000BD38                 dd 48h
.rdata:000000014000BD3C stru_14000BD3C  UNWIND_INFO_HDR <1Ah, 2Ah, 0Dh, 0>
.rdata:000000014000BD3C                                         ; DATA XREF: .pdata:000000014000E0E4↓o
.rdata:000000014000BD40                 UNWIND_CODE <0Ch, 16h>  ; UWOP_EPILOG
.rdata:000000014000BD42                 UNWIND_CODE <0, 6>      ; UWOP_EPILOG
.rdata:000000014000BD44                 UNWIND_CODE <1Ch, 34h>  ; UWOP_SAVE_NONVOL
.rdata:000000014000BD46                 dw 36h
.rdata:000000014000BD48                 UNWIND_CODE <1Ch, 1>    ; UWOP_ALLOC_LARGE
.rdata:000000014000BD4A                 dw 2Ch
.rdata:000000014000BD4C                 UNWIND_CODE <10h, 0F0h> ; UWOP_PUSH_NONVOL
.rdata:000000014000BD4E                 UNWIND_CODE <0Eh, 0E0h> ; UWOP_PUSH_NONVOL
.rdata:000000014000BD50                 UNWIND_CODE <0Ch, 0D0h> ; UWOP_PUSH_NONVOL
.rdata:000000014000BD52                 UNWIND_CODE <0Ah, 0C0h> ; UWOP_PUSH_NONVOL
.rdata:000000014000BD54                 UNWIND_CODE <8, 70h>    ; UWOP_PUSH_NONVOL
.rdata:000000014000BD56                 UNWIND_CODE <7, 60h>    ; UWOP_PUSH_NONVOL
.rdata:000000014000BD58                 UNWIND_CODE <6, 50h>    ; UWOP_PUSH_NONVOL
.rdata:000000014000BD5A                 align 4
.rdata:000000014000BD5C                 dd rva __GSHandlerCheck
.rdata:000000014000BD60                 dd 150h
.rdata:000000014000BD64 stru_14000BD64  UNWIND_INFO_HDR <2, 1Ch, 0Eh, 0>
.rdata:000000014000BD64                                         ; DATA XREF: .pdata:000000014000E0CC↓o
.rdata:000000014000BD68                 UNWIND_CODE <0Ah, 16h>  ; UWOP_EPILOG
.rdata:000000014000BD6A                 UNWIND_CODE <0, 6>      ; UWOP_EPILOG
.rdata:000000014000BD6C                 UNWIND_CODE <1Ch, 64h>  ; UWOP_SAVE_NONVOL
.rdata:000000014000BD6E                 dw 0Fh
.rdata:000000014000BD70                 UNWIND_CODE <1Ch, 54h>  ; UWOP_SAVE_NONVOL
.rdata:000000014000BD72                 dw 0Dh
.rdata:000000014000BD74                 UNWIND_CODE <1Ch, 34h>  ; UWOP_SAVE_NONVOL
.rdata:000000014000BD76                 dw 0Ch
.rdata:000000014000BD78                 UNWIND_CODE <1Ch, 52h>  ; UWOP_ALLOC_SMALL
.rdata:000000014000BD7A                 UNWIND_CODE <18h, 0F0h> ; UWOP_PUSH_NONVOL
.rdata:000000014000BD7C                 UNWIND_CODE <16h, 0E0h> ; UWOP_PUSH_NONVOL
.rdata:000000014000BD7E                 UNWIND_CODE <14h, 0D0h> ; UWOP_PUSH_NONVOL
.rdata:000000014000BD80                 UNWIND_CODE <12h, 0C0h> ; UWOP_PUSH_NONVOL
.rdata:000000014000BD82                 UNWIND_CODE <10h, 70h>  ; UWOP_PUSH_NONVOL
.rdata:000000014000BD84 stru_14000BD84  UNWIND_INFO_HDR <1Ah, 27h, 0Ch, 0>
.rdata:000000014000BD84                                         ; DATA XREF: .pdata:000000014000E0D8↓o
.rdata:000000014000BD88                 UNWIND_CODE <0Dh, 16h>  ; UWOP_EPILOG
.rdata:000000014000BD8A                 UNWIND_CODE <0, 6>      ; UWOP_EPILOG
.rdata:000000014000BD8C                 UNWIND_CODE <19h, 1>    ; UWOP_ALLOC_LARGE
.rdata:000000014000BD8E                 dw 17h
.rdata:000000014000BD90                 UNWIND_CODE <0Dh, 0F0h> ; UWOP_PUSH_NONVOL
.rdata:000000014000BD92                 UNWIND_CODE <0Bh, 0E0h> ; UWOP_PUSH_NONVOL
.rdata:000000014000BD94                 UNWIND_CODE <9, 0D0h>   ; UWOP_PUSH_NONVOL
.rdata:000000014000BD96                 UNWIND_CODE <7, 0C0h>   ; UWOP_PUSH_NONVOL
.rdata:000000014000BD98                 UNWIND_CODE <5, 70h>    ; UWOP_PUSH_NONVOL
.rdata:000000014000BD9A                 UNWIND_CODE <4, 60h>    ; UWOP_PUSH_NONVOL
.rdata:000000014000BD9C                 UNWIND_CODE <3, 30h>    ; UWOP_PUSH_NONVOL
.rdata:000000014000BD9E                 UNWIND_CODE <2, 50h>    ; UWOP_PUSH_NONVOL
.rdata:000000014000BDA0                 dd rva __GSHandlerCheck
.rdata:000000014000BDA4                 dd 0A8h
.rdata:000000014000BDA8 stru_14000BDA8  UNWIND_INFO_HDR <2, 15h, 0Ah, 0>
.rdata:000000014000BDA8                                         ; DATA XREF: .pdata:000000014000E048↓o
.rdata:000000014000BDA8                                         ; .pdata:000000014000E330↓o
.rdata:000000014000BDAC                 UNWIND_CODE <3, 16h>    ; UWOP_EPILOG
.rdata:000000014000BDAE                 UNWIND_CODE <0, 6>      ; UWOP_EPILOG
.rdata:000000014000BDB0                 UNWIND_CODE <15h, 74h>  ; UWOP_SAVE_NONVOL
.rdata:000000014000BDB2                 dw 0Ah
.rdata:000000014000BDB4                 UNWIND_CODE <15h, 64h>  ; UWOP_SAVE_NONVOL
.rdata:000000014000BDB6                 dw 9
.rdata:000000014000BDB8                 UNWIND_CODE <15h, 34h>  ; UWOP_SAVE_NONVOL
.rdata:000000014000BDBA                 dw 8
.rdata:000000014000BDBC                 UNWIND_CODE <15h, 52h>  ; UWOP_ALLOC_SMALL
.rdata:000000014000BDBE                 UNWIND_CODE <11h, 0E0h> ; UWOP_PUSH_NONVOL
.rdata:000000014000BDC0 stru_14000BDC0  UNWIND_INFO_HDR <1Ah, 2Ah, 0Dh, 0>
.rdata:000000014000BDC0                                         ; DATA XREF: .pdata:000000014000E108↓o
.rdata:000000014000BDC4                 UNWIND_CODE <0Ch, 16h>  ; UWOP_EPILOG
.rdata:000000014000BDC6                 UNWIND_CODE <0, 6>      ; UWOP_EPILOG
.rdata:000000014000BDC8                 UNWIND_CODE <1Ch, 34h>  ; UWOP_SAVE_NONVOL
.rdata:000000014000BDCA                 dw 35h
.rdata:000000014000BDCC                 UNWIND_CODE <1Ch, 1>    ; UWOP_ALLOC_LARGE
.rdata:000000014000BDCE                 dw 2Ch
.rdata:000000014000BDD0                 UNWIND_CODE <10h, 0F0h> ; UWOP_PUSH_NONVOL
.rdata:000000014000BDD2                 UNWIND_CODE <0Eh, 0E0h> ; UWOP_PUSH_NONVOL
.rdata:000000014000BDD4                 UNWIND_CODE <0Ch, 0D0h> ; UWOP_PUSH_NONVOL
.rdata:000000014000BDD6                 UNWIND_CODE <0Ah, 0C0h> ; UWOP_PUSH_NONVOL
.rdata:000000014000BDD8                 UNWIND_CODE <8, 70h>    ; UWOP_PUSH_NONVOL
.rdata:000000014000BDDA                 UNWIND_CODE <7, 60h>    ; UWOP_PUSH_NONVOL
.rdata:000000014000BDDC                 UNWIND_CODE <6, 50h>    ; UWOP_PUSH_NONVOL
.rdata:000000014000BDDE                 align 4
.rdata:000000014000BDE0                 dd rva __GSHandlerCheck
.rdata:000000014000BDE4                 dd 150h
.rdata:000000014000BDE8 stru_14000BDE8  UNWIND_INFO_HDR <2, 15h, 0Ah, 0>
.rdata:000000014000BDE8                                         ; DATA XREF: .pdata:000000014000E084↓o
.rdata:000000014000BDEC                 UNWIND_CODE <3, 16h>    ; UWOP_EPILOG
.rdata:000000014000BDEE                 UNWIND_CODE <0, 6>      ; UWOP_EPILOG
.rdata:000000014000BDF0                 UNWIND_CODE <15h, 74h>  ; UWOP_SAVE_NONVOL
.rdata:000000014000BDF2                 dw 0Ah
.rdata:000000014000BDF4                 UNWIND_CODE <15h, 54h>  ; UWOP_SAVE_NONVOL
.rdata:000000014000BDF6                 dw 9
.rdata:000000014000BDF8                 UNWIND_CODE <15h, 34h>  ; UWOP_SAVE_NONVOL
.rdata:000000014000BDFA                 dw 8
.rdata:000000014000BDFC                 UNWIND_CODE <15h, 52h>  ; UWOP_ALLOC_SMALL
.rdata:000000014000BDFE                 UNWIND_CODE <11h, 0E0h> ; UWOP_PUSH_NONVOL
.rdata:000000014000BE00 stru_14000BE00  UNWIND_INFO_HDR <1Ah, 26h, 0Ch, 0>
.rdata:000000014000BE00                                         ; DATA XREF: .pdata:000000014000E120↓o
.rdata:000000014000BE00                                         ; .pdata:000000014000E12C↓o
.rdata:000000014000BE04                 UNWIND_CODE <9, 16h>    ; UWOP_EPILOG
.rdata:000000014000BE06                 UNWIND_CODE <0, 6>      ; UWOP_EPILOG
.rdata:000000014000BE08                 UNWIND_CODE <17h, 54h>  ; UWOP_SAVE_NONVOL
.rdata:000000014000BE0A                 dw 13h
.rdata:000000014000BE0C                 UNWIND_CODE <17h, 34h>  ; UWOP_SAVE_NONVOL
.rdata:000000014000BE0E                 dw 12h
.rdata:000000014000BE10                 UNWIND_CODE <17h, 92h>  ; UWOP_ALLOC_SMALL
.rdata:000000014000BE12                 UNWIND_CODE <13h, 0F0h> ; UWOP_PUSH_NONVOL
.rdata:000000014000BE14                 UNWIND_CODE <11h, 0E0h> ; UWOP_PUSH_NONVOL
.rdata:000000014000BE16                 UNWIND_CODE <0Fh, 0C0h> ; UWOP_PUSH_NONVOL
.rdata:000000014000BE18                 UNWIND_CODE <0Dh, 70h>  ; UWOP_PUSH_NONVOL
.rdata:000000014000BE1A                 UNWIND_CODE <0Ch, 60h>  ; UWOP_PUSH_NONVOL
.rdata:000000014000BE1C                 dd rva __GSHandlerCheck
.rdata:000000014000BE20                 dd 48h
.rdata:000000014000BE24 stru_14000BE24  UNWIND_INFO_HDR <2, 0Fh, 9, 0>
.rdata:000000014000BE24                                         ; DATA XREF: .pdata:000000014000E150↓o
.rdata:000000014000BE28                 UNWIND_CODE <9, 16h>    ; UWOP_EPILOG
.rdata:000000014000BE2A                 UNWIND_CODE <0, 6>      ; UWOP_EPILOG
.rdata:000000014000BE2C                 UNWIND_CODE <0Fh, 0E2h> ; UWOP_ALLOC_SMALL
.rdata:000000014000BE2E                 UNWIND_CODE <0Bh, 0F0h> ; UWOP_PUSH_NONVOL
.rdata:000000014000BE30                 UNWIND_CODE <9, 0E0h>   ; UWOP_PUSH_NONVOL
.rdata:000000014000BE32                 UNWIND_CODE <7, 70h>    ; UWOP_PUSH_NONVOL
.rdata:000000014000BE34                 UNWIND_CODE <6, 60h>    ; UWOP_PUSH_NONVOL
.rdata:000000014000BE36                 UNWIND_CODE <5, 50h>    ; UWOP_PUSH_NONVOL
.rdata:000000014000BE38                 UNWIND_CODE <4, 30h>    ; UWOP_PUSH_NONVOL
.rdata:000000014000BE3A                 align 4
.rdata:000000014000BE3C stru_14000BE3C  UNWIND_INFO_HDR <2, 1Eh, 0Ch, 0>
.rdata:000000014000BE3C                                         ; DATA XREF: .pdata:000000014000E168↓o
.rdata:000000014000BE40                 UNWIND_CODE <0Ch, 16h>  ; UWOP_EPILOG
.rdata:000000014000BE42                 UNWIND_CODE <0, 6>      ; UWOP_EPILOG
.rdata:000000014000BE44                 UNWIND_CODE <1Eh, 34h>  ; UWOP_SAVE_NONVOL
.rdata:000000014000BE46                 dw 11h
.rdata:000000014000BE48                 UNWIND_CODE <1Eh, 72h>  ; UWOP_ALLOC_SMALL
.rdata:000000014000BE4A                 UNWIND_CODE <1Ah, 0F0h> ; UWOP_PUSH_NONVOL
.rdata:000000014000BE4C                 UNWIND_CODE <18h, 0E0h> ; UWOP_PUSH_NONVOL
.rdata:000000014000BE4E                 UNWIND_CODE <16h, 0D0h> ; UWOP_PUSH_NONVOL
.rdata:000000014000BE50                 UNWIND_CODE <14h, 0C0h> ; UWOP_PUSH_NONVOL
.rdata:000000014000BE52                 UNWIND_CODE <12h, 70h>  ; UWOP_PUSH_NONVOL
.rdata:000000014000BE54                 UNWIND_CODE <11h, 60h>  ; UWOP_PUSH_NONVOL
.rdata:000000014000BE56                 UNWIND_CODE <10h, 50h>  ; UWOP_PUSH_NONVOL
.rdata:000000014000BE58 stru_14000BE58  UNWIND_INFO_HDR <2, 11h, 0Bh, 0>
.rdata:000000014000BE58                                         ; DATA XREF: .pdata:000000014000E174↓o
.rdata:000000014000BE5C                 UNWIND_CODE <0Dh, 16h>  ; UWOP_EPILOG
.rdata:000000014000BE5E                 UNWIND_CODE <0, 6>      ; UWOP_EPILOG
.rdata:000000014000BE60                 UNWIND_CODE <11h, 0E2h> ; UWOP_ALLOC_SMALL
.rdata:000000014000BE62                 UNWIND_CODE <0Dh, 0F0h> ; UWOP_PUSH_NONVOL
.rdata:000000014000BE64                 UNWIND_CODE <0Bh, 0E0h> ; UWOP_PUSH_NONVOL
.rdata:000000014000BE66                 UNWIND_CODE <9, 0D0h>   ; UWOP_PUSH_NONVOL
.rdata:000000014000BE68                 UNWIND_CODE <7, 0C0h>   ; UWOP_PUSH_NONVOL
.rdata:000000014000BE6A                 UNWIND_CODE <5, 70h>    ; UWOP_PUSH_NONVOL
.rdata:000000014000BE6C                 UNWIND_CODE <4, 60h>    ; UWOP_PUSH_NONVOL
.rdata:000000014000BE6E                 UNWIND_CODE <3, 50h>    ; UWOP_PUSH_NONVOL
.rdata:000000014000BE70                 UNWIND_CODE <2, 30h>    ; UWOP_PUSH_NONVOL
.rdata:000000014000BE72                 align 4
.rdata:000000014000BE74 stru_14000BE74  UNWIND_INFO_HDR <2, 18h, 0Ch, 0>
.rdata:000000014000BE74                                         ; DATA XREF: .pdata:000000014000E18C↓o
.rdata:000000014000BE78                 UNWIND_CODE <6, 16h>    ; UWOP_EPILOG
.rdata:000000014000BE7A                 UNWIND_CODE <0, 6>      ; UWOP_EPILOG
.rdata:000000014000BE7C                 UNWIND_CODE <18h, 64h>  ; UWOP_SAVE_NONVOL
.rdata:000000014000BE7E                 dw 0Eh
.rdata:000000014000BE80                 UNWIND_CODE <18h, 54h>  ; UWOP_SAVE_NONVOL
.rdata:000000014000BE82                 dw 0Dh
.rdata:000000014000BE84                 UNWIND_CODE <18h, 34h>  ; UWOP_SAVE_NONVOL
.rdata:000000014000BE86                 dw 0Ch
.rdata:000000014000BE88                 UNWIND_CODE <18h, 72h>  ; UWOP_ALLOC_SMALL
.rdata:000000014000BE8A                 UNWIND_CODE <14h, 0F0h> ; UWOP_PUSH_NONVOL
.rdata:000000014000BE8C                 UNWIND_CODE <12h, 0E0h> ; UWOP_PUSH_NONVOL
.rdata:000000014000BE8E                 UNWIND_CODE <10h, 70h>  ; UWOP_PUSH_NONVOL
.rdata:000000014000BE90 stru_14000BE90  UNWIND_INFO_HDR <1Ah, 1Eh, 9, 0>
.rdata:000000014000BE90                                         ; DATA XREF: .pdata:000000014000E198↓o
.rdata:000000014000BE94                 UNWIND_CODE <9, 16h>    ; UWOP_EPILOG
.rdata:000000014000BE96                 UNWIND_CODE <0, 6>      ; UWOP_EPILOG
.rdata:000000014000BE98                 UNWIND_CODE <0Fh, 0E2h> ; UWOP_ALLOC_SMALL
.rdata:000000014000BE9A                 UNWIND_CODE <0Bh, 0F0h> ; UWOP_PUSH_NONVOL
.rdata:000000014000BE9C                 UNWIND_CODE <9, 0E0h>   ; UWOP_PUSH_NONVOL
.rdata:000000014000BE9E                 UNWIND_CODE <7, 70h>    ; UWOP_PUSH_NONVOL
.rdata:000000014000BEA0                 UNWIND_CODE <6, 60h>    ; UWOP_PUSH_NONVOL
.rdata:000000014000BEA2                 UNWIND_CODE <5, 50h>    ; UWOP_PUSH_NONVOL
.rdata:000000014000BEA4                 UNWIND_CODE <4, 30h>    ; UWOP_PUSH_NONVOL
.rdata:000000014000BEA6                 align 4
.rdata:000000014000BEA8                 dd rva __GSHandlerCheck
.rdata:000000014000BEAC                 dd 60h
.rdata:000000014000BEB0 stru_14000BEB0  UNWIND_INFO_HDR <1Ah, 26h, 0Bh, 0>
.rdata:000000014000BEB0                                         ; DATA XREF: .pdata:000000014000E36C↓o
.rdata:000000014000BEB4                 UNWIND_CODE <8, 16h>    ; UWOP_EPILOG
.rdata:000000014000BEB6                 UNWIND_CODE <0, 6>      ; UWOP_EPILOG
.rdata:000000014000BEB8                 UNWIND_CODE <18h, 34h>  ; UWOP_SAVE_NONVOL
.rdata:000000014000BEBA                 dw 1Ch
.rdata:000000014000BEBC                 UNWIND_CODE <18h, 1>    ; UWOP_ALLOC_LARGE
.rdata:000000014000BEBE                 dw 14h
.rdata:000000014000BEC0                 UNWIND_CODE <0Ch, 0F0h> ; UWOP_PUSH_NONVOL
.rdata:000000014000BEC2                 UNWIND_CODE <0Ah, 0C0h> ; UWOP_PUSH_NONVOL
.rdata:000000014000BEC4                 UNWIND_CODE <8, 70h>    ; UWOP_PUSH_NONVOL
.rdata:000000014000BEC6                 UNWIND_CODE <7, 60h>    ; UWOP_PUSH_NONVOL
.rdata:000000014000BEC8                 UNWIND_CODE <6, 50h>    ; UWOP_PUSH_NONVOL
.rdata:000000014000BECA                 align 4
.rdata:000000014000BECC                 dd rva __GSHandlerCheck
.rdata:000000014000BED0                 dd 98h
.rdata:000000014000BED4 stru_14000BED4  UNWIND_INFO_HDR <2, 0Fh, 8, 0>
.rdata:000000014000BED4                                         ; DATA XREF: .pdata:000000014000E324↓o
.rdata:000000014000BED8                 UNWIND_CODE <6, 16h>    ; UWOP_EPILOG
.rdata:000000014000BEDA                 UNWIND_CODE <0, 6>      ; UWOP_EPILOG
.rdata:000000014000BEDC                 UNWIND_CODE <0Fh, 54h>  ; UWOP_SAVE_NONVOL
.rdata:000000014000BEDE                 dw 9
.rdata:000000014000BEE0                 UNWIND_CODE <0Fh, 34h>  ; UWOP_SAVE_NONVOL
.rdata:000000014000BEE2                 dw 8
.rdata:000000014000BEE4                 UNWIND_CODE <0Fh, 52h>  ; UWOP_ALLOC_SMALL
.rdata:000000014000BEE6                 UNWIND_CODE <0Bh, 70h>  ; UWOP_PUSH_NONVOL
.rdata:000000014000BEE8 stru_14000BEE8  UNWIND_INFO_HDR <1Ah, 17h, 4, 0>
.rdata:000000014000BEE8                                         ; DATA XREF: .pdata:000000014000E354↓o
.rdata:000000014000BEEC                 UNWIND_CODE <2, 16h>    ; UWOP_EPILOG
.rdata:000000014000BEEE                 UNWIND_CODE <0, 6>      ; UWOP_EPILOG
.rdata:000000014000BEF0                 UNWIND_CODE <9, 92h>    ; UWOP_ALLOC_SMALL
.rdata:000000014000BEF2                 UNWIND_CODE <2, 50h>    ; UWOP_PUSH_NONVOL
.rdata:000000014000BEF4                 dd rva __GSHandlerCheck
.rdata:000000014000BEF8                 dd 48h
.rdata:000000014000BEFC stru_14000BEFC  UNWIND_INFO_HDR <1Ah, 23h, 0Ch, 0>
.rdata:000000014000BEFC                                         ; DATA XREF: .pdata:000000014000E360↓o
.rdata:000000014000BF00                 UNWIND_CODE <0Ch, 16h>  ; UWOP_EPILOG
.rdata:000000014000BF02                 UNWIND_CODE <0, 6>      ; UWOP_EPILOG
.rdata:000000014000BF04                 UNWIND_CODE <14h, 34h>  ; UWOP_SAVE_NONVOL
.rdata:000000014000BF06                 dw 12h
.rdata:000000014000BF08                 UNWIND_CODE <14h, 92h>  ; UWOP_ALLOC_SMALL
.rdata:000000014000BF0A                 UNWIND_CODE <10h, 0F0h> ; UWOP_PUSH_NONVOL
.rdata:000000014000BF0C                 UNWIND_CODE <0Eh, 0E0h> ; UWOP_PUSH_NONVOL
.rdata:000000014000BF0E                 UNWIND_CODE <0Ch, 0D0h> ; UWOP_PUSH_NONVOL
.rdata:000000014000BF10                 UNWIND_CODE <0Ah, 0C0h> ; UWOP_PUSH_NONVOL
.rdata:000000014000BF12                 UNWIND_CODE <8, 70h>    ; UWOP_PUSH_NONVOL
.rdata:000000014000BF14                 UNWIND_CODE <7, 60h>    ; UWOP_PUSH_NONVOL
.rdata:000000014000BF16                 UNWIND_CODE <6, 50h>    ; UWOP_PUSH_NONVOL
.rdata:000000014000BF18                 dd rva __GSHandlerCheck
.rdata:000000014000BF1C                 dd 40h
.rdata:000000014000BF20 stru_14000BF20  UNWIND_INFO_HDR <2, 0Fh, 8, 0>
.rdata:000000014000BF20                                         ; DATA XREF: .pdata:000000014000E33C↓o
.rdata:000000014000BF24                 UNWIND_CODE <2, 6>      ; UWOP_EPILOG
.rdata:000000014000BF26                 UNWIND_CODE <28h, 6>    ; UWOP_EPILOG
.rdata:000000014000BF28                 UNWIND_CODE <0Fh, 64h>  ; UWOP_SAVE_NONVOL
.rdata:000000014000BF2A                 dw 7
.rdata:000000014000BF2C                 UNWIND_CODE <0Fh, 34h>  ; UWOP_SAVE_NONVOL
.rdata:000000014000BF2E                 dw 6
.rdata:000000014000BF30                 UNWIND_CODE <0Fh, 32h>  ; UWOP_ALLOC_SMALL
.rdata:000000014000BF32                 UNWIND_CODE <0Bh, 70h>  ; UWOP_PUSH_NONVOL
.rdata:000000014000BF34 stru_14000BF34  UNWIND_INFO_HDR <2, 14h, 0Ah, 0>
.rdata:000000014000BF34                                         ; DATA XREF: .pdata:000000014000E348↓o
.rdata:000000014000BF38                 UNWIND_CODE <2, 16h>    ; UWOP_EPILOG
.rdata:000000014000BF3A                 UNWIND_CODE <0, 6>      ; UWOP_EPILOG
.rdata:000000014000BF3C                 UNWIND_CODE <14h, 64h>  ; UWOP_SAVE_NONVOL
.rdata:000000014000BF3E                 dw 0Ah
.rdata:000000014000BF40                 UNWIND_CODE <14h, 54h>  ; UWOP_SAVE_NONVOL
.rdata:000000014000BF42                 dw 9
.rdata:000000014000BF44                 UNWIND_CODE <14h, 34h>  ; UWOP_SAVE_NONVOL
.rdata:000000014000BF46                 dw 8
.rdata:000000014000BF48                 UNWIND_CODE <14h, 52h>  ; UWOP_ALLOC_SMALL
.rdata:000000014000BF4A                 UNWIND_CODE <10h, 70h>  ; UWOP_PUSH_NONVOL
.rdata:000000014000BF4C stru_14000BF4C  UNWIND_INFO_HDR <1Ah, 2Ah, 0Bh, 0>
.rdata:000000014000BF4C                                         ; DATA XREF: .pdata:000000014000E1A4↓o
.rdata:000000014000BF50                 UNWIND_CODE <3, 16h>    ; UWOP_EPILOG
.rdata:000000014000BF52                 UNWIND_CODE <0, 6>      ; UWOP_EPILOG
.rdata:000000014000BF54                 UNWIND_CODE <18h, 0E4h> ; UWOP_SAVE_NONVOL
.rdata:000000014000BF56                 dw 1Bh
.rdata:000000014000BF58                 UNWIND_CODE <18h, 54h>  ; UWOP_SAVE_NONVOL
.rdata:000000014000BF5A                 dw 1Ah
.rdata:000000014000BF5C                 UNWIND_CODE <18h, 34h>  ; UWOP_SAVE_NONVOL
.rdata:000000014000BF5E                 dw 19h
.rdata:000000014000BF60                 UNWIND_CODE <18h, 1>    ; UWOP_ALLOC_LARGE
.rdata:000000014000BF62                 dw 16h
.rdata:000000014000BF64                 UNWIND_CODE <11h, 0F0h> ; UWOP_PUSH_NONVOL
.rdata:000000014000BF66                 align 4
.rdata:000000014000BF68                 dd rva __GSHandlerCheck
.rdata:000000014000BF6C                 dd 0A0h
.rdata:000000014000BF70 stru_14000BF70  UNWIND_INFO_HDR <2, 19h, 0Ch, 0>
.rdata:000000014000BF70                                         ; DATA XREF: .pdata:000000014000E1D4↓o
.rdata:000000014000BF74                 UNWIND_CODE <7, 16h>    ; UWOP_EPILOG
.rdata:000000014000BF76                 UNWIND_CODE <0, 6>      ; UWOP_EPILOG
.rdata:000000014000BF78                 UNWIND_CODE <19h, 74h>  ; UWOP_SAVE_NONVOL
.rdata:000000014000BF7A                 dw 0Eh
.rdata:000000014000BF7C                 UNWIND_CODE <19h, 64h>  ; UWOP_SAVE_NONVOL
.rdata:000000014000BF7E                 dw 0Dh
.rdata:000000014000BF80                 UNWIND_CODE <19h, 34h>  ; UWOP_SAVE_NONVOL
.rdata:000000014000BF82                 dw 0Ch
.rdata:000000014000BF84                 UNWIND_CODE <19h, 72h>  ; UWOP_ALLOC_SMALL
.rdata:000000014000BF86                 UNWIND_CODE <15h, 0F0h> ; UWOP_PUSH_NONVOL
.rdata:000000014000BF88                 UNWIND_CODE <13h, 0E0h> ; UWOP_PUSH_NONVOL
.rdata:000000014000BF8A                 UNWIND_CODE <11h, 0C0h> ; UWOP_PUSH_NONVOL
.rdata:000000014000BF8C stru_14000BF8C  UNWIND_INFO_HDR <1Ah, 26h, 0Ch, 0>
.rdata:000000014000BF8C                                         ; DATA XREF: .pdata:000000014000E1C8↓o
.rdata:000000014000BF90                 UNWIND_CODE <0Ch, 16h>  ; UWOP_EPILOG
.rdata:000000014000BF92                 UNWIND_CODE <0, 6>      ; UWOP_EPILOG
.rdata:000000014000BF94                 UNWIND_CODE <17h, 34h>  ; UWOP_SAVE_NONVOL
.rdata:000000014000BF96                 dw 1Ah
.rdata:000000014000BF98                 UNWIND_CODE <17h, 0F2h> ; UWOP_ALLOC_SMALL
.rdata:000000014000BF9A                 UNWIND_CODE <10h, 0F0h> ; UWOP_PUSH_NONVOL
.rdata:000000014000BF9C                 UNWIND_CODE <0Eh, 0E0h> ; UWOP_PUSH_NONVOL
.rdata:000000014000BF9E                 UNWIND_CODE <0Ch, 0D0h> ; UWOP_PUSH_NONVOL
.rdata:000000014000BFA0                 UNWIND_CODE <0Ah, 0C0h> ; UWOP_PUSH_NONVOL
.rdata:000000014000BFA2                 UNWIND_CODE <8, 70h>    ; UWOP_PUSH_NONVOL
.rdata:000000014000BFA4                 UNWIND_CODE <7, 60h>    ; UWOP_PUSH_NONVOL
.rdata:000000014000BFA6                 UNWIND_CODE <6, 50h>    ; UWOP_PUSH_NONVOL
.rdata:000000014000BFA8                 dd rva __GSHandlerCheck
.rdata:000000014000BFAC                 dd 78h
.rdata:000000014000BFB0 stru_14000BFB0  UNWIND_INFO_HDR <1Ah, 2Ah, 0Dh, 0>
.rdata:000000014000BFB0                                         ; DATA XREF: .pdata:000000014000E1B0↓o
.rdata:000000014000BFB4                 UNWIND_CODE <0Ch, 16h>  ; UWOP_EPILOG
.rdata:000000014000BFB6                 UNWIND_CODE <0, 6>      ; UWOP_EPILOG
.rdata:000000014000BFB8                 UNWIND_CODE <1Ch, 34h>  ; UWOP_SAVE_NONVOL
.rdata:000000014000BFBA                 dw 21h
.rdata:000000014000BFBC                 UNWIND_CODE <1Ch, 1>    ; UWOP_ALLOC_LARGE
.rdata:000000014000BFBE                 dw 16h
.rdata:000000014000BFC0                 UNWIND_CODE <10h, 0F0h> ; UWOP_PUSH_NONVOL
.rdata:000000014000BFC2                 UNWIND_CODE <0Eh, 0E0h> ; UWOP_PUSH_NONVOL
.rdata:000000014000BFC4                 UNWIND_CODE <0Ch, 0D0h> ; UWOP_PUSH_NONVOL
.rdata:000000014000BFC6                 UNWIND_CODE <0Ah, 0C0h> ; UWOP_PUSH_NONVOL
.rdata:000000014000BFC8                 UNWIND_CODE <8, 70h>    ; UWOP_PUSH_NONVOL
.rdata:000000014000BFCA                 UNWIND_CODE <7, 60h>    ; UWOP_PUSH_NONVOL
.rdata:000000014000BFCC                 UNWIND_CODE <6, 50h>    ; UWOP_PUSH_NONVOL
.rdata:000000014000BFCE                 align 4
.rdata:000000014000BFD0                 dd rva __GSHandlerCheck
.rdata:000000014000BFD4                 dd 0A0h
.rdata:000000014000BFD8 stru_14000BFD8  UNWIND_INFO_HDR <1Ah, 2Ah, 0Dh, 0>
.rdata:000000014000BFD8                                         ; DATA XREF: .pdata:000000014000E1BC↓o
.rdata:000000014000BFDC                 UNWIND_CODE <0Ch, 6>    ; UWOP_EPILOG
.rdata:000000014000BFDE                 UNWIND_CODE <0A8h, 56h> ; UWOP_EPILOG
.rdata:000000014000BFE0                 UNWIND_CODE <1Ch, 34h>  ; UWOP_SAVE_NONVOL
.rdata:000000014000BFE2                 dw 27h
.rdata:000000014000BFE4                 UNWIND_CODE <1Ch, 1>    ; UWOP_ALLOC_LARGE
.rdata:000000014000BFE6                 dw 1Ch
.rdata:000000014000BFE8                 UNWIND_CODE <10h, 0F0h> ; UWOP_PUSH_NONVOL
.rdata:000000014000BFEA                 UNWIND_CODE <0Eh, 0E0h> ; UWOP_PUSH_NONVOL
.rdata:000000014000BFEC                 UNWIND_CODE <0Ch, 0D0h> ; UWOP_PUSH_NONVOL
.rdata:000000014000BFEE                 UNWIND_CODE <0Ah, 0C0h> ; UWOP_PUSH_NONVOL
.rdata:000000014000BFF0                 UNWIND_CODE <8, 70h>    ; UWOP_PUSH_NONVOL
.rdata:000000014000BFF2                 UNWIND_CODE <7, 60h>    ; UWOP_PUSH_NONVOL
.rdata:000000014000BFF4                 UNWIND_CODE <6, 50h>    ; UWOP_PUSH_NONVOL
.rdata:000000014000BFF6                 align 4
.rdata:000000014000BFF8                 dd rva __GSHandlerCheck
.rdata:000000014000BFFC                 dd 0D0h
.rdata:000000014000C000 stru_14000C000  UNWIND_INFO_HDR <1Ah, 2Bh, 0Eh, 0>
.rdata:000000014000C000                                         ; DATA XREF: .pdata:000000014000E210↓o
.rdata:000000014000C004                 UNWIND_CODE <0Ah, 16h>  ; UWOP_EPILOG
.rdata:000000014000C006                 UNWIND_CODE <0, 6>      ; UWOP_EPILOG
.rdata:000000014000C008                 UNWIND_CODE <1Ch, 64h>  ; UWOP_SAVE_NONVOL
.rdata:000000014000C00A                 dw 17h
.rdata:000000014000C00C                 UNWIND_CODE <1Ch, 54h>  ; UWOP_SAVE_NONVOL
.rdata:000000014000C00E                 dw 16h
.rdata:000000014000C010                 UNWIND_CODE <1Ch, 34h>  ; UWOP_SAVE_NONVOL
.rdata:000000014000C012                 dw 15h
.rdata:000000014000C014                 UNWIND_CODE <1Ch, 0D2h> ; UWOP_ALLOC_SMALL
.rdata:000000014000C016                 UNWIND_CODE <18h, 0F0h> ; UWOP_PUSH_NONVOL
.rdata:000000014000C018                 UNWIND_CODE <16h, 0E0h> ; UWOP_PUSH_NONVOL
.rdata:000000014000C01A                 UNWIND_CODE <14h, 0D0h> ; UWOP_PUSH_NONVOL
.rdata:000000014000C01C                 UNWIND_CODE <12h, 0C0h> ; UWOP_PUSH_NONVOL
.rdata:000000014000C01E                 UNWIND_CODE <10h, 70h>  ; UWOP_PUSH_NONVOL
.rdata:000000014000C020                 dd rva __GSHandlerCheck
.rdata:000000014000C024                 dd 68h
.rdata:000000014000C028 stru_14000C028  UNWIND_INFO_HDR <1Ah, 31h, 0Fh, 0>
.rdata:000000014000C028                                         ; DATA XREF: .pdata:000000014000E204↓o
.rdata:000000014000C02C                 UNWIND_CODE <0Ah, 16h>  ; UWOP_EPILOG
.rdata:000000014000C02E                 UNWIND_CODE <0, 6>      ; UWOP_EPILOG
.rdata:000000014000C030                 UNWIND_CODE <23h, 74h>  ; UWOP_SAVE_NONVOL
.rdata:000000014000C032                 dw 1Bh
.rdata:000000014000C034                 UNWIND_CODE <23h, 64h>  ; UWOP_SAVE_NONVOL
.rdata:000000014000C036                 dw 1Ah
.rdata:000000014000C038                 UNWIND_CODE <23h, 34h>  ; UWOP_SAVE_NONVOL
.rdata:000000014000C03A                 dw 19h
.rdata:000000014000C03C                 UNWIND_CODE <23h, 1>    ; UWOP_ALLOC_LARGE
.rdata:000000014000C03E                 dw 12h
.rdata:000000014000C040                 UNWIND_CODE <18h, 0F0h> ; UWOP_PUSH_NONVOL
.rdata:000000014000C042                 UNWIND_CODE <16h, 0E0h> ; UWOP_PUSH_NONVOL
.rdata:000000014000C044                 UNWIND_CODE <14h, 0D0h> ; UWOP_PUSH_NONVOL
.rdata:000000014000C046                 UNWIND_CODE <12h, 0C0h> ; UWOP_PUSH_NONVOL
.rdata:000000014000C048                 UNWIND_CODE <10h, 50h>  ; UWOP_PUSH_NONVOL
.rdata:000000014000C04A                 align 4
.rdata:000000014000C04C                 dd rva __GSHandlerCheck
.rdata:000000014000C050                 dd 80h
.rdata:000000014000C054 stru_14000C054  UNWIND_INFO_HDR <1Ah, 25h, 0Ch, 0>
.rdata:000000014000C054                                         ; DATA XREF: .pdata:000000014000E1E0↓o
.rdata:000000014000C058                 UNWIND_CODE <9, 16h>    ; UWOP_EPILOG
.rdata:000000014000C05A                 UNWIND_CODE <0, 6>      ; UWOP_EPILOG
.rdata:000000014000C05C                 UNWIND_CODE <16h, 54h>  ; UWOP_SAVE_NONVOL
.rdata:000000014000C05E                 dw 17h
.rdata:000000014000C060                 UNWIND_CODE <16h, 34h>  ; UWOP_SAVE_NONVOL
.rdata:000000014000C062                 dw 16h
.rdata:000000014000C064                 UNWIND_CODE <16h, 0D2h> ; UWOP_ALLOC_SMALL
.rdata:000000014000C066                 UNWIND_CODE <12h, 0F0h> ; UWOP_PUSH_NONVOL
.rdata:000000014000C068                 UNWIND_CODE <10h, 0E0h> ; UWOP_PUSH_NONVOL
.rdata:000000014000C06A                 UNWIND_CODE <0Eh, 0C0h> ; UWOP_PUSH_NONVOL
.rdata:000000014000C06C                 UNWIND_CODE <0Ch, 70h>  ; UWOP_PUSH_NONVOL
.rdata:000000014000C06E                 UNWIND_CODE <0Bh, 60h>  ; UWOP_PUSH_NONVOL
.rdata:000000014000C070                 dd rva __GSHandlerCheck
.rdata:000000014000C074                 dd 68h
.rdata:000000014000C078 stru_14000C078  UNWIND_INFO_HDR <1Ah, 2Dh, 0Eh, 0>
.rdata:000000014000C078                                         ; DATA XREF: .pdata:000000014000E1F8↓o
.rdata:000000014000C07C                 UNWIND_CODE <0Ah, 16h>  ; UWOP_EPILOG
.rdata:000000014000C07E                 UNWIND_CODE <0, 6>      ; UWOP_EPILOG
.rdata:000000014000C080                 UNWIND_CODE <1Fh, 74h>  ; UWOP_SAVE_NONVOL
.rdata:000000014000C082                 dw 15h
.rdata:000000014000C084                 UNWIND_CODE <1Fh, 64h>  ; UWOP_SAVE_NONVOL
.rdata:000000014000C086                 dw 14h
.rdata:000000014000C088                 UNWIND_CODE <1Fh, 34h>  ; UWOP_SAVE_NONVOL
.rdata:000000014000C08A                 dw 13h
.rdata:000000014000C08C                 UNWIND_CODE <1Fh, 0B2h> ; UWOP_ALLOC_SMALL
.rdata:000000014000C08E                 UNWIND_CODE <18h, 0F0h> ; UWOP_PUSH_NONVOL
.rdata:000000014000C090                 UNWIND_CODE <16h, 0E0h> ; UWOP_PUSH_NONVOL
.rdata:000000014000C092                 UNWIND_CODE <14h, 0D0h> ; UWOP_PUSH_NONVOL
.rdata:000000014000C094                 UNWIND_CODE <12h, 0C0h> ; UWOP_PUSH_NONVOL
.rdata:000000014000C096                 UNWIND_CODE <10h, 50h>  ; UWOP_PUSH_NONVOL
.rdata:000000014000C098                 dd rva __GSHandlerCheck
.rdata:000000014000C09C                 dd 50h
.rdata:000000014000C0A0 stru_14000C0A0  UNWIND_INFO_HDR <1Ah, 27h, 0Ch, 0>
.rdata:000000014000C0A0                                         ; DATA XREF: .pdata:000000014000E1EC↓o
.rdata:000000014000C0A4                 UNWIND_CODE <0Dh, 16h>  ; UWOP_EPILOG
.rdata:000000014000C0A6                 UNWIND_CODE <0, 6>      ; UWOP_EPILOG
.rdata:000000014000C0A8                 UNWIND_CODE <19h, 1>    ; UWOP_ALLOC_LARGE
.rdata:000000014000C0AA                 dw 15h
.rdata:000000014000C0AC                 UNWIND_CODE <0Dh, 0F0h> ; UWOP_PUSH_NONVOL
.rdata:000000014000C0AE                 UNWIND_CODE <0Bh, 0E0h> ; UWOP_PUSH_NONVOL
.rdata:000000014000C0B0                 UNWIND_CODE <9, 0D0h>   ; UWOP_PUSH_NONVOL
.rdata:000000014000C0B2                 UNWIND_CODE <7, 0C0h>   ; UWOP_PUSH_NONVOL
.rdata:000000014000C0B4                 UNWIND_CODE <5, 70h>    ; UWOP_PUSH_NONVOL
.rdata:000000014000C0B6                 UNWIND_CODE <4, 60h>    ; UWOP_PUSH_NONVOL
.rdata:000000014000C0B8                 UNWIND_CODE <3, 30h>    ; UWOP_PUSH_NONVOL
.rdata:000000014000C0BA                 UNWIND_CODE <2, 50h>    ; UWOP_PUSH_NONVOL
.rdata:000000014000C0BC                 dd rva __GSHandlerCheck
.rdata:000000014000C0C0                 dd 98h
.rdata:000000014000C0C4 stru_14000C0C4  UNWIND_INFO_HDR <2, 0Fh, 9, 0>
.rdata:000000014000C0C4                                         ; DATA XREF: .pdata:000000014000E21C↓o
.rdata:000000014000C0C4                                         ; .pdata:000000014000E24C↓o
.rdata:000000014000C0C8                 UNWIND_CODE <9, 16h>    ; UWOP_EPILOG
.rdata:000000014000C0CA                 UNWIND_CODE <0, 6>      ; UWOP_EPILOG
.rdata:000000014000C0CC                 UNWIND_CODE <0Fh, 0A2h> ; UWOP_ALLOC_SMALL
.rdata:000000014000C0CE                 UNWIND_CODE <0Bh, 0F0h> ; UWOP_PUSH_NONVOL
.rdata:000000014000C0D0                 UNWIND_CODE <9, 0E0h>   ; UWOP_PUSH_NONVOL
.rdata:000000014000C0D2                 UNWIND_CODE <7, 70h>    ; UWOP_PUSH_NONVOL
.rdata:000000014000C0D4                 UNWIND_CODE <6, 60h>    ; UWOP_PUSH_NONVOL
.rdata:000000014000C0D6                 UNWIND_CODE <5, 50h>    ; UWOP_PUSH_NONVOL
.rdata:000000014000C0D8                 UNWIND_CODE <4, 30h>    ; UWOP_PUSH_NONVOL
.rdata:000000014000C0DA                 align 4
.rdata:000000014000C0DC stru_14000C0DC  UNWIND_INFO_HDR <2, 0Fh, 9, 0>
.rdata:000000014000C0DC                                         ; DATA XREF: .pdata:000000014000E228↓o
.rdata:000000014000C0E0                 UNWIND_CODE <9, 16h>    ; UWOP_EPILOG
.rdata:000000014000C0E2                 UNWIND_CODE <0, 6>      ; UWOP_EPILOG
.rdata:000000014000C0E4                 UNWIND_CODE <0Fh, 0C2h> ; UWOP_ALLOC_SMALL
.rdata:000000014000C0E6                 UNWIND_CODE <0Bh, 0F0h> ; UWOP_PUSH_NONVOL
.rdata:000000014000C0E8                 UNWIND_CODE <9, 0E0h>   ; UWOP_PUSH_NONVOL
.rdata:000000014000C0EA                 UNWIND_CODE <7, 70h>    ; UWOP_PUSH_NONVOL
.rdata:000000014000C0EC                 UNWIND_CODE <6, 60h>    ; UWOP_PUSH_NONVOL
.rdata:000000014000C0EE                 UNWIND_CODE <5, 50h>    ; UWOP_PUSH_NONVOL
.rdata:000000014000C0F0                 UNWIND_CODE <4, 30h>    ; UWOP_PUSH_NONVOL
.rdata:000000014000C0F2                 align 4
.rdata:000000014000C0F4 stru_14000C0F4  UNWIND_INFO_HDR <2, 12h, 0Ah, 0>
.rdata:000000014000C0F4                                         ; DATA XREF: .pdata:000000014000E234↓o
.rdata:000000014000C0F8                 UNWIND_CODE <9, 16h>    ; UWOP_EPILOG
.rdata:000000014000C0FA                 UNWIND_CODE <0, 6>      ; UWOP_EPILOG
.rdata:000000014000C0FC                 UNWIND_CODE <12h, 1>    ; UWOP_ALLOC_LARGE
.rdata:000000014000C0FE                 dw 11h
.rdata:000000014000C100                 UNWIND_CODE <0Bh, 0F0h> ; UWOP_PUSH_NONVOL
.rdata:000000014000C102                 UNWIND_CODE <9, 0E0h>   ; UWOP_PUSH_NONVOL
.rdata:000000014000C104                 UNWIND_CODE <7, 70h>    ; UWOP_PUSH_NONVOL
.rdata:000000014000C106                 UNWIND_CODE <6, 60h>    ; UWOP_PUSH_NONVOL
.rdata:000000014000C108                 UNWIND_CODE <5, 50h>    ; UWOP_PUSH_NONVOL
.rdata:000000014000C10A                 UNWIND_CODE <4, 30h>    ; UWOP_PUSH_NONVOL
.rdata:000000014000C10C stru_14000C10C  UNWIND_INFO_HDR <1Ah, 26h, 0Bh, 0>
.rdata:000000014000C10C                                         ; DATA XREF: .pdata:000000014000E240↓o
.rdata:000000014000C110                 UNWIND_CODE <0Bh, 16h>  ; UWOP_EPILOG
.rdata:000000014000C112                 UNWIND_CODE <0, 6>      ; UWOP_EPILOG
.rdata:000000014000C114                 UNWIND_CODE <18h, 1>    ; UWOP_ALLOC_LARGE
.rdata:000000014000C116                 dw 12h
.rdata:000000014000C118                 UNWIND_CODE <0Dh, 0F0h> ; UWOP_PUSH_NONVOL
.rdata:000000014000C11A                 UNWIND_CODE <0Bh, 0E0h> ; UWOP_PUSH_NONVOL
.rdata:000000014000C11C                 UNWIND_CODE <9, 0C0h>   ; UWOP_PUSH_NONVOL
.rdata:000000014000C11E                 UNWIND_CODE <7, 70h>    ; UWOP_PUSH_NONVOL
.rdata:000000014000C120                 UNWIND_CODE <6, 60h>    ; UWOP_PUSH_NONVOL
.rdata:000000014000C122                 UNWIND_CODE <5, 30h>    ; UWOP_PUSH_NONVOL
.rdata:000000014000C124                 UNWIND_CODE <4, 50h>    ; UWOP_PUSH_NONVOL
.rdata:000000014000C126                 align 4
.rdata:000000014000C128                 dd rva __GSHandlerCheck
.rdata:000000014000C12C                 dd 88h
.rdata:000000014000C130 stru_14000C130  UNWIND_INFO_HDR <1Ah, 21h, 0Ah, 0>
.rdata:000000014000C130                                         ; DATA XREF: .pdata:000000014000E258↓o
.rdata:000000014000C134                 UNWIND_CODE <9, 16h>    ; UWOP_EPILOG
.rdata:000000014000C136                 UNWIND_CODE <0, 6>      ; UWOP_EPILOG
.rdata:000000014000C138                 UNWIND_CODE <12h, 1>    ; UWOP_ALLOC_LARGE
.rdata:000000014000C13A                 dw 11h
.rdata:000000014000C13C                 UNWIND_CODE <0Bh, 0F0h> ; UWOP_PUSH_NONVOL
.rdata:000000014000C13E                 UNWIND_CODE <9, 0E0h>   ; UWOP_PUSH_NONVOL
.rdata:000000014000C140                 UNWIND_CODE <7, 70h>    ; UWOP_PUSH_NONVOL
.rdata:000000014000C142                 UNWIND_CODE <6, 60h>    ; UWOP_PUSH_NONVOL
.rdata:000000014000C144                 UNWIND_CODE <5, 50h>    ; UWOP_PUSH_NONVOL
.rdata:000000014000C146                 UNWIND_CODE <4, 30h>    ; UWOP_PUSH_NONVOL
.rdata:000000014000C148                 dd rva __GSHandlerCheck
.rdata:000000014000C14C                 dd 70h
.rdata:000000014000C150 stru_14000C150  UNWIND_INFO_HDR <1Ah, 27h, 0Ch, 0>
.rdata:000000014000C150                                         ; DATA XREF: .pdata:000000014000E264↓o
.rdata:000000014000C154                 UNWIND_CODE <0Dh, 16h>  ; UWOP_EPILOG
.rdata:000000014000C156                 UNWIND_CODE <0, 6>      ; UWOP_EPILOG
.rdata:000000014000C158                 UNWIND_CODE <19h, 1>    ; UWOP_ALLOC_LARGE
.rdata:000000014000C15A                 dw 19h
.rdata:000000014000C15C                 UNWIND_CODE <0Dh, 0F0h> ; UWOP_PUSH_NONVOL
.rdata:000000014000C15E                 UNWIND_CODE <0Bh, 0E0h> ; UWOP_PUSH_NONVOL
.rdata:000000014000C160                 UNWIND_CODE <9, 0D0h>   ; UWOP_PUSH_NONVOL
.rdata:000000014000C162                 UNWIND_CODE <7, 0C0h>   ; UWOP_PUSH_NONVOL
.rdata:000000014000C164                 UNWIND_CODE <5, 70h>    ; UWOP_PUSH_NONVOL
.rdata:000000014000C166                 UNWIND_CODE <4, 60h>    ; UWOP_PUSH_NONVOL
.rdata:000000014000C168                 UNWIND_CODE <3, 30h>    ; UWOP_PUSH_NONVOL
.rdata:000000014000C16A                 UNWIND_CODE <2, 50h>    ; UWOP_PUSH_NONVOL
.rdata:000000014000C16C                 dd rva __GSHandlerCheck
.rdata:000000014000C170                 dd 0B0h
.rdata:000000014000C174 stru_14000C174  UNWIND_INFO_HDR <2, 11h, 0Bh, 0>
.rdata:000000014000C174                                         ; DATA XREF: .pdata:000000014000E270↓o
.rdata:000000014000C178                 UNWIND_CODE <0Dh, 16h>  ; UWOP_EPILOG
.rdata:000000014000C17A                 UNWIND_CODE <0, 6>      ; UWOP_EPILOG
.rdata:000000014000C17C                 UNWIND_CODE <11h, 0C2h> ; UWOP_ALLOC_SMALL
.rdata:000000014000C17E                 UNWIND_CODE <0Dh, 0F0h> ; UWOP_PUSH_NONVOL
.rdata:000000014000C180                 UNWIND_CODE <0Bh, 0E0h> ; UWOP_PUSH_NONVOL
.rdata:000000014000C182                 UNWIND_CODE <9, 0D0h>   ; UWOP_PUSH_NONVOL
.rdata:000000014000C184                 UNWIND_CODE <7, 0C0h>   ; UWOP_PUSH_NONVOL
.rdata:000000014000C186                 UNWIND_CODE <5, 70h>    ; UWOP_PUSH_NONVOL
.rdata:000000014000C188                 UNWIND_CODE <4, 60h>    ; UWOP_PUSH_NONVOL
.rdata:000000014000C18A                 UNWIND_CODE <3, 50h>    ; UWOP_PUSH_NONVOL
.rdata:000000014000C18C                 UNWIND_CODE <2, 30h>    ; UWOP_PUSH_NONVOL
.rdata:000000014000C18E                 align 4
.rdata:000000014000C190 stru_14000C190  UNWIND_INFO_HDR <1, 0, 0, 0>
.rdata:000000014000C190                                         ; DATA XREF: .pdata:000000014000E27C↓o
.rdata:000000014000C194                 align 8
.rdata:000000014000C198 stru_14000C198  UNWIND_INFO_HDR <1, 0, 0, 0>
.rdata:000000014000C198                                         ; DATA XREF: .pdata:000000014000E300↓o
.rdata:000000014000C19C stru_14000C19C  UNWIND_INFO_HDR <2, 4, 3, 0>
.rdata:000000014000C19C                                         ; DATA XREF: .pdata:000000014000E288↓o
.rdata:000000014000C19C                                         ; .pdata:000000014000E294↓o ...
.rdata:000000014000C1A0                 UNWIND_CODE <1, 6>      ; UWOP_EPILOG
.rdata:000000014000C1A2                 UNWIND_CODE <2, 6>      ; UWOP_EPILOG
.rdata:000000014000C1A4                 UNWIND_CODE <4, 42h>    ; UWOP_ALLOC_SMALL
.rdata:000000014000C1A6                 align 4
.rdata:000000014000C1A8 stru_14000C1A8  UNWIND_INFO_HDR <1, 0, 0, 0>
.rdata:000000014000C1A8                                         ; DATA XREF: .pdata:000000014000E30C↓o
.rdata:000000014000C1AC                 align 10h
.rdata:000000014000C1B0 stru_14000C1B0  UNWIND_INFO_HDR <1, 0, 0, 0>
.rdata:000000014000C1B0                                         ; DATA XREF: .pdata:000000014000E318↓o
.rdata:000000014000C1B4 stru_14000C1B4  UNWIND_INFO_HDR <2, 19h, 0Ch, 0>
.rdata:000000014000C1B4                                         ; DATA XREF: .pdata:000000014000E2B8↓o
.rdata:000000014000C1B8                 UNWIND_CODE <3, 6>      ; UWOP_EPILOG
.rdata:000000014000C1BA                 UNWIND_CODE <50h, 6>    ; UWOP_EPILOG
.rdata:000000014000C1BC                 UNWIND_CODE <19h, 74h>  ; UWOP_SAVE_NONVOL
.rdata:000000014000C1BE                 dw 0Bh
.rdata:000000014000C1C0                 UNWIND_CODE <19h, 64h>  ; UWOP_SAVE_NONVOL
.rdata:000000014000C1C2                 dw 0Ah
.rdata:000000014000C1C4                 UNWIND_CODE <19h, 54h>  ; UWOP_SAVE_NONVOL
.rdata:000000014000C1C6                 dw 9
.rdata:000000014000C1C8                 UNWIND_CODE <19h, 34h>  ; UWOP_SAVE_NONVOL
.rdata:000000014000C1CA                 dw 8
.rdata:000000014000C1CC                 UNWIND_CODE <19h, 52h>  ; UWOP_ALLOC_SMALL
.rdata:000000014000C1CE                 UNWIND_CODE <15h, 0E0h> ; UWOP_PUSH_NONVOL
.rdata:000000014000C1D0 stru_14000C1D0  UNWIND_INFO_HDR <2, 0Ah, 6, 0>
.rdata:000000014000C1D0                                         ; DATA XREF: .pdata:000000014000E2AC↓o
.rdata:000000014000C1D4                 UNWIND_CODE <2, 6>      ; UWOP_EPILOG
.rdata:000000014000C1D6                 UNWIND_CODE <3, 6>      ; UWOP_EPILOG
.rdata:000000014000C1D8                 UNWIND_CODE <0Ah, 34h>  ; UWOP_SAVE_NONVOL
.rdata:000000014000C1DA                 dw 6
.rdata:000000014000C1DC                 UNWIND_CODE <0Ah, 32h>  ; UWOP_ALLOC_SMALL
.rdata:000000014000C1DE                 UNWIND_CODE <6, 70h>    ; UWOP_PUSH_NONVOL
.rdata:000000014000C1E0 stru_14000C1E0  UNWIND_INFO_HDR <2, 0Ah, 6, 0>
.rdata:000000014000C1E0                                         ; DATA XREF: .pdata:000000014000E2DC↓o
.rdata:000000014000C1E4                 UNWIND_CODE <2, 6>      ; UWOP_EPILOG
.rdata:000000014000C1E6                 UNWIND_CODE <37h, 6>    ; UWOP_EPILOG
.rdata:000000014000C1E8                 UNWIND_CODE <0Ah, 34h>  ; UWOP_SAVE_NONVOL
.rdata:000000014000C1EA                 dw 0Ah
.rdata:000000014000C1EC                 UNWIND_CODE <0Ah, 72h>  ; UWOP_ALLOC_SMALL
.rdata:000000014000C1EE                 UNWIND_CODE <6, 70h>    ; UWOP_PUSH_NONVOL
.rdata:000000014000C1F0 stru_14000C1F0  UNWIND_INFO_HDR <2, 0Ah, 6, 0>
.rdata:000000014000C1F0                                         ; DATA XREF: .pdata:000000014000E2F4↓o
.rdata:000000014000C1F4                 UNWIND_CODE <2, 6>      ; UWOP_EPILOG
.rdata:000000014000C1F6                 UNWIND_CODE <3, 6>      ; UWOP_EPILOG
.rdata:000000014000C1F8                 UNWIND_CODE <0Ah, 34h>  ; UWOP_SAVE_NONVOL
.rdata:000000014000C1FA                 dw 8
.rdata:000000014000C1FC                 UNWIND_CODE <0Ah, 52h>  ; UWOP_ALLOC_SMALL
.rdata:000000014000C1FE                 UNWIND_CODE <6, 70h>    ; UWOP_PUSH_NONVOL
.rdata:000000014000C200 stru_14000C200  UNWIND_INFO_HDR <2, 19h, 0Ch, 0>
.rdata:000000014000C200                                         ; DATA XREF: .pdata:000000014000E2E8↓o
.rdata:000000014000C204                 UNWIND_CODE <3, 6>      ; UWOP_EPILOG
.rdata:000000014000C206                 UNWIND_CODE <0C4h, 6>   ; UWOP_EPILOG
.rdata:000000014000C208                 UNWIND_CODE <19h, 74h>  ; UWOP_SAVE_NONVOL
.rdata:000000014000C20A                 dw 0Dh
.rdata:000000014000C20C                 UNWIND_CODE <19h, 64h>  ; UWOP_SAVE_NONVOL
.rdata:000000014000C20E                 dw 0Ch
.rdata:000000014000C210                 UNWIND_CODE <19h, 54h>  ; UWOP_SAVE_NONVOL
.rdata:000000014000C212                 dw 0Bh
.rdata:000000014000C214                 UNWIND_CODE <19h, 34h>  ; UWOP_SAVE_NONVOL
.rdata:000000014000C216                 dw 0Ah
.rdata:000000014000C218                 UNWIND_CODE <19h, 72h>  ; UWOP_ALLOC_SMALL
.rdata:000000014000C21A                 UNWIND_CODE <15h, 0E0h> ; UWOP_PUSH_NONVOL
.rdata:000000014000C21C                 align 1000h
.rdata:000000014000C21C _rdata          ends
.rdata:000000014000C21C
.data:000000014000D000 ; Section 3. (virtual address 0000D000)
.data:000000014000D000 ; Virtual size                  : 000003A8 (    936.)
.data:000000014000D000 ; Section size in file          : 00000200 (    512.)
.data:000000014000D000 ; Offset to raw data for section: 0000B600
.data:000000014000D000 ; Flags C8000040: Data Not pageable Readable Writable
.data:000000014000D000 ; Alignment     : default
.data:000000014000D000 ; ===========================================================================
.data:000000014000D000
.data:000000014000D000 ; Segment type: Pure data
.data:000000014000D000 ; Segment permissions: Read/Write
.data:000000014000D000 _data           segment para public 'DATA' use64
.data:000000014000D000                 assume cs:_data
.data:000000014000D000                 ;org 14000D000h
.data:000000014000D000 ; PDEVICE_OBJECT DeviceObject
.data:000000014000D000 DeviceObject    dq offset DeviceObject  ; DATA XREF: sub_140001000+1E↑r
.data:000000014000D000                                         ; sub_140001058+14↑r ...
.data:000000014000D008 off_14000D008   dq offset off_14000D008 ; DATA XREF: sub_140001000+E↑o
.data:000000014000D008                                         ; sub_140001000+15↑r ...
.data:000000014000D010 unk_14000D010   db  28h ; (             ; DATA XREF: .data:off_14000D028↓o
.data:000000014000D011                 db    0
.data:000000014000D012                 db    0
.data:000000014000D013                 db    0
.data:000000014000D014                 db    0
.data:000000014000D015                 db    0
.data:000000014000D016                 db    0
.data:000000014000D017                 db    0
.data:000000014000D018                 dq offset aDeviceContext ; "DEVICE_CONTEXT"
.data:000000014000D020                 db  88h
.data:000000014000D021                 db    2
.data:000000014000D022                 db    0
.data:000000014000D023                 db    0
.data:000000014000D024                 db    0
.data:000000014000D025                 db    0
.data:000000014000D026                 db    0
.data:000000014000D027                 db    0
.data:000000014000D028 off_14000D028   dq offset unk_14000D010 ; DATA XREF: sub_140001B58+6C↑r
.data:000000014000D028                                         ; sub_140001EE4+DB↑r ...
.data:000000014000D030                 db    0
.data:000000014000D031                 db    0
.data:000000014000D032                 db    0
.data:000000014000D033                 db    0
.data:000000014000D034                 db    0
.data:000000014000D035                 db    0
.data:000000014000D036                 db    0
.data:000000014000D037                 db    0
.data:000000014000D038 unk_14000D038   db  28h ; (             ; DATA XREF: .data:off_14000D050↓o
.data:000000014000D039                 db    0
.data:000000014000D03A                 db    0
.data:000000014000D03B                 db    0
.data:000000014000D03C                 db    0
.data:000000014000D03D                 db    0
.data:000000014000D03E                 db    0
.data:000000014000D03F                 db    0
.data:000000014000D040                 dq offset aRequestContext ; "REQUEST_CONTEXT"
.data:000000014000D048                 db  10h
.data:000000014000D049                 db    0
.data:000000014000D04A                 db    0
.data:000000014000D04B                 db    0
.data:000000014000D04C                 db    0
.data:000000014000D04D                 db    0
.data:000000014000D04E                 db    0
.data:000000014000D04F                 db    0
.data:000000014000D050 off_14000D050   dq offset unk_14000D038 ; DATA XREF: sub_140003290+2D9↑r
.data:000000014000D050                                         ; sub_140007610+34A↑r
.data:000000014000D058                 align 20h
.data:000000014000D060 ; uintptr_t _security_cookie
.data:000000014000D060 __security_cookie dq 2B992DDFA232h      ; DATA XREF: sub_1400012E8+17↑r
.data:000000014000D060                                         ; sub_140001EE4+1B↑r ...
.data:000000014000D068 qword_14000D068 dq 0FFFFD466D2205DCDh   ; DATA XREF: sub_140010200+1E↓w
.data:000000014000D070 unk_14000D070   db  30h ; 0             ; DATA XREF: sub_140009F10+4↑o
.data:000000014000D070                                         ; sub_140009F10+17↑o ...
.data:000000014000D071                 db    0
.data:000000014000D072                 db    0
.data:000000014000D073                 db    0
.data:000000014000D074                 db    0
.data:000000014000D075                 db    0
.data:000000014000D076                 db    0
.data:000000014000D077                 db    0
.data:000000014000D078                 dq offset aKmdflibrary  ; "KmdfLibrary"
.data:000000014000D080                 db    1
.data:000000014000D081                 db    0
.data:000000014000D082                 db    0
.data:000000014000D083                 db    0
.data:000000014000D084                 db  0Fh
.data:000000014000D085                 db    0
.data:000000014000D086                 db    0
.data:000000014000D087                 db    0
.data:000000014000D088                 db    0
.data:000000014000D089                 db    0
.data:000000014000D08A                 db    0
.data:000000014000D08B                 db    0
.data:000000014000D08C                 db 0BCh
.data:000000014000D08D                 db    1
.data:000000014000D08E                 db    0
.data:000000014000D08F                 db    0
.data:000000014000D090                 dq offset qword_14000D388
.data:000000014000D098                 align 20h
.data:000000014000D0A0 unk_14000D0A0   db    0                 ; DATA XREF: sub_14000A1B8+1B↑o
.data:000000014000D0A0                                         ; sub_14000A388+1B↑o ...
.data:000000014000D0A1                 db    0
.data:000000014000D0A2                 db    0
.data:000000014000D0A3                 db    0
.data:000000014000D0A4                 db    0
.data:000000014000D0A5                 db    0
.data:000000014000D0A6                 db    0
.data:000000014000D0A7                 db    0
.data:000000014000D0A8                 db    0
.data:000000014000D0A9                 db    0
.data:000000014000D0AA                 db    0
.data:000000014000D0AB                 db    0
.data:000000014000D0AC                 db    0
.data:000000014000D0AD                 db    0
.data:000000014000D0AE                 db    0
.data:000000014000D0AF                 db    0
.data:000000014000D0B0 ; char byte_14000D0B0[8]
.data:000000014000D0B0 byte_14000D0B0  db 8 dup(0)             ; DATA XREF: sub_14000A1B8+22↑o
.data:000000014000D0B0                                         ; sub_14000A1B8:loc_14000A216↑o ...
.data:000000014000D0B8 off_14000D0B8   dq offset unk_14000D0A0 ; DATA XREF: sub_14000A1B8+97↑w
.data:000000014000D0B8                                         ; sub_14000A388+A↑r ...
.data:000000014000D0C0 unk_14000D0C0   db    0                 ; DATA XREF: sub_14000A100+A↑o
.data:000000014000D0C1                 db    0
.data:000000014000D0C2                 db    0
.data:000000014000D0C3                 db    0
.data:000000014000D0C4                 db    0
.data:000000014000D0C5                 db    0
.data:000000014000D0C6                 db    0
.data:000000014000D0C7                 db    0
.data:000000014000D0C8                 db    0
.data:000000014000D0C9                 db    0
.data:000000014000D0CA                 db    0
.data:000000014000D0CB                 db    0
.data:000000014000D0CC                 db    0
.data:000000014000D0CD                 db    0
.data:000000014000D0CE                 db    0
.data:000000014000D0CF                 db    0
.data:000000014000D0D0 ; char byte_14000D0D0[16]
.data:000000014000D0D0 byte_14000D0D0  db 10h dup(0)           ; DATA XREF: sub_14000A100+11↑o
.data:000000014000D0D0                                         ; sub_14000A100:loc_14000A147↑o
.data:000000014000D0E0 qword_14000D0E0 dq 0                    ; DATA XREF: sub_14000F308+7A↓w
.data:000000014000D0E0                                         ; sub_14000F420+1B6↓r ...
.data:000000014000D0E8 ; __int64 (__fastcall *qword_14000D0E8)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD)
.data:000000014000D0E8 qword_14000D0E8 dq 0                    ; DATA XREF: sub_140001058:loc_14000113A↑r
.data:000000014000D0E8                                         ; sub_1400016A8+68↑r ...
.data:000000014000D0F0 qword_14000D0F0 dq 0                    ; DATA XREF: sub_14000F1A0+80↓r
.data:000000014000D0F0                                         ; sub_14000F308+F1↓w
.data:000000014000D0F8 qword_14000D0F8 dq 0                    ; DATA XREF: sub_14000F240+55↓r
.data:000000014000D0F8                                         ; sub_14000F308+CA↓w
.data:000000014000D100 ; __int64 (__fastcall *qword_14000D100)(_QWORD, _QWORD, _QWORD, _QWORD)
.data:000000014000D100 qword_14000D100 dq 0                    ; DATA XREF: sub_14000F308+3D↓w
.data:000000014000D100                                         ; sub_14000F308+81↓r
.data:000000014000D108 dword_14000D108 dd 0                    ; DATA XREF: sub_14000F1A0+25↓r
.data:000000014000D108                                         ; sub_14000F240+2E↓r ...
.data:000000014000D10C                 align 10h
.data:000000014000D110 ; struct _DEVICE_OBJECT stru_14000D110
.data:000000014000D110 stru_14000D110  _DEVICE_OBJECT <?>      ; DATA XREF: sub_14000F240+14↓o
.data:000000014000D110                                         ; sub_14000F240+8C↓w ...
.data:000000014000D260                 db    ? ;
.data:000000014000D261                 db    ? ;
.data:000000014000D262                 db    ? ;
.data:000000014000D263                 db    ? ;
.data:000000014000D264                 db    ? ;
.data:000000014000D265                 db    ? ;
.data:000000014000D266                 db    ? ;
.data:000000014000D267                 db    ? ;
.data:000000014000D268                 db    ? ;
.data:000000014000D269                 db    ? ;
.data:000000014000D26A                 db    ? ;
.data:000000014000D26B                 db    ? ;
.data:000000014000D26C                 db    ? ;
.data:000000014000D26D                 db    ? ;
.data:000000014000D26E                 db    ? ;
.data:000000014000D26F                 db    ? ;
.data:000000014000D270                 db    ? ;
.data:000000014000D271                 db    ? ;
.data:000000014000D272                 db    ? ;
.data:000000014000D273                 db    ? ;
.data:000000014000D274                 db    ? ;
.data:000000014000D275                 db    ? ;
.data:000000014000D276                 db    ? ;
.data:000000014000D277                 db    ? ;
.data:000000014000D278                 db    ? ;
.data:000000014000D279                 db    ? ;
.data:000000014000D27A                 db    ? ;
.data:000000014000D27B                 db    ? ;
.data:000000014000D27C                 db    ? ;
.data:000000014000D27D                 db    ? ;
.data:000000014000D27E                 db    ? ;
.data:000000014000D27F                 db    ? ;
.data:000000014000D280                 db    ? ;
.data:000000014000D281                 db    ? ;
.data:000000014000D282                 db    ? ;
.data:000000014000D283                 db    ? ;
.data:000000014000D284                 db    ? ;
.data:000000014000D285                 db    ? ;
.data:000000014000D286                 db    ? ;
.data:000000014000D287                 db    ? ;
.data:000000014000D288                 db    ? ;
.data:000000014000D289                 db    ? ;
.data:000000014000D28A                 db    ? ;
.data:000000014000D28B                 db    ? ;
.data:000000014000D28C                 db    ? ;
.data:000000014000D28D                 db    ? ;
.data:000000014000D28E                 db    ? ;
.data:000000014000D28F                 db    ? ;
.data:000000014000D290                 db    ? ;
.data:000000014000D291                 db    ? ;
.data:000000014000D292                 db    ? ;
.data:000000014000D293                 db    ? ;
.data:000000014000D294                 db    ? ;
.data:000000014000D295                 db    ? ;
.data:000000014000D296                 db    ? ;
.data:000000014000D297                 db    ? ;
.data:000000014000D298                 db    ? ;
.data:000000014000D299                 db    ? ;
.data:000000014000D29A                 db    ? ;
.data:000000014000D29B                 db    ? ;
.data:000000014000D29C                 db    ? ;
.data:000000014000D29D                 db    ? ;
.data:000000014000D29E                 db    ? ;
.data:000000014000D29F                 db    ? ;
.data:000000014000D2A0                 db    ? ;
.data:000000014000D2A1                 db    ? ;
.data:000000014000D2A2                 db    ? ;
.data:000000014000D2A3                 db    ? ;
.data:000000014000D2A4                 db    ? ;
.data:000000014000D2A5                 db    ? ;
.data:000000014000D2A6                 db    ? ;
.data:000000014000D2A7                 db    ? ;
.data:000000014000D2A8                 db    ? ;
.data:000000014000D2A9                 db    ? ;
.data:000000014000D2AA                 db    ? ;
.data:000000014000D2AB                 db    ? ;
.data:000000014000D2AC                 db    ? ;
.data:000000014000D2AD                 db    ? ;
.data:000000014000D2AE                 db    ? ;
.data:000000014000D2AF                 db    ? ;
.data:000000014000D2B0                 db    ? ;
.data:000000014000D2B1                 db    ? ;
.data:000000014000D2B2                 db    ? ;
.data:000000014000D2B3                 db    ? ;
.data:000000014000D2B4                 db    ? ;
.data:000000014000D2B5                 db    ? ;
.data:000000014000D2B6                 db    ? ;
.data:000000014000D2B7                 db    ? ;
.data:000000014000D2B8                 db    ? ;
.data:000000014000D2B9                 db    ? ;
.data:000000014000D2BA                 db    ? ;
.data:000000014000D2BB                 db    ? ;
.data:000000014000D2BC                 db    ? ;
.data:000000014000D2BD                 db    ? ;
.data:000000014000D2BE                 db    ? ;
.data:000000014000D2BF                 db    ? ;
.data:000000014000D2C0                 db    ? ;
.data:000000014000D2C1                 db    ? ;
.data:000000014000D2C2                 db    ? ;
.data:000000014000D2C3                 db    ? ;
.data:000000014000D2C4                 db    ? ;
.data:000000014000D2C5                 db    ? ;
.data:000000014000D2C6                 db    ? ;
.data:000000014000D2C7                 db    ? ;
.data:000000014000D2C8                 db    ? ;
.data:000000014000D2C9                 db    ? ;
.data:000000014000D2CA                 db    ? ;
.data:000000014000D2CB                 db    ? ;
.data:000000014000D2CC                 db    ? ;
.data:000000014000D2CD                 db    ? ;
.data:000000014000D2CE                 db    ? ;
.data:000000014000D2CF                 db    ? ;
.data:000000014000D2D0                 db    ? ;
.data:000000014000D2D1                 db    ? ;
.data:000000014000D2D2                 db    ? ;
.data:000000014000D2D3                 db    ? ;
.data:000000014000D2D4                 db    ? ;
.data:000000014000D2D5                 db    ? ;
.data:000000014000D2D6                 db    ? ;
.data:000000014000D2D7                 db    ? ;
.data:000000014000D2D8                 db    ? ;
.data:000000014000D2D9                 db    ? ;
.data:000000014000D2DA                 db    ? ;
.data:000000014000D2DB                 db    ? ;
.data:000000014000D2DC                 db    ? ;
.data:000000014000D2DD                 db    ? ;
.data:000000014000D2DE                 db    ? ;
.data:000000014000D2DF                 db    ? ;
.data:000000014000D2E0                 db    ? ;
.data:000000014000D2E1                 db    ? ;
.data:000000014000D2E2                 db    ? ;
.data:000000014000D2E3                 db    ? ;
.data:000000014000D2E4                 db    ? ;
.data:000000014000D2E5                 db    ? ;
.data:000000014000D2E6                 db    ? ;
.data:000000014000D2E7                 db    ? ;
.data:000000014000D2E8                 db    ? ;
.data:000000014000D2E9                 db    ? ;
.data:000000014000D2EA                 db    ? ;
.data:000000014000D2EB                 db    ? ;
.data:000000014000D2EC                 db    ? ;
.data:000000014000D2ED                 db    ? ;
.data:000000014000D2EE                 db    ? ;
.data:000000014000D2EF                 db    ? ;
.data:000000014000D2F0                 db    ? ;
.data:000000014000D2F1                 db    ? ;
.data:000000014000D2F2                 db    ? ;
.data:000000014000D2F3                 db    ? ;
.data:000000014000D2F4                 db    ? ;
.data:000000014000D2F5                 db    ? ;
.data:000000014000D2F6                 db    ? ;
.data:000000014000D2F7                 db    ? ;
.data:000000014000D2F8                 db    ? ;
.data:000000014000D2F9                 db    ? ;
.data:000000014000D2FA                 db    ? ;
.data:000000014000D2FB                 db    ? ;
.data:000000014000D2FC                 db    ? ;
.data:000000014000D2FD                 db    ? ;
.data:000000014000D2FE                 db    ? ;
.data:000000014000D2FF                 db    ? ;
.data:000000014000D300                 db    ? ;
.data:000000014000D301                 db    ? ;
.data:000000014000D302                 db    ? ;
.data:000000014000D303                 db    ? ;
.data:000000014000D304                 db    ? ;
.data:000000014000D305                 db    ? ;
.data:000000014000D306                 db    ? ;
.data:000000014000D307                 db    ? ;
.data:000000014000D308                 db    ? ;
.data:000000014000D309                 db    ? ;
.data:000000014000D30A                 db    ? ;
.data:000000014000D30B                 db    ? ;
.data:000000014000D30C                 db    ? ;
.data:000000014000D30D                 db    ? ;
.data:000000014000D30E                 db    ? ;
.data:000000014000D30F                 db    ? ;
.data:000000014000D310                 db    ? ;
.data:000000014000D311                 db    ? ;
.data:000000014000D312                 db    ? ;
.data:000000014000D313                 db    ? ;
.data:000000014000D314                 db    ? ;
.data:000000014000D315                 db    ? ;
.data:000000014000D316                 db    ? ;
.data:000000014000D317                 db    ? ;
.data:000000014000D318                 db    ? ;
.data:000000014000D319                 db    ? ;
.data:000000014000D31A                 db    ? ;
.data:000000014000D31B                 db    ? ;
.data:000000014000D31C                 db    ? ;
.data:000000014000D31D                 db    ? ;
.data:000000014000D31E                 db    ? ;
.data:000000014000D31F                 db    ? ;
.data:000000014000D320                 db    ? ;
.data:000000014000D321                 db    ? ;
.data:000000014000D322                 db    ? ;
.data:000000014000D323                 db    ? ;
.data:000000014000D324                 db    ? ;
.data:000000014000D325                 db    ? ;
.data:000000014000D326                 db    ? ;
.data:000000014000D327                 db    ? ;
.data:000000014000D328                 db    ? ;
.data:000000014000D329                 db    ? ;
.data:000000014000D32A                 db    ? ;
.data:000000014000D32B                 db    ? ;
.data:000000014000D32C                 db    ? ;
.data:000000014000D32D                 db    ? ;
.data:000000014000D32E                 db    ? ;
.data:000000014000D32F                 db    ? ;
.data:000000014000D330                 db    ? ;
.data:000000014000D331                 db    ? ;
.data:000000014000D332                 db    ? ;
.data:000000014000D333                 db    ? ;
.data:000000014000D334                 db    ? ;
.data:000000014000D335                 db    ? ;
.data:000000014000D336                 db    ? ;
.data:000000014000D337                 db    ? ;
.data:000000014000D338                 db    ? ;
.data:000000014000D339                 db    ? ;
.data:000000014000D33A                 db    ? ;
.data:000000014000D33B                 db    ? ;
.data:000000014000D33C                 db    ? ;
.data:000000014000D33D                 db    ? ;
.data:000000014000D33E                 db    ? ;
.data:000000014000D33F                 db    ? ;
.data:000000014000D340                 db    ? ;
.data:000000014000D341                 db    ? ;
.data:000000014000D342                 db    ? ;
.data:000000014000D343                 db    ? ;
.data:000000014000D344                 db    ? ;
.data:000000014000D345                 db    ? ;
.data:000000014000D346                 db    ? ;
.data:000000014000D347                 db    ? ;
.data:000000014000D348                 db    ? ;
.data:000000014000D349                 db    ? ;
.data:000000014000D34A                 db    ? ;
.data:000000014000D34B                 db    ? ;
.data:000000014000D34C                 db    ? ;
.data:000000014000D34D                 db    ? ;
.data:000000014000D34E                 db    ? ;
.data:000000014000D34F                 db    ? ;
.data:000000014000D350                 db    ? ;
.data:000000014000D351                 db    ? ;
.data:000000014000D352                 db    ? ;
.data:000000014000D353                 db    ? ;
.data:000000014000D354                 db    ? ;
.data:000000014000D355                 db    ? ;
.data:000000014000D356                 db    ? ;
.data:000000014000D357                 db    ? ;
.data:000000014000D358                 db    ? ;
.data:000000014000D359                 db    ? ;
.data:000000014000D35A                 db    ? ;
.data:000000014000D35B                 db    ? ;
.data:000000014000D35C                 db    ? ;
.data:000000014000D35D                 db    ? ;
.data:000000014000D35E                 db    ? ;
.data:000000014000D35F                 db    ? ;
.data:000000014000D360                 db    ? ;
.data:000000014000D361                 db    ? ;
.data:000000014000D362                 db    ? ;
.data:000000014000D363                 db    ? ;
.data:000000014000D364                 db    ? ;
.data:000000014000D365                 db    ? ;
.data:000000014000D366                 db    ? ;
.data:000000014000D367                 db    ? ;
.data:000000014000D368 qword_14000D368 dq ?                    ; DATA XREF: sub_140009F6C+97↑w
.data:000000014000D368                                         ; sub_140009F6C+149↑w
.data:000000014000D370                 db    ? ;
.data:000000014000D371                 db    ? ;
.data:000000014000D372                 db    ? ;
.data:000000014000D373                 db    ? ;
.data:000000014000D374                 db    ? ;
.data:000000014000D375                 db    ? ;
.data:000000014000D376                 db    ? ;
.data:000000014000D377                 db    ? ;
.data:000000014000D378 ; struct _UNICODE_STRING DestinationString
.data:000000014000D378 DestinationString _UNICODE_STRING <?>   ; DATA XREF: sub_140009F10+1E↑o
.data:000000014000D378                                         ; sub_140009F6C+3E↑o ...
.data:000000014000D388 qword_14000D388 dq ?                    ; DATA XREF: sub_140001840+60↑r
.data:000000014000D388                                         ; sub_14000190C+B0↑r ...
.data:000000014000D390 qword_14000D390 dq ?                    ; DATA XREF: sub_140001840+67↑r
.data:000000014000D390                                         ; sub_14000190C+BD↑r ...
.data:000000014000D398 qword_14000D398 dq ?                    ; DATA XREF: sub_140009F6C+37↑w
.data:000000014000D3A0 ; __int64 (*qword_14000D3A0)(void)
.data:000000014000D3A0 qword_14000D3A0 dq ?                    ; DATA XREF: sub_140009F6C+119↑r
.data:000000014000D3A0                                         ; sub_140009F6C+127↑w ...
.data:000000014000D3A8                 align 1000h
.data:000000014000D3A8 _data           ends
.data:000000014000D3A8
.pdata:000000014000E000 ; Section 4. (virtual address 0000E000)
.pdata:000000014000E000 ; Virtual size                  : 00000378 (    888.)
.pdata:000000014000E000 ; Section size in file          : 00000400 (   1024.)
.pdata:000000014000E000 ; Offset to raw data for section: 0000B800
.pdata:000000014000E000 ; Flags 48000040: Data Not pageable Readable
.pdata:000000014000E000 ; Alignment     : default
.pdata:000000014000E000 ; ===========================================================================
.pdata:000000014000E000
.pdata:000000014000E000 ; Segment type: Pure data
.pdata:000000014000E000 ; Segment permissions: Read
.pdata:000000014000E000 _pdata          segment para public 'DATA' use64
.pdata:000000014000E000                 assume cs:_pdata
.pdata:000000014000E000                 ;org 14000E000h
.pdata:000000014000E000 ExceptionDir    RUNTIME_FUNCTION <rva sub_140001000, rva algn_140001056, \
.pdata:000000014000E000                                   rva stru_14000BAF8>
.pdata:000000014000E00C                 RUNTIME_FUNCTION <rva sub_140001058, rva sub_140001240, \
.pdata:000000014000E00C                                   rva stru_14000BB04>
.pdata:000000014000E018                 RUNTIME_FUNCTION <rva sub_140001240, rva sub_1400012E8, \
.pdata:000000014000E018                                   rva stru_14000BB44>
.pdata:000000014000E024                 RUNTIME_FUNCTION <rva sub_1400012E8, rva algn_1400016A5, \
.pdata:000000014000E024                                   rva stru_14000BB20>
.pdata:000000014000E030                 RUNTIME_FUNCTION <rva sub_1400016A8, rva algn_14000176B, \
.pdata:000000014000E030                                   rva stru_14000BB58>
.pdata:000000014000E03C                 RUNTIME_FUNCTION <rva sub_14000176C, rva sub_140001840, \
.pdata:000000014000E03C                                   rva stru_14000BB74>
.pdata:000000014000E048                 RUNTIME_FUNCTION <rva sub_140001840, rva algn_14000190B, \
.pdata:000000014000E048                                   rva stru_14000BDA8>
.pdata:000000014000E054                 RUNTIME_FUNCTION <rva sub_14000190C, rva algn_140001B57, \
.pdata:000000014000E054                                   rva stru_14000BBAC>
.pdata:000000014000E060                 RUNTIME_FUNCTION <rva sub_140001B58, rva algn_140001EE1, \
.pdata:000000014000E060                                   rva stru_14000BCA8>
.pdata:000000014000E06C                 RUNTIME_FUNCTION <rva sub_140001EE4, rva algn_140002182, \
.pdata:000000014000E06C                                   rva stru_14000BB88>
.pdata:000000014000E078                 RUNTIME_FUNCTION <rva DoScreenSave, rva algn_14000282C, \
.pdata:000000014000E078                                   rva stru_14000BC34>
.pdata:000000014000E084                 RUNTIME_FUNCTION <rva sub_140002830, rva algn_140002941, \
.pdata:000000014000E084                                   rva stru_14000BDE8>
.pdata:000000014000E090                 RUNTIME_FUNCTION <rva sub_140002950, rva algn_140002C4F, \
.pdata:000000014000E090                                   rva stru_14000BBC8>
.pdata:000000014000E09C                 RUNTIME_FUNCTION <rva sub_140002C50, rva algn_140002DEF, \
.pdata:000000014000E09C                                   rva stru_14000BB58>
.pdata:000000014000E0A8                 RUNTIME_FUNCTION <rva sub_140002DF0, rva algn_140002FDD, \
.pdata:000000014000E0A8                                   rva stru_14000BBAC>
.pdata:000000014000E0B4                 RUNTIME_FUNCTION <rva sub_140002FE0, rva sub_140003290, \
.pdata:000000014000E0B4                                   rva stru_14000BBEC>
.pdata:000000014000E0C0                 RUNTIME_FUNCTION <rva sub_140003290, rva algn_1400038AB, \
.pdata:000000014000E0C0                                   rva stru_14000BC0C>
.pdata:000000014000E0CC                 RUNTIME_FUNCTION <rva sub_1400038AC, rva sub_140003B4C, \
.pdata:000000014000E0CC                                   rva stru_14000BD64>
.pdata:000000014000E0D8                 RUNTIME_FUNCTION <rva sub_140003B4C, rva algn_140003EEE, \
.pdata:000000014000E0D8                                   rva stru_14000BD84>
.pdata:000000014000E0E4                 RUNTIME_FUNCTION <rva CallbackRoutine, rva algn_140004312, \
.pdata:000000014000E0E4                                   rva stru_14000BD3C>
.pdata:000000014000E0F0                 RUNTIME_FUNCTION <rva sub_140004314, rva algn_1400046A1, \
.pdata:000000014000E0F0                                   rva stru_14000BC60>
.pdata:000000014000E0FC                 RUNTIME_FUNCTION <rva sub_1400046A4, rva algn_140004956, \
.pdata:000000014000E0FC                                   rva stru_14000BCF0>
.pdata:000000014000E108                 RUNTIME_FUNCTION <rva sub_140004958, rva algn_140004E77, \
.pdata:000000014000E108                                   rva stru_14000BDC0>
.pdata:000000014000E114                 RUNTIME_FUNCTION <rva sub_140004E78, rva algn_14000534F, \
.pdata:000000014000E114                                   rva stru_14000BCC8>
.pdata:000000014000E120                 RUNTIME_FUNCTION <rva sub_140005350, rva algn_140005562, \
.pdata:000000014000E120                                   rva stru_14000BE00>
.pdata:000000014000E12C                 RUNTIME_FUNCTION <rva sub_140005564, rva sub_1400057AC, \
.pdata:000000014000E12C                                   rva stru_14000BE00>
.pdata:000000014000E138                 RUNTIME_FUNCTION <rva sub_1400057AC, rva algn_140005979, \
.pdata:000000014000E138                                   rva stru_14000BC84>
.pdata:000000014000E144                 RUNTIME_FUNCTION <rva sub_14000597C, rva algn_140005B3E, \
.pdata:000000014000E144                                   rva stru_14000BD18>
.pdata:000000014000E150                 RUNTIME_FUNCTION <rva sub_140005B40, rva sub_140005C70, \
.pdata:000000014000E150                                   rva stru_14000BE24>
.pdata:000000014000E15C                 RUNTIME_FUNCTION <rva sub_140005C70, rva sub_140005D44, \
.pdata:000000014000E15C                                   rva stru_14000BB74>
.pdata:000000014000E168                 RUNTIME_FUNCTION <rva sub_140005D44, rva sub_140005E90, \
.pdata:000000014000E168                                   rva stru_14000BE3C>
.pdata:000000014000E174                 RUNTIME_FUNCTION <rva sub_140005E90, rva algn_140006015, \
.pdata:000000014000E174                                   rva stru_14000BE58>
.pdata:000000014000E180                 RUNTIME_FUNCTION <rva sub_140006018, rva algn_1400061D3, \
.pdata:000000014000E180                                   rva stru_14000BB04>
.pdata:000000014000E18C                 RUNTIME_FUNCTION <rva sub_1400061D4, rva algn_1400062C3, \
.pdata:000000014000E18C                                   rva stru_14000BE74>
.pdata:000000014000E198                 RUNTIME_FUNCTION <rva sub_1400062C4, rva algn_1400063E6, \
.pdata:000000014000E198                                   rva stru_14000BE90>
.pdata:000000014000E1A4                 RUNTIME_FUNCTION <rva sub_140006434, rva algn_1400065DD, \
.pdata:000000014000E1A4                                   rva stru_14000BF4C>
.pdata:000000014000E1B0                 RUNTIME_FUNCTION <rva sub_1400065E0, rva algn_140006D5C, \
.pdata:000000014000E1B0                                   rva stru_14000BFB0>
.pdata:000000014000E1BC                 RUNTIME_FUNCTION <rva sub_140006D60, rva algn_14000760B, \
.pdata:000000014000E1BC                                   rva stru_14000BFD8>
.pdata:000000014000E1C8                 RUNTIME_FUNCTION <rva sub_140007610, rva sub_140007B20, \
.pdata:000000014000E1C8                                   rva stru_14000BF8C>
.pdata:000000014000E1D4                 RUNTIME_FUNCTION <rva sub_140007B20, rva algn_140007D4E, \
.pdata:000000014000E1D4                                   rva stru_14000BF70>
.pdata:000000014000E1E0                 RUNTIME_FUNCTION <rva sub_140007E98, rva algn_140008199, \
.pdata:000000014000E1E0                                   rva stru_14000C054>
.pdata:000000014000E1EC                 RUNTIME_FUNCTION <rva sub_14000819C, rva algn_14000857B, \
.pdata:000000014000E1EC                                   rva stru_14000C0A0>
.pdata:000000014000E1F8                 RUNTIME_FUNCTION <rva sub_14000857C, rva algn_140008B87, \
.pdata:000000014000E1F8                                   rva stru_14000C078>
.pdata:000000014000E204                 RUNTIME_FUNCTION <rva sub_140008B90, rva algn_140008F54, \
.pdata:000000014000E204                                   rva stru_14000C028>
.pdata:000000014000E210                 RUNTIME_FUNCTION <rva StartRoutine, rva algn_14000937D, \
.pdata:000000014000E210                                   rva stru_14000C000>
.pdata:000000014000E21C                 RUNTIME_FUNCTION <rva sub_140009380, rva algn_140009473, \
.pdata:000000014000E21C                                   rva stru_14000C0C4>
.pdata:000000014000E228                 RUNTIME_FUNCTION <rva sub_140009474, rva algn_140009585, \
.pdata:000000014000E228                                   rva stru_14000C0DC>
.pdata:000000014000E234                 RUNTIME_FUNCTION <rva sub_140009588, rva algn_1400096DE, \
.pdata:000000014000E234                                   rva stru_14000C0F4>
.pdata:000000014000E240                 RUNTIME_FUNCTION <rva sub_1400096E0, rva sub_14000984C, \
.pdata:000000014000E240                                   rva stru_14000C10C>
.pdata:000000014000E24C                 RUNTIME_FUNCTION <rva sub_14000984C, rva algn_14000993F, \
.pdata:000000014000E24C                                   rva stru_14000C0C4>
.pdata:000000014000E258                 RUNTIME_FUNCTION <rva sub_140009940, rva sub_140009A88, \
.pdata:000000014000E258                                   rva stru_14000C130>
.pdata:000000014000E264                 RUNTIME_FUNCTION <rva sub_140009A88, rva algn_140009CB2, \
.pdata:000000014000E264                                   rva stru_14000C150>
.pdata:000000014000E270                 RUNTIME_FUNCTION <rva sub_140009CB4, rva algn_140009E39, \
.pdata:000000014000E270                                   rva stru_14000C174>
.pdata:000000014000E27C                 RUNTIME_FUNCTION <rva __security_check_cookie, rva algn_140009E7E, \
.pdata:000000014000E27C                                   rva stru_14000C190>
.pdata:000000014000E288                 RUNTIME_FUNCTION <rva __GSHandlerCheck, rva algn_140009EA6, \
.pdata:000000014000E288                                   rva stru_14000C19C>
.pdata:000000014000E294                 RUNTIME_FUNCTION <rva sub_140009EA8, rva algn_140009F08, \
.pdata:000000014000E294                                   rva stru_14000C19C>
.pdata:000000014000E2A0                 RUNTIME_FUNCTION <rva sub_140009F10, rva DriverEntry, \
.pdata:000000014000E2A0                                   rva stru_14000C19C>
.pdata:000000014000E2AC                 RUNTIME_FUNCTION <rva DriverEntry, rva sub_140009F6C, \
.pdata:000000014000E2AC                                   rva stru_14000C1D0>
.pdata:000000014000E2B8                 RUNTIME_FUNCTION <rva sub_140009F6C, rva sub_14000A0C0, \
.pdata:000000014000E2B8                                   rva stru_14000C1B4>
.pdata:000000014000E2C4                 RUNTIME_FUNCTION <rva sub_14000A0C0, rva algn_14000A0CF, \
.pdata:000000014000E2C4                                   rva stru_14000C19C>
.pdata:000000014000E2D0                 RUNTIME_FUNCTION <rva sub_14000A0D0, rva algn_14000A0FD, \
.pdata:000000014000E2D0                                   rva stru_14000C19C>
.pdata:000000014000E2DC                 RUNTIME_FUNCTION <rva sub_14000A100, rva algn_14000A1B5, \
.pdata:000000014000E2DC                                   rva stru_14000C1E0>
.pdata:000000014000E2E8                 RUNTIME_FUNCTION <rva sub_14000A1B8, rva algn_14000A387, \
.pdata:000000014000E2E8                                   rva stru_14000C200>
.pdata:000000014000E2F4                 RUNTIME_FUNCTION <rva sub_14000A388, \
.pdata:000000014000E2F4                                   rva HidP_GetCollectionDescription, \
.pdata:000000014000E2F4                                   rva stru_14000C1F0>
.pdata:000000014000E300                 RUNTIME_FUNCTION <rva _guard_dispatch_icall_nop, rva algn_14000A495, \
.pdata:000000014000E300                                   rva stru_14000C198>
.pdata:000000014000E30C                 RUNTIME_FUNCTION <rva sub_14000A4C0, rva algn_14000A5A9, \
.pdata:000000014000E30C                                   rva stru_14000C1A8>
.pdata:000000014000E318                 RUNTIME_FUNCTION <rva sub_14000A5C0, rva algn_14000A86A, \
.pdata:000000014000E318                                   rva stru_14000C1B0>
.pdata:000000014000E324                 RUNTIME_FUNCTION <rva sub_14000F000, rva algn_14000F0B1, \
.pdata:000000014000E324                                   rva stru_14000BED4>
.pdata:000000014000E330                 RUNTIME_FUNCTION <rva sub_14000F0C0, rva sub_14000F1A0, \
.pdata:000000014000E330                                   rva stru_14000BDA8>
.pdata:000000014000E33C                 RUNTIME_FUNCTION <rva sub_14000F1A0, rva algn_14000F23D, \
.pdata:000000014000E33C                                   rva stru_14000BF20>
.pdata:000000014000E348                 RUNTIME_FUNCTION <rva sub_14000F240, rva algn_14000F307, \
.pdata:000000014000E348                                   rva stru_14000BF34>
.pdata:000000014000E354                 RUNTIME_FUNCTION <rva sub_14000F308, rva algn_14000F41C, \
.pdata:000000014000E354                                   rva stru_14000BEE8>
.pdata:000000014000E360                 RUNTIME_FUNCTION <rva sub_14000F420, rva algn_14000F66B, \
.pdata:000000014000E360                                   rva stru_14000BEFC>
.pdata:000000014000E36C                 RUNTIME_FUNCTION <rva sub_140010000, rva algn_1400101FF, \
.pdata:000000014000E36C                                   rva stru_14000BEB0>
.pdata:000000014000E378                 align 1000h
.pdata:000000014000E378 _pdata          ends
.pdata:000000014000E378
PAGE:000000014000F000 ; Section 5. (virtual address 0000F000)
PAGE:000000014000F000 ; Virtual size                  : 0000074C (   1868.)
PAGE:000000014000F000 ; Section size in file          : 00000800 (   2048.)
PAGE:000000014000F000 ; Offset to raw data for section: 0000BC00
PAGE:000000014000F000 ; Flags 60000020: Text Executable Readable
PAGE:000000014000F000 ; Alignment     : default
PAGE:000000014000F000 ; ===========================================================================
PAGE:000000014000F000
PAGE:000000014000F000 ; Segment type: Pure code
PAGE:000000014000F000 ; Segment permissions: Read/Execute
PAGE:000000014000F000 PAGE            segment para public 'CODE' use64
PAGE:000000014000F000                 assume cs:PAGE
PAGE:000000014000F000                 ;org 14000F000h
PAGE:000000014000F000                 assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing
PAGE:000000014000F000
PAGE:000000014000F000 ; =============== S U B R O U T I N E =======================================
PAGE:000000014000F000
PAGE:000000014000F000
PAGE:000000014000F000 ; void __fastcall sub_14000F000(__int64)
PAGE:000000014000F000 sub_14000F000   proc near               ; DATA XREF: .rdata:000000014000B194↑o
PAGE:000000014000F000                                         ; .pdata:000000014000E324↑o ...
PAGE:000000014000F000
PAGE:000000014000F000 var_18          = qword ptr -18h
PAGE:000000014000F000 arg_0           = qword ptr  8
PAGE:000000014000F000 arg_8           = qword ptr  10h
PAGE:000000014000F000
PAGE:000000014000F000                 mov     [rsp+arg_0], rbx
PAGE:000000014000F005                 mov     [rsp+arg_8], rbp
PAGE:000000014000F00A                 push    rdi
PAGE:000000014000F00B                 sub     rsp, 30h
PAGE:000000014000F00F                 mov     rbx, rcx
PAGE:000000014000F012                 lea     rdi, off_14000D008
PAGE:000000014000F019                 cmp     cs:off_14000D008, rdi
PAGE:000000014000F020                 jz      short loc_14000F07C
PAGE:000000014000F022                 mov     rcx, cs:DeviceObject
PAGE:000000014000F029                 lea     rbp, unk_14000B2D0
PAGE:000000014000F030                 cmp     word ptr [rcx+48h], 0
PAGE:000000014000F035                 jz      short loc_14000F051
PAGE:000000014000F037                 mov     rcx, [rcx+40h]
PAGE:000000014000F03B                 mov     r9d, 14h
PAGE:000000014000F041                 mov     dl, 5
PAGE:000000014000F043                 mov     [rsp+38h+var_18], rbp
PAGE:000000014000F048                 lea     r8d, [r9-10h]
PAGE:000000014000F04C                 call    sub_1400016A8
PAGE:000000014000F051
PAGE:000000014000F051 loc_14000F051:                          ; CODE XREF: sub_14000F000+35↑j
PAGE:000000014000F051                 cmp     cs:off_14000D008, rdi
PAGE:000000014000F058                 jz      short loc_14000F07C
PAGE:000000014000F05A                 mov     rcx, cs:DeviceObject
PAGE:000000014000F061                 mov     r9d, 15h
PAGE:000000014000F067                 mov     [rsp+38h+var_18], rbp
PAGE:000000014000F06C                 mov     rcx, [rcx+40h]
PAGE:000000014000F070                 lea     r8d, [r9-11h]
PAGE:000000014000F074                 mov     dl, r8b
PAGE:000000014000F077                 call    sub_1400016A8
PAGE:000000014000F07C
PAGE:000000014000F07C loc_14000F07C:                          ; CODE XREF: sub_14000F000+20↑j
PAGE:000000014000F07C                                         ; sub_14000F000+58↑j
PAGE:000000014000F07C                 mov     rax, cs:qword_14000D388
PAGE:000000014000F083                 mov     rdx, rbx
PAGE:000000014000F086                 mov     rcx, cs:qword_14000D390
PAGE:000000014000F08D                 mov     rax, [rax+3B0h]
PAGE:000000014000F094                 call    cs:__guard_dispatch_icall_fptr
PAGE:000000014000F09A                 mov     rcx, rax
PAGE:000000014000F09D                 mov     rbx, [rsp+38h+arg_0]
PAGE:000000014000F0A2                 mov     rbp, [rsp+38h+arg_8]
PAGE:000000014000F0A7                 add     rsp, 30h
PAGE:000000014000F0AB                 pop     rdi
PAGE:000000014000F0AC                 jmp     sub_14000F1A0
PAGE:000000014000F0AC sub_14000F000   endp
PAGE:000000014000F0AC
PAGE:000000014000F0AC ; ---------------------------------------------------------------------------
PAGE:000000014000F0B1 algn_14000F0B1:                         ; DATA XREF: .pdata:000000014000E324↑o
PAGE:000000014000F0B1                 align 20h
PAGE:000000014000F0C0
PAGE:000000014000F0C0 ; =============== S U B R O U T I N E =======================================
PAGE:000000014000F0C0
PAGE:000000014000F0C0
PAGE:000000014000F0C0 ; __int64 __fastcall sub_14000F0C0(__int64, __int64)
PAGE:000000014000F0C0 sub_14000F0C0   proc near               ; DATA XREF: .rdata:000000014000B198↑o
PAGE:000000014000F0C0                                         ; .pdata:000000014000E330↑o ...
PAGE:000000014000F0C0
PAGE:000000014000F0C0 var_18          = qword ptr -18h
PAGE:000000014000F0C0 var_10          = dword ptr -10h
PAGE:000000014000F0C0 arg_0           = qword ptr  8
PAGE:000000014000F0C0 arg_8           = qword ptr  10h
PAGE:000000014000F0C0 arg_10          = qword ptr  18h
PAGE:000000014000F0C0
PAGE:000000014000F0C0                 mov     rax, rsp
PAGE:000000014000F0C3                 mov     [rax+8], rbx
PAGE:000000014000F0C7                 mov     [rax+10h], rsi
PAGE:000000014000F0CB                 mov     [rax+18h], rdi
PAGE:000000014000F0CF                 push    r14
PAGE:000000014000F0D1                 sub     rsp, 30h
PAGE:000000014000F0D5                 mov     rbx, rdx
PAGE:000000014000F0D8                 lea     rsi, off_14000D008
PAGE:000000014000F0DF                 xor     edi, edi
PAGE:000000014000F0E1                 cmp     cs:off_14000D008, rsi
PAGE:000000014000F0E8                 lea     r14, unk_14000B2D0
PAGE:000000014000F0EF                 jz      short loc_14000F115
PAGE:000000014000F0F1                 mov     rcx, cs:DeviceObject
PAGE:000000014000F0F8                 cmp     [rcx+48h], di
PAGE:000000014000F0FC                 jz      short loc_14000F115
PAGE:000000014000F0FE                 mov     rcx, [rcx+40h]
PAGE:000000014000F102                 lea     r9d, [rdi+11h]
PAGE:000000014000F106                 lea     r8d, [rdi+4]
PAGE:000000014000F10A                 mov     [rax-18h], r14
PAGE:000000014000F10E                 mov     dl, 5
PAGE:000000014000F110                 call    sub_1400016A8
PAGE:000000014000F115
PAGE:000000014000F115 loc_14000F115:                          ; CODE XREF: sub_14000F0C0+2F↑j
PAGE:000000014000F115                                         ; sub_14000F0C0+3C↑j
PAGE:000000014000F115                 mov     rcx, rbx
PAGE:000000014000F118                 call    sub_140001EE4
PAGE:000000014000F11D                 mov     ebx, eax
PAGE:000000014000F11F                 test    eax, eax
PAGE:000000014000F121                 jns     short loc_14000F154
PAGE:000000014000F123                 cmp     cs:off_14000D008, rsi
PAGE:000000014000F12A                 jz      short loc_14000F188
PAGE:000000014000F12C                 lfence
PAGE:000000014000F12F                 mov     rcx, cs:DeviceObject
PAGE:000000014000F136                 mov     r9d, 12h
PAGE:000000014000F13C                 mov     [rsp+38h+var_10], eax
PAGE:000000014000F140                 mov     dl, 2
PAGE:000000014000F142                 mov     [rsp+38h+var_18], r14
PAGE:000000014000F147                 mov     rcx, [rcx+40h]
PAGE:000000014000F14B                 lea     r8d, [r9-0Eh]
PAGE:000000014000F14F                 call    sub_14000176C
PAGE:000000014000F154
PAGE:000000014000F154 loc_14000F154:                          ; CODE XREF: sub_14000F0C0+61↑j
PAGE:000000014000F154                 cmp     cs:off_14000D008, rsi
PAGE:000000014000F15B                 jz      short loc_14000F188
PAGE:000000014000F15D                 mov     rcx, cs:DeviceObject
PAGE:000000014000F164                 cmp     [rcx+48h], di
PAGE:000000014000F168                 jz      short loc_14000F188
PAGE:000000014000F16A                 mov     rcx, [rcx+40h]
PAGE:000000014000F16E                 mov     r9d, 13h
PAGE:000000014000F174                 mov     [rsp+38h+var_10], ebx
PAGE:000000014000F178                 mov     dl, 5
PAGE:000000014000F17A                 mov     [rsp+38h+var_18], r14
PAGE:000000014000F17F                 lea     r8d, [r9-0Fh]
PAGE:000000014000F183                 call    sub_14000176C
PAGE:000000014000F188
PAGE:000000014000F188 loc_14000F188:                          ; CODE XREF: sub_14000F0C0+6A↑j
PAGE:000000014000F188                                         ; sub_14000F0C0+9B↑j ...
PAGE:000000014000F188                 mov     rsi, [rsp+38h+arg_8]
PAGE:000000014000F18D                 mov     eax, ebx
PAGE:000000014000F18F                 mov     rbx, [rsp+38h+arg_0]
PAGE:000000014000F194                 mov     rdi, [rsp+38h+arg_10]
PAGE:000000014000F199                 add     rsp, 30h
PAGE:000000014000F19D                 pop     r14
PAGE:000000014000F19F                 retn
PAGE:000000014000F19F sub_14000F0C0   endp
PAGE:000000014000F19F
PAGE:000000014000F1A0
PAGE:000000014000F1A0 ; =============== S U B R O U T I N E =======================================
PAGE:000000014000F1A0
PAGE:000000014000F1A0
PAGE:000000014000F1A0 ; void __fastcall sub_14000F1A0(__int64)
PAGE:000000014000F1A0 sub_14000F1A0   proc near               ; CODE XREF: sub_14000F000+AC↑j
PAGE:000000014000F1A0                                         ; sub_140010000+1A1↓p
PAGE:000000014000F1A0                                         ; DATA XREF: ...
PAGE:000000014000F1A0
PAGE:000000014000F1A0 arg_0           = qword ptr  8
PAGE:000000014000F1A0 arg_8           = qword ptr  10h
PAGE:000000014000F1A0
PAGE:000000014000F1A0                 mov     [rsp+arg_0], rbx
PAGE:000000014000F1A5                 mov     [rsp+arg_8], rsi
PAGE:000000014000F1AA                 push    rdi
PAGE:000000014000F1AB                 sub     rsp, 20h
PAGE:000000014000F1AF                 mov     rbx, cs:DeviceObject
PAGE:000000014000F1B6                 lea     rsi, DeviceObject
PAGE:000000014000F1BD                 mov     rdi, rcx
PAGE:000000014000F1C0                 cmp     rbx, rsi
PAGE:000000014000F1C3                 jz      short loc_14000F207
PAGE:000000014000F1C5                 mov     eax, cs:dword_14000D108
PAGE:000000014000F1CB                 cmp     eax, 4
PAGE:000000014000F1CE                 jz      short loc_14000F236
PAGE:000000014000F1D0                 cmp     eax, 2
PAGE:000000014000F1D3                 jnz     short loc_14000F1E3
PAGE:000000014000F1D5                 mov     edx, 80000002h  ; Action
PAGE:000000014000F1DA                 mov     rcx, rbx        ; DeviceObject
PAGE:000000014000F1DD                 call    cs:IoWMIRegistrationControl
PAGE:000000014000F1E3
PAGE:000000014000F1E3 loc_14000F1E3:                          ; CODE XREF: sub_14000F1A0+33↑j
PAGE:000000014000F1E3                                         ; sub_14000F1A0+9B↓j
PAGE:000000014000F1E3                 mov     rcx, cs:DeviceObject
PAGE:000000014000F1EA                 mov     rdx, rdi
PAGE:000000014000F1ED                 call    WppAutoLogStop
PAGE:000000014000F1F2                 lea     rax, off_14000D008
PAGE:000000014000F1F9                 mov     cs:DeviceObject, rsi
PAGE:000000014000F200                 mov     cs:off_14000D008, rax
PAGE:000000014000F207
PAGE:000000014000F207 loc_14000F207:                          ; CODE XREF: sub_14000F1A0+23↑j
PAGE:000000014000F207                 mov     rbx, [rsp+28h+arg_0]
PAGE:000000014000F20C                 mov     rsi, [rsp+28h+arg_8]
PAGE:000000014000F211                 add     rsp, 20h
PAGE:000000014000F215                 pop     rdi
PAGE:000000014000F216                 retn
PAGE:000000014000F217 ; ---------------------------------------------------------------------------
PAGE:000000014000F217
PAGE:000000014000F217 loc_14000F217:                          ; CODE XREF: sub_14000F1A0+99↓j
PAGE:000000014000F217                 mov     rcx, [rbx+38h]
PAGE:000000014000F21B                 test    rcx, rcx
PAGE:000000014000F21E                 jz      short loc_14000F232
PAGE:000000014000F220                 mov     rax, cs:qword_14000D0F0
PAGE:000000014000F227                 call    cs:__guard_dispatch_icall_fptr
PAGE:000000014000F22D                 and     qword ptr [rbx+38h], 0
PAGE:000000014000F232
PAGE:000000014000F232 loc_14000F232:                          ; CODE XREF: sub_14000F1A0+7E↑j
PAGE:000000014000F232                 mov     rbx, [rbx+10h]
PAGE:000000014000F236
PAGE:000000014000F236 loc_14000F236:                          ; CODE XREF: sub_14000F1A0+2E↑j
PAGE:000000014000F236                 test    rbx, rbx
PAGE:000000014000F239                 jnz     short loc_14000F217
PAGE:000000014000F23B                 jmp     short loc_14000F1E3
PAGE:000000014000F23B sub_14000F1A0   endp
PAGE:000000014000F23B
PAGE:000000014000F23B ; ---------------------------------------------------------------------------
PAGE:000000014000F23D algn_14000F23D:                         ; DATA XREF: .pdata:000000014000E33C↑o
PAGE:000000014000F23D                 align 20h
PAGE:000000014000F240
PAGE:000000014000F240 ; =============== S U B R O U T I N E =======================================
PAGE:000000014000F240
PAGE:000000014000F240
PAGE:000000014000F240 ; void __fastcall sub_14000F240(__int64, __int64)
PAGE:000000014000F240 sub_14000F240   proc near               ; CODE XREF: sub_140010000+7B↓p
PAGE:000000014000F240                                         ; DATA XREF: .pdata:000000014000E348↑o
PAGE:000000014000F240
PAGE:000000014000F240 var_18          = qword ptr -18h
PAGE:000000014000F240 arg_0           = qword ptr  8
PAGE:000000014000F240 arg_8           = qword ptr  10h
PAGE:000000014000F240 arg_10          = qword ptr  18h
PAGE:000000014000F240
PAGE:000000014000F240                 mov     [rsp+arg_0], rbx
PAGE:000000014000F245                 mov     [rsp+arg_8], rbp
PAGE:000000014000F24A                 mov     [rsp+arg_10], rsi
PAGE:000000014000F24F                 push    rdi
PAGE:000000014000F250                 sub     rsp, 30h
PAGE:000000014000F254                 lea     rbp, stru_14000D110
PAGE:000000014000F25B                 mov     rdi, rdx
PAGE:000000014000F25E                 cmp     cs:DeviceObject, rbp
PAGE:000000014000F265                 mov     rsi, rcx
PAGE:000000014000F268                 jz      loc_14000F2F2
PAGE:000000014000F26E                 mov     eax, cs:dword_14000D108
PAGE:000000014000F274                 mov     cs:DeviceObject, rbp
PAGE:000000014000F27B                 cmp     eax, 4
PAGE:000000014000F27E                 jnz     short loc_14000F2B8
PAGE:000000014000F280                 mov     rbx, rbp
PAGE:000000014000F283
PAGE:000000014000F283 loc_14000F283:                          ; CODE XREF: sub_14000F240+74↓j
PAGE:000000014000F283                 lea     rcx, [rbx+38h]
PAGE:000000014000F287                 mov     r9, rbx
PAGE:000000014000F28A                 and     qword ptr [rcx], 0
PAGE:000000014000F28E                 lea     r8, sub_1400063F0
PAGE:000000014000F295                 mov     rax, cs:qword_14000D0F8
PAGE:000000014000F29C                 xor     edx, edx
PAGE:000000014000F29E                 mov     [rsp+38h+var_18], rcx
PAGE:000000014000F2A3                 mov     rcx, [rbx+8]
PAGE:000000014000F2A7                 call    cs:__guard_dispatch_icall_fptr
PAGE:000000014000F2AD                 mov     rbx, [rbx+10h]
PAGE:000000014000F2B1                 test    rbx, rbx
PAGE:000000014000F2B4                 jnz     short loc_14000F283
PAGE:000000014000F2B6                 jmp     short loc_14000F2D9
PAGE:000000014000F2B8 ; ---------------------------------------------------------------------------
PAGE:000000014000F2B8
PAGE:000000014000F2B8 loc_14000F2B8:                          ; CODE XREF: sub_14000F240+3E↑j
PAGE:000000014000F2B8                 cmp     eax, 2
PAGE:000000014000F2BB                 jnz     short loc_14000F2D9
PAGE:000000014000F2BD                 lea     rax, sub_14000F420
PAGE:000000014000F2C4                 mov     edx, 80010001h  ; Action
PAGE:000000014000F2C9                 mov     rcx, rbp        ; DeviceObject
PAGE:000000014000F2CC                 mov     qword ptr cs:stru_14000D110.Type, rax
PAGE:000000014000F2D3                 call    cs:IoWMIRegistrationControl
PAGE:000000014000F2D9
PAGE:000000014000F2D9 loc_14000F2D9:                          ; CODE XREF: sub_14000F240+76↑j
PAGE:000000014000F2D9                                         ; sub_14000F240+7B↑j
PAGE:000000014000F2D9                 mov     rcx, cs:DeviceObject
PAGE:000000014000F2E0                 mov     r8, rdi
PAGE:000000014000F2E3                 mov     rdx, rsi
PAGE:000000014000F2E6                 call    WppAutoLogStart
PAGE:000000014000F2EB                 mov     cs:off_14000D008, rbp
PAGE:000000014000F2F2
PAGE:000000014000F2F2 loc_14000F2F2:                          ; CODE XREF: sub_14000F240+28↑j
PAGE:000000014000F2F2                 mov     rbx, [rsp+38h+arg_0]
PAGE:000000014000F2F7                 mov     rbp, [rsp+38h+arg_8]
PAGE:000000014000F2FC                 mov     rsi, [rsp+38h+arg_10]
PAGE:000000014000F301                 add     rsp, 30h
PAGE:000000014000F305                 pop     rdi
PAGE:000000014000F306                 retn
PAGE:000000014000F306 sub_14000F240   endp
PAGE:000000014000F306
PAGE:000000014000F306 ; ---------------------------------------------------------------------------
PAGE:000000014000F307 algn_14000F307:                         ; DATA XREF: .pdata:000000014000E348↑o
PAGE:000000014000F307                 align 8
PAGE:000000014000F308
PAGE:000000014000F308 ; =============== S U B R O U T I N E =======================================
PAGE:000000014000F308
PAGE:000000014000F308 ; Attributes: bp-based frame
PAGE:000000014000F308
PAGE:000000014000F308 ; PVOID sub_14000F308()
PAGE:000000014000F308 sub_14000F308   proc near               ; CODE XREF: sub_140010000+69↓p
PAGE:000000014000F308                                         ; DATA XREF: .pdata:000000014000E354↑o
PAGE:000000014000F308
PAGE:000000014000F308 var_20          = dword ptr -20h
PAGE:000000014000F308 DestinationString= _UNICODE_STRING ptr -18h
PAGE:000000014000F308 var_8           = qword ptr -8
PAGE:000000014000F308
PAGE:000000014000F308 ; __unwind { // __GSHandlerCheck
PAGE:000000014000F308                 push    rbp
PAGE:000000014000F30A                 mov     rbp, rsp
PAGE:000000014000F30D                 sub     rsp, 50h
PAGE:000000014000F311                 mov     rax, cs:__security_cookie
PAGE:000000014000F318                 xor     rax, rsp
PAGE:000000014000F31B                 mov     [rbp+var_8], rax
PAGE:000000014000F31F                 and     [rbp+var_20], 0
PAGE:000000014000F323                 lea     rdx, SourceString ; "PsGetVersion"
PAGE:000000014000F32A                 lea     rcx, [rbp+DestinationString] ; DestinationString
PAGE:000000014000F32E                 call    cs:RtlInitUnicodeString
PAGE:000000014000F334                 lea     rcx, [rbp+DestinationString] ; SystemRoutineName
PAGE:000000014000F338                 call    cs:MmGetSystemRoutineAddress
PAGE:000000014000F33E                 lea     rdx, aWmitracemessag ; "WmiTraceMessage"
PAGE:000000014000F345                 mov     cs:qword_14000D100, rax
PAGE:000000014000F34C                 lea     rcx, [rbp+DestinationString] ; DestinationString
PAGE:000000014000F350                 call    cs:RtlInitUnicodeString
PAGE:000000014000F356                 lea     rcx, [rbp+DestinationString] ; SystemRoutineName
PAGE:000000014000F35A                 call    cs:MmGetSystemRoutineAddress
PAGE:000000014000F360                 lea     rdx, aWmiquerytracei ; "WmiQueryTraceInformation"
PAGE:000000014000F367                 mov     cs:qword_14000D0E8, rax
PAGE:000000014000F36E                 lea     rcx, [rbp+DestinationString] ; DestinationString
PAGE:000000014000F372                 call    cs:RtlInitUnicodeString
PAGE:000000014000F378                 lea     rcx, [rbp+DestinationString] ; SystemRoutineName
PAGE:000000014000F37C                 call    cs:MmGetSystemRoutineAddress
PAGE:000000014000F382                 mov     cs:qword_14000D0E0, rax
PAGE:000000014000F389                 mov     rax, cs:qword_14000D100
PAGE:000000014000F390                 mov     cs:dword_14000D108, 2
PAGE:000000014000F39A                 test    rax, rax
PAGE:000000014000F39D                 jz      short loc_14000F3B1
PAGE:000000014000F39F                 xor     r9d, r9d
PAGE:000000014000F3A2                 lea     rcx, [rbp+var_20]
PAGE:000000014000F3A6                 xor     r8d, r8d
PAGE:000000014000F3A9                 xor     edx, edx
PAGE:000000014000F3AB                 call    cs:__guard_dispatch_icall_fptr
PAGE:000000014000F3B1
PAGE:000000014000F3B1 loc_14000F3B1:                          ; CODE XREF: sub_14000F308+95↑j
PAGE:000000014000F3B1                 cmp     [rbp+var_20], 6
PAGE:000000014000F3B5                 jb      short loc_14000F40A
PAGE:000000014000F3B7                 lea     rdx, aEtwregistercla ; "EtwRegisterClassicProvider"
PAGE:000000014000F3BE                 lea     rcx, [rbp+DestinationString] ; DestinationString
PAGE:000000014000F3C2                 call    cs:RtlInitUnicodeString
PAGE:000000014000F3C8                 lea     rcx, [rbp+DestinationString] ; SystemRoutineName
PAGE:000000014000F3CC                 call    cs:MmGetSystemRoutineAddress
PAGE:000000014000F3D2                 mov     cs:qword_14000D0F8, rax
PAGE:000000014000F3D9                 test    rax, rax
PAGE:000000014000F3DC                 jz      short loc_14000F40A
PAGE:000000014000F3DE                 lea     rdx, aEtwunregister ; "EtwUnregister"
PAGE:000000014000F3E5                 lea     rcx, [rbp+DestinationString] ; DestinationString
PAGE:000000014000F3E9                 call    cs:RtlInitUnicodeString
PAGE:000000014000F3EF                 lea     rcx, [rbp+DestinationString] ; SystemRoutineName
PAGE:000000014000F3F3                 call    cs:MmGetSystemRoutineAddress
PAGE:000000014000F3F9                 mov     cs:qword_14000D0F0, rax
PAGE:000000014000F400                 mov     cs:dword_14000D108, 4
PAGE:000000014000F40A
PAGE:000000014000F40A loc_14000F40A:                          ; CODE XREF: sub_14000F308+AD↑j
PAGE:000000014000F40A                                         ; sub_14000F308+D4↑j
PAGE:000000014000F40A                 mov     rcx, [rbp+var_8]
PAGE:000000014000F40E                 xor     rcx, rsp        ; StackCookie
PAGE:000000014000F411                 call    __security_check_cookie
PAGE:000000014000F416                 add     rsp, 50h
PAGE:000000014000F41A                 pop     rbp
PAGE:000000014000F41B                 retn
PAGE:000000014000F41B ; } // starts at 14000F308
PAGE:000000014000F41B sub_14000F308   endp
PAGE:000000014000F41B
PAGE:000000014000F41B ; ---------------------------------------------------------------------------
PAGE:000000014000F41C algn_14000F41C:                         ; DATA XREF: .pdata:000000014000E354↑o
PAGE:000000014000F41C                 align 20h
PAGE:000000014000F420
PAGE:000000014000F420 ; =============== S U B R O U T I N E =======================================
PAGE:000000014000F420
PAGE:000000014000F420
PAGE:000000014000F420 ; __int64 __fastcall sub_14000F420(unsigned __int8, __int64, unsigned int, __m128 *, __int64, unsigned int *)
PAGE:000000014000F420 sub_14000F420   proc near               ; DATA XREF: .rdata:000000014000B19C↑o
PAGE:000000014000F420                                         ; .pdata:000000014000E360↑o ...
PAGE:000000014000F420
PAGE:000000014000F420 var_68          = qword ptr -68h
PAGE:000000014000F420 var_58          = qword ptr -58h
PAGE:000000014000F420 var_50          = byte ptr -50h
PAGE:000000014000F420 var_4C          = byte ptr -4Ch
PAGE:000000014000F420 var_48          = qword ptr -48h
PAGE:000000014000F420 arg_0           = qword ptr  8
PAGE:000000014000F420 arg_20          = qword ptr  28h
PAGE:000000014000F420 arg_28          = qword ptr  30h
PAGE:000000014000F420
PAGE:000000014000F420 ; __unwind { // __GSHandlerCheck
PAGE:000000014000F420                 mov     [rsp+arg_0], rbx
PAGE:000000014000F425                 push    rbp
PAGE:000000014000F426                 push    rsi
PAGE:000000014000F427                 push    rdi
PAGE:000000014000F428                 push    r12
PAGE:000000014000F42A                 push    r13
PAGE:000000014000F42C                 push    r14
PAGE:000000014000F42E                 push    r15
PAGE:000000014000F430                 sub     rsp, 50h
PAGE:000000014000F434                 mov     rax, cs:__security_cookie
PAGE:000000014000F43B                 xor     rax, rsp
PAGE:000000014000F43E                 mov     [rsp+88h+var_48], rax
PAGE:000000014000F443                 mov     r13, [rsp+88h+arg_28]
PAGE:000000014000F44B                 xor     ebx, ebx
PAGE:000000014000F44D                 mov     rdi, [rsp+88h+arg_20]
PAGE:000000014000F455                 mov     rsi, r9
PAGE:000000014000F458                 mov     [r13+0], ebx
PAGE:000000014000F45C                 cmp     cl, 3
PAGE:000000014000F45F                 jbe     loc_14000F63F
PAGE:000000014000F465                 cmp     cl, 5
PAGE:000000014000F468                 jbe     loc_14000F55D
PAGE:000000014000F46E                 cmp     cl, 7
PAGE:000000014000F471                 jbe     loc_14000F644
PAGE:000000014000F477                 cmp     cl, 8
PAGE:000000014000F47A                 jnz     loc_14000F63F
PAGE:000000014000F480                 mov     r15, [rdi+20h]
PAGE:000000014000F484                 mov     ebp, ebx
PAGE:000000014000F486                 mov     rax, rdi
PAGE:000000014000F489
PAGE:000000014000F489 loc_14000F489:                          ; CODE XREF: sub_14000F420+72↓j
PAGE:000000014000F489                 mov     rax, [rax+10h]
PAGE:000000014000F48D                 inc     ebp
PAGE:000000014000F48F                 test    rax, rax
PAGE:000000014000F492                 jnz     short loc_14000F489
PAGE:000000014000F494                 cmp     ebp, 3Fh ; '?'
PAGE:000000014000F497                 jbe     short loc_14000F4A3
PAGE:000000014000F499
PAGE:000000014000F499 loc_14000F499:                          ; CODE XREF: sub_14000F420+150↓j
PAGE:000000014000F499                 mov     ebx, 0C000000Dh
PAGE:000000014000F49E                 jmp     loc_14000F644
PAGE:000000014000F4A3 ; ---------------------------------------------------------------------------
PAGE:000000014000F4A3
PAGE:000000014000F4A3 loc_14000F4A3:                          ; CODE XREF: sub_14000F420+77↑j
PAGE:000000014000F4A3                 mov     r14d, ebp
PAGE:000000014000F4A6                 shl     r14d, 5
PAGE:000000014000F4AA                 add     r14d, 18h
PAGE:000000014000F4AE                 test    r15, r15
PAGE:000000014000F4B1                 jnz     short loc_14000F4B8
PAGE:000000014000F4B3                 mov     r12d, ebx
PAGE:000000014000F4B6                 jmp     short loc_14000F4C6
PAGE:000000014000F4B8 ; ---------------------------------------------------------------------------
PAGE:000000014000F4B8
PAGE:000000014000F4B8 loc_14000F4B8:                          ; CODE XREF: sub_14000F420+91↑j
PAGE:000000014000F4B8                 mov     r12d, r14d
PAGE:000000014000F4BB                 movzx   r14d, word ptr [r15]
PAGE:000000014000F4BF                 add     r14d, 2
PAGE:000000014000F4C3                 add     r14d, r12d
PAGE:000000014000F4C6
PAGE:000000014000F4C6 loc_14000F4C6:                          ; CODE XREF: sub_14000F420+96↑j
PAGE:000000014000F4C6                 cmp     r14d, r8d
PAGE:000000014000F4C9                 ja      short loc_14000F53E
PAGE:000000014000F4CB                 mov     r8d, r8d
PAGE:000000014000F4CE                 xor     edx, edx
PAGE:000000014000F4D0                 mov     rcx, rsi
PAGE:000000014000F4D3                 call    sub_14000A4C0
PAGE:000000014000F4D8                 mov     [rsi], r14d
PAGE:000000014000F4DB                 mov     [rsi+8], r12d
PAGE:000000014000F4DF                 mov     [rsi+10h], ebp
PAGE:000000014000F4E2                 test    r15, r15
PAGE:000000014000F4E5                 jz      short loc_14000F505
PAGE:000000014000F4E7                 movzx   eax, word ptr [r15]
PAGE:000000014000F4EB                 mov     ecx, r12d
PAGE:000000014000F4EE                 add     rcx, rsi
PAGE:000000014000F4F1                 mov     [rcx], ax
PAGE:000000014000F4F4                 add     rcx, 2
PAGE:000000014000F4F8                 movzx   r8d, word ptr [r15]
PAGE:000000014000F4FC                 mov     rdx, [r15+8]
PAGE:000000014000F500                 call    sub_14000A5C0
PAGE:000000014000F505
PAGE:000000014000F505 loc_14000F505:                          ; CODE XREF: sub_14000F420+C5↑j
PAGE:000000014000F505                 test    ebp, ebp
PAGE:000000014000F507                 jz      short loc_14000F535
PAGE:000000014000F509                 add     rsi, 28h ; '('
PAGE:000000014000F50D                 mov     ecx, ebp
PAGE:000000014000F50F
PAGE:000000014000F50F loc_14000F50F:                          ; CODE XREF: sub_14000F420+113↓j
PAGE:000000014000F50F                 mov     rax, [rdi+8]
PAGE:000000014000F513                 movups  xmm0, xmmword ptr [rax]
PAGE:000000014000F516                 mov     dword ptr [rsi], 81000h
PAGE:000000014000F51C                 lea     rsi, [rsi+20h]
PAGE:000000014000F520                 movdqu  xmmword ptr [rsi-30h], xmm0
PAGE:000000014000F525                 mov     [rdi+29h], bl
PAGE:000000014000F528                 mov     [rdi+2Ch], ebx
PAGE:000000014000F52B                 mov     rdi, [rdi+10h]
PAGE:000000014000F52F                 sub     rcx, 1
PAGE:000000014000F533                 jnz     short loc_14000F50F
PAGE:000000014000F535
PAGE:000000014000F535 loc_14000F535:                          ; CODE XREF: sub_14000F420+E7↑j
PAGE:000000014000F535                 mov     [r13+0], r14d
PAGE:000000014000F539                 jmp     loc_14000F644
PAGE:000000014000F53E ; ---------------------------------------------------------------------------
PAGE:000000014000F53E
PAGE:000000014000F53E loc_14000F53E:                          ; CODE XREF: sub_14000F420+A9↑j
PAGE:000000014000F53E                 mov     ebx, 0C0000023h
PAGE:000000014000F543                 cmp     r8d, 4
PAGE:000000014000F547                 jb      loc_14000F644
PAGE:000000014000F54D                 mov     [r9], r14d
PAGE:000000014000F550                 mov     dword ptr [r13+0], 4
PAGE:000000014000F558                 jmp     loc_14000F644
PAGE:000000014000F55D ; ---------------------------------------------------------------------------
PAGE:000000014000F55D
PAGE:000000014000F55D loc_14000F55D:                          ; CODE XREF: sub_14000F420+48↑j
PAGE:000000014000F55D                 test    rdi, rdi
PAGE:000000014000F560                 jnz     short loc_14000F56C
PAGE:000000014000F562
PAGE:000000014000F562 loc_14000F562:                          ; CODE XREF: sub_14000F420+18A↓j
PAGE:000000014000F562                 mov     ebx, 0C0000295h
PAGE:000000014000F567                 jmp     loc_14000F644
PAGE:000000014000F56C ; ---------------------------------------------------------------------------
PAGE:000000014000F56C
PAGE:000000014000F56C loc_14000F56C:                          ; CODE XREF: sub_14000F420+140↑j
PAGE:000000014000F56C                 cmp     r8d, 30h ; '0'
PAGE:000000014000F570                 jb      loc_14000F499
PAGE:000000014000F576                 mov     r8d, [r9+18h]
PAGE:000000014000F57A
PAGE:000000014000F57A loc_14000F57A:                          ; CODE XREF: sub_14000F420+185↓j
PAGE:000000014000F57A                 mov     rdx, [rdi+8]
PAGE:000000014000F57E                 cmp     [rdx], r8d
PAGE:000000014000F581                 jnz     short loc_14000F59E
PAGE:000000014000F583                 mov     eax, [r9+1Ch]
PAGE:000000014000F587                 cmp     [rdx+4], eax
PAGE:000000014000F58A                 jnz     short loc_14000F59E
PAGE:000000014000F58C                 mov     eax, [r9+20h]
PAGE:000000014000F590                 cmp     [rdx+8], eax
PAGE:000000014000F593                 jnz     short loc_14000F59E
PAGE:000000014000F595                 mov     eax, [r9+24h]
PAGE:000000014000F599                 cmp     [rdx+0Ch], eax
PAGE:000000014000F59C                 jz      short loc_14000F5A7
PAGE:000000014000F59E
PAGE:000000014000F59E loc_14000F59E:                          ; CODE XREF: sub_14000F420+161↑j
PAGE:000000014000F59E                                         ; sub_14000F420+16A↑j ...
PAGE:000000014000F59E                 mov     rdi, [rdi+10h]
PAGE:000000014000F5A2                 test    rdi, rdi
PAGE:000000014000F5A5                 jnz     short loc_14000F57A
PAGE:000000014000F5A7
PAGE:000000014000F5A7 loc_14000F5A7:                          ; CODE XREF: sub_14000F420+17C↑j
PAGE:000000014000F5A7                 test    rdi, rdi
PAGE:000000014000F5AA                 jz      short loc_14000F562
PAGE:000000014000F5AC                 cmp     cl, 5
PAGE:000000014000F5AF                 jnz     short loc_14000F5C0
PAGE:000000014000F5B1                 mov     [rdi+2Ch], ebx
PAGE:000000014000F5B4                 mov     [rdi+18h], rbx
PAGE:000000014000F5B8                 mov     [rdi+29h], bl
PAGE:000000014000F5BB                 jmp     loc_14000F644
PAGE:000000014000F5C0 ; ---------------------------------------------------------------------------
PAGE:000000014000F5C0
PAGE:000000014000F5C0 loc_14000F5C0:                          ; CODE XREF: sub_14000F420+18F↑j
PAGE:000000014000F5C0                 mov     rax, [r9+8]
PAGE:000000014000F5C4                 mov     [rdi+18h], rax
PAGE:000000014000F5C8                 cmp     cs:dword_14000D108, 2
PAGE:000000014000F5CF                 mov     [rsp+88h+var_58], rax
PAGE:000000014000F5D4                 jnz     short loc_14000F62F
PAGE:000000014000F5D6                 mov     rax, cs:qword_14000D0E0
PAGE:000000014000F5DD                 lea     r9, [rsp+88h+var_4C]
PAGE:000000014000F5E2                 mov     r8d, 4
PAGE:000000014000F5E8                 mov     [rsp+88h+var_68], rsi
PAGE:000000014000F5ED                 lea     rdx, [rsp+88h+var_50]
PAGE:000000014000F5F2                 lea     ecx, [r8-1]
PAGE:000000014000F5F6                 call    cs:__guard_dispatch_icall_fptr
PAGE:000000014000F5FC                 test    eax, eax
PAGE:000000014000F5FE                 jnz     short loc_14000F607
PAGE:000000014000F600                 mov     al, [rsp+88h+var_50]
PAGE:000000014000F604                 mov     [rdi+29h], al
PAGE:000000014000F607
PAGE:000000014000F607 loc_14000F607:                          ; CODE XREF: sub_14000F420+1DE↑j
PAGE:000000014000F607                 mov     rax, cs:qword_14000D0E0
PAGE:000000014000F60E                 lea     rdx, [rdi+2Ch]
PAGE:000000014000F612                 mov     ecx, 2
PAGE:000000014000F617                 mov     [rsp+88h+var_68], rsi
PAGE:000000014000F61C                 lea     r9, [rsp+88h+var_4C]
PAGE:000000014000F621                 lea     r8d, [rcx+2]
PAGE:000000014000F625                 call    cs:__guard_dispatch_icall_fptr
PAGE:000000014000F62B                 mov     ebx, eax
PAGE:000000014000F62D                 jmp     short loc_14000F644
PAGE:000000014000F62F ; ---------------------------------------------------------------------------
PAGE:000000014000F62F
PAGE:000000014000F62F loc_14000F62F:                          ; CODE XREF: sub_14000F420+1B4↑j
PAGE:000000014000F62F                 mov     eax, dword ptr [rsp+88h+var_58+4]
PAGE:000000014000F633                 mov     [rdi+2Ch], eax
PAGE:000000014000F636                 mov     al, byte ptr [rsp+88h+var_58+2]
PAGE:000000014000F63A                 mov     [rdi+29h], al
PAGE:000000014000F63D                 jmp     short loc_14000F644
PAGE:000000014000F63F ; ---------------------------------------------------------------------------
PAGE:000000014000F63F
PAGE:000000014000F63F loc_14000F63F:                          ; CODE XREF: sub_14000F420+3F↑j
PAGE:000000014000F63F                                         ; sub_14000F420+5A↑j
PAGE:000000014000F63F                 mov     ebx, 0C0000010h
PAGE:000000014000F644
PAGE:000000014000F644 loc_14000F644:                          ; CODE XREF: sub_14000F420+51↑j
PAGE:000000014000F644                                         ; sub_14000F420+7E↑j ...
PAGE:000000014000F644                 mov     eax, ebx
PAGE:000000014000F646                 mov     rcx, [rsp+88h+var_48]
PAGE:000000014000F64B                 xor     rcx, rsp        ; StackCookie
PAGE:000000014000F64E                 call    __security_check_cookie
PAGE:000000014000F653                 mov     rbx, [rsp+88h+arg_0]
PAGE:000000014000F65B                 add     rsp, 50h
PAGE:000000014000F65F                 pop     r15
PAGE:000000014000F661                 pop     r14
PAGE:000000014000F663                 pop     r13
PAGE:000000014000F665                 pop     r12
PAGE:000000014000F667                 pop     rdi
PAGE:000000014000F668                 pop     rsi
PAGE:000000014000F669                 pop     rbp
PAGE:000000014000F66A                 retn
PAGE:000000014000F66A ; } // starts at 14000F420
PAGE:000000014000F66A sub_14000F420   endp
PAGE:000000014000F66A
PAGE:000000014000F66A ; ---------------------------------------------------------------------------
PAGE:000000014000F66B algn_14000F66B:                         ; DATA XREF: .pdata:000000014000E360↑o
PAGE:000000014000F66B                 align 10h
PAGE:000000014000F670 ; const WCHAR SourceString
PAGE:000000014000F670 SourceString:                           ; DATA XREF: sub_14000F308+1B↑o
PAGE:000000014000F670                 text "UTF-16LE", 'PsGetVersion',0
PAGE:000000014000F68A                 align 10h
PAGE:000000014000F690 ; const WCHAR aWmitracemessag
PAGE:000000014000F690 aWmitracemessag:                        ; DATA XREF: sub_14000F308+36↑o
PAGE:000000014000F690                 text "UTF-16LE", 'WmiTraceMessage',0
PAGE:000000014000F6B0 ; const WCHAR aWmiquerytracei
PAGE:000000014000F6B0 aWmiquerytracei:                        ; DATA XREF: sub_14000F308+58↑o
PAGE:000000014000F6B0                 text "UTF-16LE", 'WmiQueryTraceInformation',0
PAGE:000000014000F6E2                 align 10h
PAGE:000000014000F6F0 ; const WCHAR aEtwregistercla
PAGE:000000014000F6F0 aEtwregistercla:                        ; DATA XREF: sub_14000F308+AF↑o
PAGE:000000014000F6F0                 text "UTF-16LE", 'EtwRegisterClassicProvider',0
PAGE:000000014000F726                 align 10h
PAGE:000000014000F730 ; const WCHAR aEtwunregister
PAGE:000000014000F730 aEtwunregister:                         ; DATA XREF: sub_14000F308+D6↑o
PAGE:000000014000F730                 text "UTF-16LE", 'EtwUnregister',0
PAGE:000000014000F74C                 align 100h
PAGE:000000014000F800                 dq 100h dup(?)
PAGE:000000014000F800 PAGE            ends
PAGE:000000014000F800
INIT:0000000140010000 ; Section 6. (virtual address 00010000)
INIT:0000000140010000 ; Virtual size                  : 00000702 (   1794.)
INIT:0000000140010000 ; Section size in file          : 00000800 (   2048.)
INIT:0000000140010000 ; Offset to raw data for section: 0000C400
INIT:0000000140010000 ; Flags 62000020: Text Discardable Executable Readable
INIT:0000000140010000 ; Alignment     : default
INIT:0000000140010000 ; ===========================================================================
INIT:0000000140010000
INIT:0000000140010000 ; Segment type: Pure code
INIT:0000000140010000 ; Segment permissions: Read/Execute
INIT:0000000140010000 INIT            segment para public 'CODE' use64
INIT:0000000140010000                 assume cs:INIT
INIT:0000000140010000                 ;org 140010000h
INIT:0000000140010000                 assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing
INIT:0000000140010000
INIT:0000000140010000 ; =============== S U B R O U T I N E =======================================
INIT:0000000140010000
INIT:0000000140010000 ; Attributes: bp-based frame fpd=57h
INIT:0000000140010000
INIT:0000000140010000 ; __int64 __fastcall sub_140010000(__int64, __int64)
INIT:0000000140010000 sub_140010000   proc near               ; CODE XREF: sub_140009F6C+26↑p
INIT:0000000140010000                                         ; sub_140009F6C+BA↑p
INIT:0000000140010000                                         ; DATA XREF: ...
INIT:0000000140010000
INIT:0000000140010000 var_A0          = qword ptr -0A0h
INIT:0000000140010000 var_98          = qword ptr -98h
INIT:0000000140010000 var_80          = xmmword ptr -80h
INIT:0000000140010000 var_70          = xmmword ptr -70h
INIT:0000000140010000 var_60          = xmmword ptr -60h
INIT:0000000140010000 var_50          = qword ptr -50h
INIT:0000000140010000 var_48          = qword ptr -48h
INIT:0000000140010000 var_40          = qword ptr -40h
INIT:0000000140010000 var_38          = xmmword ptr -38h
INIT:0000000140010000 var_28          = qword ptr -28h
INIT:0000000140010000 arg_10          = qword ptr  20h
INIT:0000000140010000
INIT:0000000140010000 ; __unwind { // __GSHandlerCheck
INIT:0000000140010000                 mov     [rsp-8+arg_10], rbx
INIT:0000000140010005                 push    rbp
INIT:0000000140010006                 push    rsi
INIT:0000000140010007                 push    rdi
INIT:0000000140010008                 push    r12
INIT:000000014001000A                 push    r15
INIT:000000014001000C                 lea     rbp, [rsp-37h]
INIT:0000000140010011                 sub     rsp, 0A0h
INIT:0000000140010018                 mov     rax, cs:__security_cookie
INIT:000000014001001F                 xor     rax, rsp
INIT:0000000140010022                 mov     [rbp+57h+var_28], rax
INIT:0000000140010026                 xor     esi, esi
INIT:0000000140010028                 mov     cs:stru_14000D110.Timer, 1
INIT:0000000140010033                 lea     rax, unk_14000B1A0
INIT:000000014001003A                 mov     qword ptr cs:stru_14000D110.Type, rsi
INIT:0000000140010041                 mov     cs:stru_14000D110.DriverObject, rax
INIT:0000000140010048                 mov     rbx, rdx
INIT:000000014001004B                 mov     cs:stru_14000D110.NextDevice, rsi
INIT:0000000140010052                 mov     rdi, rcx
INIT:0000000140010055                 mov     cs:stru_14000D110.CurrentIrp, rsi
INIT:000000014001005C                 mov     cs:stru_14000D110.DeviceExtension, rsi
INIT:0000000140010063                 mov     cs:stru_14000D110.DeviceType, esi
INIT:0000000140010069                 call    sub_14000F308
INIT:000000014001006E                 mov     rdx, rbx
INIT:0000000140010071                 mov     cs:stru_14000D110.CurrentIrp, rsi
INIT:0000000140010078                 mov     rcx, rdi
INIT:000000014001007B                 call    sub_14000F240
INIT:0000000140010080                 lea     r15, off_14000D008
INIT:0000000140010087                 cmp     cs:off_14000D008, r15
INIT:000000014001008E                 lea     r12, unk_14000B2D0
INIT:0000000140010095                 jz      short loc_1400100E7
INIT:0000000140010097                 mov     rcx, cs:DeviceObject
INIT:000000014001009E                 cmp     [rcx+48h], si
INIT:00000001400100A2                 jz      short loc_1400100BC
INIT:00000001400100A4                 mov     rcx, [rcx+40h]
INIT:00000001400100A8                 lea     r9d, [rsi+0Ah]
INIT:00000001400100AC                 lea     r8d, [rsi+4]
INIT:00000001400100B0                 mov     [rsp+0C0h+var_A0], r12
INIT:00000001400100B5                 mov     dl, 5
INIT:00000001400100B7                 call    sub_1400016A8
INIT:00000001400100BC
INIT:00000001400100BC loc_1400100BC:                          ; CODE XREF: sub_140010000+A2↑j
INIT:00000001400100BC                 cmp     cs:off_14000D008, r15
INIT:00000001400100C3                 jz      short loc_1400100E7
INIT:00000001400100C5                 mov     rcx, cs:DeviceObject
INIT:00000001400100CC                 mov     r9d, 0Eh
INIT:00000001400100D2                 mov     [rsp+0C0h+var_A0], r12
INIT:00000001400100D7                 mov     rcx, [rcx+40h]
INIT:00000001400100DB                 lea     r8d, [r9-0Ah]
INIT:00000001400100DF                 mov     dl, r8b
INIT:00000001400100E2                 call    sub_1400016A8
INIT:00000001400100E7
INIT:00000001400100E7 loc_1400100E7:                          ; CODE XREF: sub_140010000+95↑j
INIT:00000001400100E7                                         ; sub_140010000+C3↑j
INIT:00000001400100E7                 xor     eax, eax
INIT:00000001400100E9                 mov     [rbp+57h+var_48], 20h ; ' '
INIT:00000001400100F1                 mov     [rbp+57h+var_50], rax
INIT:00000001400100F5                 lea     rcx, [rbp+57h+var_48]
INIT:00000001400100F9                 xorps   xmm0, xmm0
INIT:00000001400100FC                 mov     [rsp+0C0h+var_98], rsi
INIT:0000000140010101                 movups  [rbp+57h+var_80], xmm0
INIT:0000000140010105                 lea     rax, sub_14000F000
INIT:000000014001010C                 mov     dword ptr [rbp+57h+var_80], 38h ; '8'
INIT:0000000140010113                 mov     qword ptr [rbp+57h+var_80+8], rax
INIT:0000000140010117                 lea     r9, [rbp+57h+var_80]
INIT:000000014001011B                 movups  [rbp+57h+var_70], xmm0
INIT:000000014001011F                 lea     rax, sub_14000F0C0
INIT:0000000140010126                 mov     dword ptr [rbp+57h+var_70+8], 1
INIT:000000014001012D                 mov     [rbp+57h+var_40], rax
INIT:0000000140010131                 mov     r8, rbx
INIT:0000000140010134                 mov     rax, cs:qword_14000D388
INIT:000000014001013B                 mov     rdx, rdi
INIT:000000014001013E                 movups  [rbp+57h+var_60], xmm0
INIT:0000000140010142                 mov     dword ptr [rbp+57h+var_70+0Ch], 1
INIT:0000000140010149                 movdqu  [rbp+57h+var_38], xmm0
INIT:000000014001014E                 mov     rax, [rax+3A0h]
INIT:0000000140010155                 mov     [rsp+0C0h+var_A0], rcx
INIT:000000014001015A                 mov     rcx, cs:qword_14000D390
INIT:0000000140010161                 call    cs:__guard_dispatch_icall_fptr
INIT:0000000140010167                 mov     ebx, eax
INIT:0000000140010169                 test    eax, eax
INIT:000000014001016B                 jns     short loc_1400101A6
INIT:000000014001016D                 lfence
INIT:0000000140010170                 cmp     cs:off_14000D008, r15
INIT:0000000140010177                 jz      short loc_14001019E
INIT:0000000140010179                 mov     rcx, cs:DeviceObject
INIT:0000000140010180                 mov     r9d, 0Fh
INIT:0000000140010186                 mov     dword ptr [rsp+0C0h+var_98], eax
INIT:000000014001018A                 mov     dl, 2
INIT:000000014001018C                 mov     [rsp+0C0h+var_A0], r12
INIT:0000000140010191                 mov     rcx, [rcx+40h]
INIT:0000000140010195                 lea     r8d, [r9-0Bh]
INIT:0000000140010199                 call    sub_14000176C
INIT:000000014001019E
INIT:000000014001019E loc_14001019E:                          ; CODE XREF: sub_140010000+177↑j
INIT:000000014001019E                 mov     rcx, rdi
INIT:00000001400101A1                 call    sub_14000F1A0
INIT:00000001400101A6
INIT:00000001400101A6 loc_1400101A6:                          ; CODE XREF: sub_140010000+16B↑j
INIT:00000001400101A6                 cmp     cs:off_14000D008, r15
INIT:00000001400101AD                 jz      short loc_1400101DA
INIT:00000001400101AF                 mov     rcx, cs:DeviceObject
INIT:00000001400101B6                 cmp     [rcx+48h], si
INIT:00000001400101BA                 jz      short loc_1400101DA
INIT:00000001400101BC                 mov     rcx, [rcx+40h]
INIT:00000001400101C0                 mov     r9d, 10h
INIT:00000001400101C6                 mov     dword ptr [rsp+0C0h+var_98], ebx
INIT:00000001400101CA                 mov     dl, 5
INIT:00000001400101CC                 mov     [rsp+0C0h+var_A0], r12
INIT:00000001400101D1                 lea     r8d, [r9-0Ch]
INIT:00000001400101D5                 call    sub_14000176C
INIT:00000001400101DA
INIT:00000001400101DA loc_1400101DA:                          ; CODE XREF: sub_140010000+1AD↑j
INIT:00000001400101DA                                         ; sub_140010000+1BA↑j
INIT:00000001400101DA                 mov     eax, ebx
INIT:00000001400101DC                 mov     rcx, [rbp+57h+var_28]
INIT:00000001400101E0                 xor     rcx, rsp        ; StackCookie
INIT:00000001400101E3                 call    __security_check_cookie
INIT:00000001400101E8                 mov     rbx, [rsp+0C0h+arg_10]
INIT:00000001400101F0                 add     rsp, 0A0h
INIT:00000001400101F7                 pop     r15
INIT:00000001400101F9                 pop     r12
INIT:00000001400101FB                 pop     rdi
INIT:00000001400101FC                 pop     rsi
INIT:00000001400101FD                 pop     rbp
INIT:00000001400101FE                 retn
INIT:00000001400101FE ; } // starts at 140010000
INIT:00000001400101FE sub_140010000   endp
INIT:00000001400101FE
INIT:00000001400101FE ; ---------------------------------------------------------------------------
INIT:00000001400101FF algn_1400101FF:                         ; DATA XREF: .pdata:000000014000E36C↑o
INIT:00000001400101FF                 align 20h
INIT:0000000140010200
INIT:0000000140010200 ; =============== S U B R O U T I N E =======================================
INIT:0000000140010200
INIT:0000000140010200
INIT:0000000140010200 ; uintptr_t sub_140010200()
INIT:0000000140010200 sub_140010200   proc near               ; CODE XREF: DriverEntry+10↑p
INIT:0000000140010200                 mov     rax, cs:__security_cookie
INIT:0000000140010207                 test    rax, rax
INIT:000000014001020A                 jz      short loc_140010227
INIT:000000014001020C                 mov     rcx, 2B992DDFA232h
INIT:0000000140010216                 cmp     rax, rcx
INIT:0000000140010219                 jz      short loc_140010227
INIT:000000014001021B                 not     rax
INIT:000000014001021E                 mov     cs:qword_14000D068, rax
INIT:0000000140010225                 retn
INIT:0000000140010225 ; ---------------------------------------------------------------------------
INIT:0000000140010226                 db 0CCh
INIT:0000000140010227 ; ---------------------------------------------------------------------------
INIT:0000000140010227
INIT:0000000140010227 loc_140010227:                          ; CODE XREF: sub_140010200+A↑j
INIT:0000000140010227                                         ; sub_140010200+19↑j
INIT:0000000140010227                 mov     ecx, 6
INIT:000000014001022C                 int     29h             ; Win8: RtlFailFast(ecx)
INIT:000000014001022C sub_140010200   endp
INIT:000000014001022C
INIT:000000014001022C ; ---------------------------------------------------------------------------
INIT:000000014001022E                 align 10h
INIT:0000000140010230 __IMPORT_DESCRIPTOR_ntoskrnl_exe dd rva off_140010330 ; Import Name Table
INIT:0000000140010234                 dd 0                    ; Time stamp
INIT:0000000140010238                 dd 0                    ; Forwarder Chain
INIT:000000014001023C                 dd rva aNtoskrnlExe     ; DLL Name
INIT:0000000140010240                 dd rva RtlInitUnicodeString ; Import Address Table
INIT:0000000140010244 __IMPORT_DESCRIPTOR_HIDPARSE_SYS dd rva off_140010298 ; Import Name Table
INIT:0000000140010248                 dd 0                    ; Time stamp
INIT:000000014001024C                 dd 0                    ; Forwarder Chain
INIT:0000000140010250                 dd rva aHidparseSys     ; DLL Name
INIT:0000000140010254                 dd rva __imp_HidP_GetCaps ; Import Address Table
INIT:0000000140010258 __IMPORT_DESCRIPTOR_WppRecorder_sys dd rva off_140010308 ; Import Name Table
INIT:000000014001025C                 dd 0                    ; Time stamp
INIT:0000000140010260                 dd 0                    ; Forwarder Chain
INIT:0000000140010264                 dd rva aWpprecorderSys  ; DLL Name
INIT:0000000140010268                 dd rva __imp_imp_WppRecorderReplay ; Import Address Table
INIT:000000014001026C __IMPORT_DESCRIPTOR_WDFLDR_SYS dd rva off_1400102E0 ; Import Name Table
INIT:0000000140010270                 dd 0                    ; Time stamp
INIT:0000000140010274                 dd 0                    ; Forwarder Chain
INIT:0000000140010278                 dd rva aWdfldrSys       ; DLL Name
INIT:000000014001027C                 dd rva __imp_WdfVersionBindClass ; Import Address Table
INIT:0000000140010280                 dq 3 dup(0)
INIT:0000000140010298 ;
INIT:0000000140010298 ; Import names for HIDPARSE.SYS
INIT:0000000140010298 ;
INIT:0000000140010298 off_140010298   dq rva word_140010594   ; DATA XREF: INIT:__IMPORT_DESCRIPTOR_HIDPARSE_SYS↑o
INIT:00000001400102A0                 dq rva word_140010572
INIT:00000001400102A8                 dq rva word_1400105A4
INIT:00000001400102B0                 dq rva word_1400105C0
INIT:00000001400102B8                 dq rva word_1400105D2
INIT:00000001400102C0                 dq rva word_1400105E4
INIT:00000001400102C8                 dq rva word_1400105FA
INIT:00000001400102D0                 dq rva word_140010552
INIT:00000001400102D8                 dq 0
INIT:00000001400102E0 ;
INIT:00000001400102E0 ; Import names for WDFLDR.SYS
INIT:00000001400102E0 ;
INIT:00000001400102E0 off_1400102E0   dq rva word_1400106C8   ; DATA XREF: INIT:__IMPORT_DESCRIPTOR_WDFLDR_SYS↑o
INIT:00000001400102E8                 dq rva word_1400106B4
INIT:00000001400102F0                 dq rva word_1400106DE
INIT:00000001400102F8                 dq rva word_1400106A2
INIT:0000000140010300                 dq 0
INIT:0000000140010308 ;
INIT:0000000140010308 ; Import names for WppRecorder.sys
INIT:0000000140010308 ;
INIT:0000000140010308 off_140010308   dq rva word_140010654   ; DATA XREF: INIT:__IMPORT_DESCRIPTOR_WppRecorder_sys↑o
INIT:0000000140010310                 dq rva word_140010642
INIT:0000000140010318                 dq rva word_140010630
INIT:0000000140010320                 dq rva word_14001061E
INIT:0000000140010328                 dq 0
INIT:0000000140010330 ;
INIT:0000000140010330 ; Import names for ntoskrnl.exe
INIT:0000000140010330 ;
INIT:0000000140010330 off_140010330   dq rva word_1400104BE   ; DATA XREF: INIT:__IMPORT_DESCRIPTOR_ntoskrnl_exe↑o
INIT:0000000140010338                 dq rva word_1400104AE
INIT:0000000140010340                 dq rva word_1400104A4
INIT:0000000140010348                 dq rva word_1400104D6
INIT:0000000140010350                 dq rva word_140010470
INIT:0000000140010358                 dq rva word_14001044C
INIT:0000000140010360                 dq rva word_14001042A
INIT:0000000140010368                 dq rva word_14001050E
INIT:0000000140010370                 dq rva word_1400104F2
INIT:0000000140010378                 dq rva word_1400103DC
INIT:0000000140010380                 dq rva word_14001052A
INIT:0000000140010388                 dq rva word_14001048C
INIT:0000000140010390                 dq rva word_14001067C
INIT:0000000140010398                 dq rva word_140010694
INIT:00000001400103A0                 dq rva word_140010412
INIT:00000001400103A8                 dq rva word_1400103FA
INIT:00000001400103B0                 dq rva word_1400103EC
INIT:00000001400103B8                 dq rva word_1400103C8
INIT:00000001400103C0                 dq 0
INIT:00000001400103C8 word_1400103C8  dw 483h                 ; DATA XREF: INIT:00000001400103B8↑o
INIT:00000001400103CA                 db 'KeInitializeEvent',0
INIT:00000001400103DC word_1400103DC  dw 446h                 ; DATA XREF: INIT:0000000140010378↑o
INIT:00000001400103DE                 db 'KeClearEvent',0
INIT:00000001400103EB                 align 4
INIT:00000001400103EC word_1400103EC  dw 505h                 ; DATA XREF: INIT:00000001400103B0↑o
INIT:00000001400103EE                 db 'KeSetEvent',0
INIT:00000001400103F9                 align 2
INIT:00000001400103FA word_1400103FA  dw 530h                 ; DATA XREF: INIT:00000001400103A8↑o
INIT:00000001400103FC                 db 'KeWaitForSingleObject',0
INIT:0000000140010412 word_140010412  dw 6DFh                 ; DATA XREF: INIT:00000001400103A0↑o
INIT:0000000140010414                 db 'PsCreateSystemThread',0
INIT:0000000140010429                 align 2
INIT:000000014001042A word_14001042A  dw 391h                 ; DATA XREF: INIT:0000000140010360↑o
INIT:000000014001042C                 db 'IoRegisterPlugPlayNotification',0
INIT:000000014001044B                 align 4
INIT:000000014001044C word_14001044C  dw 3E7h                 ; DATA XREF: INIT:0000000140010358↑o
INIT:000000014001044E                 db 'IoUnregisterPlugPlayNotification',0
INIT:000000014001046F                 align 10h
INIT:0000000140010470 word_140010470  dw 662h                 ; DATA XREF: INIT:0000000140010350↑o
INIT:0000000140010472                 db 'ObReferenceObjectByHandle',0
INIT:000000014001048C word_14001048C  dw 672h                 ; DATA XREF: INIT:0000000140010388↑o
INIT:000000014001048E                 db 'ObfDereferenceObject',0
INIT:00000001400104A3                 align 4
INIT:00000001400104A4 word_1400104A4  dw 0A88h                ; DATA XREF: INIT:0000000140010340↑o
INIT:00000001400104A6                 db 'ZwClose',0
INIT:00000001400104AE word_1400104AE  dw 789h                 ; DATA XREF: INIT:0000000140010338↑o
INIT:00000001400104B0                 db 'PsThreadType',0
INIT:00000001400104BD                 align 2
INIT:00000001400104BE word_1400104BE  dw 87Eh                 ; DATA XREF: INIT:off_140010330↑o
INIT:00000001400104C0                 db 'RtlInitUnicodeString',0
INIT:00000001400104D5                 align 2
INIT:00000001400104D6 word_1400104D6  dw 584h                 ; DATA XREF: INIT:0000000140010348↑o
INIT:00000001400104D8                 db 'MmGetSystemRoutineAddress',0
INIT:00000001400104F2 word_1400104F2  dw 400h                 ; DATA XREF: INIT:0000000140010370↑o
INIT:00000001400104F4                 db 'IoWMIRegistrationControl',0
INIT:000000014001050D                 align 2
INIT:000000014001050E word_14001050E  dw 52Eh                 ; DATA XREF: INIT:0000000140010368↑o
INIT:0000000140010510                 db 'KeWaitForMultipleObjects',0
INIT:0000000140010529                 align 2
INIT:000000014001052A word_14001052A  dw 788h                 ; DATA XREF: INIT:0000000140010380↑o
INIT:000000014001052C                 db 'PsTerminateSystemThread',0
INIT:0000000140010544 aNtoskrnlExe    db 'ntoskrnl.exe',0     ; DATA XREF: INIT:000000014001023C↑o
INIT:0000000140010551                 align 2
INIT:0000000140010552 word_140010552  dw 5                    ; DATA XREF: INIT:00000001400102D0↑o
INIT:0000000140010554                 db 'HidP_GetCollectionDescription',0
INIT:0000000140010572 word_140010572  dw 2                    ; DATA XREF: INIT:00000001400102A0↑o
INIT:0000000140010574                 db 'HidP_FreeCollectionDescription',0
INIT:0000000140010593                 align 4
INIT:0000000140010594 word_140010594  dw 4                    ; DATA XREF: INIT:off_140010298↑o
INIT:0000000140010596                 db 'HidP_GetCaps',0
INIT:00000001400105A3                 align 4
INIT:00000001400105A4 word_1400105A4  dw 0Bh                  ; DATA XREF: INIT:00000001400102A8↑o
INIT:00000001400105A6                 db 'HidP_GetSpecificValueCaps',0
INIT:00000001400105C0 word_1400105C0  dw 18h                  ; DATA XREF: INIT:00000001400102B0↑o
INIT:00000001400105C2                 db 'HidP_SetUsages',0
INIT:00000001400105D1                 align 2
INIT:00000001400105D2 word_1400105D2  dw 0Eh                  ; DATA XREF: INIT:00000001400102B8↑o
INIT:00000001400105D4                 db 'HidP_GetUsages',0
INIT:00000001400105E3                 align 4
INIT:00000001400105E4 word_1400105E4  dw 16h                  ; DATA XREF: INIT:00000001400102C0↑o
INIT:00000001400105E6                 db 'HidP_SetUsageValue',0
INIT:00000001400105F9                 align 2
INIT:00000001400105FA word_1400105FA  dw 0Ch                  ; DATA XREF: INIT:00000001400102C8↑o
INIT:00000001400105FC                 db 'HidP_GetUsageValue',0
INIT:000000014001060F                 align 10h
INIT:0000000140010610 aHidparseSys    db 'HIDPARSE.SYS',0     ; DATA XREF: INIT:0000000140010250↑o
INIT:000000014001061D                 align 2
INIT:000000014001061E word_14001061E  dw 4                    ; DATA XREF: INIT:0000000140010320↑o
INIT:0000000140010620                 db 'WppAutoLogTrace',0
INIT:0000000140010630 word_140010630  dw 2                    ; DATA XREF: INIT:0000000140010318↑o
INIT:0000000140010632                 db 'WppAutoLogStart',0
INIT:0000000140010642 word_140010642  dw 3                    ; DATA XREF: INIT:0000000140010310↑o
INIT:0000000140010644                 db 'WppAutoLogStop',0
INIT:0000000140010653                 align 4
INIT:0000000140010654 word_140010654  dw 10h                  ; DATA XREF: INIT:off_140010308↑o
INIT:0000000140010656                 db 'imp_WppRecorderReplay',0
INIT:000000014001066C aWpprecorderSys db 'WppRecorder.sys',0  ; DATA XREF: INIT:0000000140010264↑o
INIT:000000014001067C word_14001067C  dw 7DBh                 ; DATA XREF: INIT:0000000140010390↑o
INIT:000000014001067E                 db 'RtlCopyUnicodeString',0
INIT:0000000140010693                 align 4
INIT:0000000140010694 word_140010694  dw 5Eh                  ; DATA XREF: INIT:0000000140010398↑o
INIT:0000000140010696                 db 'DbgPrintEx',0
INIT:00000001400106A1                 align 2
INIT:00000001400106A2 word_1400106A2  dw 6                    ; DATA XREF: INIT:00000001400102F8↑o
INIT:00000001400106A4                 db 'WdfVersionBind',0
INIT:00000001400106B3                 align 4
INIT:00000001400106B4 word_1400106B4  dw 8                    ; DATA XREF: INIT:00000001400102E8↑o
INIT:00000001400106B6                 db 'WdfVersionUnbind',0
INIT:00000001400106C7                 align 8
INIT:00000001400106C8 word_1400106C8  dw 7                    ; DATA XREF: INIT:off_1400102E0↑o
INIT:00000001400106CA                 db 'WdfVersionBindClass',0
INIT:00000001400106DE word_1400106DE  dw 9                    ; DATA XREF: INIT:00000001400102F0↑o
INIT:00000001400106E0                 db 'WdfVersionUnbindClass',0
INIT:00000001400106F6 aWdfldrSys      db 'WDFLDR.SYS',0       ; DATA XREF: INIT:0000000140010278↑o
INIT:0000000140010701                 align 100h
INIT:0000000140010800                 dq 100h dup(?)
INIT:0000000140010800 INIT            ends
INIT:0000000140010800
INIT:0000000140010800
INIT:0000000140010800                 end DriverEntry
